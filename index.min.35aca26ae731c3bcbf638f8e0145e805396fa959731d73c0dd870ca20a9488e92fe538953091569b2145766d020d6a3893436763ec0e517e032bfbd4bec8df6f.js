var suggestions = document.getElementById('suggestions');
var userinput = document.getElementById('userinput');

document.addEventListener('keydown', inputFocus);

function inputFocus(e) {

  if (e.keyCode === 191 ) {
    e.preventDefault();
    userinput.focus();
  }

  if (e.keyCode === 27 ) {
    userinput.blur();
    suggestions.classList.add('d-none');
  }

}

document.addEventListener('click', function(event) {

  var isClickInsideElement = suggestions.contains(event.target);

  if (!isClickInsideElement) {
    suggestions.classList.add('d-none');
  }

});

/*
Source:
  - https://dev.to/shubhamprakash/trap-focus-using-javascript-6a3
*/

document.addEventListener('keydown',suggestionFocus);

function suggestionFocus(e){

  const focusableSuggestions= suggestions.querySelectorAll('a');
  const focusable= [...focusableSuggestions];
  const index = focusable.indexOf(document.activeElement);

  let nextIndex = 0;

  if (e.keyCode === 38) {
    e.preventDefault();
    nextIndex= index > 0 ? index-1 : 0;
    focusableSuggestions[nextIndex].focus();
  }
  else if (e.keyCode === 40) {
    e.preventDefault();
    nextIndex= index+1 < focusable.length ? index+1 : index;
    focusableSuggestions[nextIndex].focus();
  }

}


/*
Source:
  - https://github.com/nextapps-de/flexsearch#index-documents-field-search
  - https://raw.githack.com/nextapps-de/flexsearch/master/demo/autocomplete.html
*/

(function(){

  var index = new FlexSearch.Document({
    tokenize: "forward",
    cache: 100,
    document: {
      id: 'id',
      store: [
        "href", "title", "description"
      ],
      index: ["title", "description", "content"]
    }
  });


  // Not yet supported: https://github.com/nextapps-de/flexsearch#complex-documents

  /*
  var docs = [
    {
        id: 0,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-alibaba/",
        title: "Spring Cloud Alibaba",
        description: "Spring Cloud Alibaba为分布式应用开发提供了一个一站式解决方案。它包含了开发分布式应用所需的所有组件，使你能够轻松地使用Spring Cloud开发你的应用。",
        content: "\u003cp\u003eSpring Cloud Alibaba为分布式应用开发提供了一个一站式解决方案。它包含了开发分布式应用所需的所有组件，使你能够轻松地使用Spring Cloud开发你的应用。\u003c/p\u003e\n\u003cp\u003e通过Spring Cloud Alibaba，你只需要添加一些注释和少量的配置，就可以将Spring Cloud应用与阿里巴巴的分布式解决方案连接起来，并利用阿里巴巴的中间件建立一个分布式应用系统。\u003c/p\u003e\n\u003ch2 id=\"官方仓库\"\u003e官方仓库\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/alibaba/spring-cloud-alibaba/wiki\"\u003ehttps://github.com/alibaba/spring-cloud-alibaba/wiki\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e官方各个组件都有十分优秀的中文文档，这里就不翻译了。\u003c/p\u003e\n\u003c/blockquote\u003e\n"
      },
    {
        id: 1,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-bus/",
        title: "Spring Cloud Bus",
        description: "Spring Cloud Bus将分布式系统的节点与一个轻量级的消息代理联系起来。然后，这可以用来广播状态变化（如配置变化）或其他管理指令。该项目包括AMQP和Kafka代理的实现。另外，在classpath上找到的任何Spring Cloud Stream绑定器都可以作为传输工具开箱即用。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.2\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月22日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-bus/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-bus/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-bus\"\u003ehttps://github.com/spring-cloud/spring-cloud-bus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Bus将分布式系统的节点与一个轻量级的消息代理联系起来。然后，这可以用来广播状态变化（如配置变化）或其他管理指令。该项目包括AMQP和Kafka代理的实现。另外，在classpath上找到的任何Spring Cloud Stream绑定器都可以作为传输工具开箱即用。\u003c/p\u003e\n\u003ch2 id=\"1-快速开始\"\u003e1. 快速开始\u003c/h2\u003e\n\u003cp\u003e如果Spring Cloud Bus在classpath上检测到自己，它就会通过添加Spring Boot自动配置来工作。要启用总线，请将\u003ccode\u003espring-cloud-starter-bus-amqp\u003c/code\u003e或\u003ccode\u003espring-cloud-starter-bus-kafka\u003c/code\u003e添加到您的依赖性管理中。Spring Cloud会处理剩下的事情。确保代理（RabbitMQ或Kafka）是可用的并已配置。当在本地主机上运行时，你不需要做任何事情。如果你远程运行，请使用Spring Cloud Connectors或Spring Boot约定来定义代理凭证，如下面Rabbit的例子所示。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003erabbitmq\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emybroker.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5672\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e总线目前支持向所有监听的节点或某一特定服务的所有节点发送消息（由Eureka定义）。\u003ccode\u003e/bus/*\u003c/code\u003e执行器命名空间有一些HTTP端点。目前，有两个已经实现。第一个，\u003ccode\u003e/bus/env\u003c/code\u003e，发送键/值对以更新每个节点的Spring环境。第二个，\u003ccode\u003e/bus/refresh\u003c/code\u003e，重新加载每个应用程序的配置，就像它们都被ping到了\u003ccode\u003e/refresh\u003c/code\u003e端点一样。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Bus的启动程序涵盖了Rabbit和Kafka，因为这是最常见的两种实现方式。然而，Spring Cloud Stream是相当灵活的，而且该绑定器与\u003ccode\u003espring-cloud-bus\u003c/code\u003e一起使用。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-actuator-端点\"\u003e2. Actuator 端点\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Bus提供了两个端点，\u003ccode\u003e/actuator/busrefresh\u003c/code\u003e和\u003ccode\u003e/actuator/busenv\u003c/code\u003e，分别对应于Spring Cloud Commons中的单个执行器端点\u003ccode\u003e/actuator/refresh\u003c/code\u003e和\u003ccode\u003e/actuator/env\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"21-refresh-endpoint\"\u003e2.1. Refresh Endpoint\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e/actuator/busrefresh\u003c/code\u003e端点清除\u003ccode\u003eRefreshScope\u003c/code\u003e缓存并重新绑定\u003ccode\u003e@ConfigurationProperties\u003c/code\u003e。更多信息请参见 \u003ca href=\"https://docs.spring.io/spring-cloud-bus/docs/current/reference/html/#refresh-scope\"\u003eRefresh Scope\u003c/a\u003e 文档。\u003c/p\u003e\n\u003cp\u003e为了暴露\u003ccode\u003e/actuator/busrefresh\u003c/code\u003e端点，你需要向你的应用程序添加以下配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003emanagement.endpoints.web.exposure.include=busrefresh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"22--env-endpoint\"\u003e2.2.  Env Endpoint\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e/actuator/busenv\u003c/code\u003e端点用指定的键/值对在多个实例中更新每个实例环境。\u003c/p\u003e\n\u003cp\u003e为了暴露\u003ccode\u003e/actuator/busenv\u003c/code\u003e端点，你需要在你的应用程序中添加以下配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003emanagement.endpoints.web.exposure.include=busenv\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e/actuator/busenv\u003c/code\u003e端点接受\u003ccode\u003ePOST\u003c/code\u003e请求，请求体格式如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;key1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;value1\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-对一个实例进行寻址\"\u003e3. 对一个实例进行寻址\u003c/h2\u003e\n\u003cp\u003e应用程序的每个实例都有一个服务ID，其值可以用\u003ccode\u003espring.cloud.bus.id\u003c/code\u003e来设置，其值预计是一个用冒号分隔的标识符列表，从最不具体到最具体的顺序。默认值从环境中构建，作为\u003ccode\u003espring.application.name\u003c/code\u003e和\u003ccode\u003eserver.port\u003c/code\u003e的组合（或\u003ccode\u003espring.application.index\u003c/code\u003e，如果设置）。ID的默认值是以\u003ccode\u003eapp:index:id\u003c/code\u003e的形式构建的，其中。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapp\u003c/code\u003e是\u003ccode\u003evcap.application.name\u003c/code\u003e，如果它存在的话，或者是\u003ccode\u003espring.application.name\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eindex\u003c/code\u003e是\u003ccode\u003evcap.application.instance_index\u003c/code\u003e，如果它存在的话，\u003ccode\u003espring.application.index\u003c/code\u003e，\u003ccode\u003elocal.server.port\u003c/code\u003e，\u003ccode\u003eserver.port\u003c/code\u003e或\u003ccode\u003e0\u003c/code\u003e（按顺序排列）。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eid\u003c/code\u003e是\u003ccode\u003evcap.application.instance_id\u003c/code\u003e，如果它存在，或者是一个随机值。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHTTP 端点接受一个 \u0026ldquo;destination\u0026rdquo; 路径参数，如\u003ccode\u003e/busrefresh/customers:9000\u003c/code\u003e，其中\u003ccode\u003e目的地\u003c/code\u003e是一个服务 ID。如果该ID为总线上的一个实例所拥有，它就会处理该消息，而所有其他实例都会忽略它。\u003c/p\u003e\n\u003ch2 id=\"4-对一个服务的所有实例进行寻址\"\u003e4. 对一个服务的所有实例进行寻址\u003c/h2\u003e\n\u003cp\u003e\u0026ldquo;destination\u0026quot;参数在Spring的\u003ccode\u003ePathMatcher\u003c/code\u003e中使用（路径分隔符为冒号 - \u003ccode\u003e:\u003c/code\u003e ），以确定一个实例是否处理该消息。使用前面的例子，\u003ccode\u003e/busenv/customers:**\u003c/code\u003e针对 \u0026ldquo;customers \u0026ldquo;服务的所有实例，而不管服务ID的其他部分。\u003c/p\u003e\n\u003ch2 id=\"5-service-id-必须唯一\"\u003e5. Service ID 必须唯一\u003c/h2\u003e\n\u003cp\u003e总线尝试两次来消除对一个事件的处理\u0026ndash;一次来自原始的\u003ccode\u003eApplicationEvent\u003c/code\u003e，一次来自队列。为此，它检查发送的服务ID和当前的服务ID。如果一个服务的多个实例有相同的ID，事件就不会被处理。在本地机器上运行时，每个服务都在一个不同的端口上，该端口是 ID 的一部分。Cloud Foundry 提供了一个索引来进行区分。为确保 ID 在 Cloud Foundry 之外是唯一的，请将 \u003ccode\u003espring.application.index\u003c/code\u003e 设置为服务的每个实例的唯一内容。\u003c/p\u003e\n\u003ch2 id=\"6-定制消息代理\"\u003e6. 定制消息代理\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Bus使用\u003ca href=\"https://cloud.spring.io/spring-cloud-stream\"\u003eSpring Cloud Stream\u003c/a\u003e来广播消息。因此，为了让消息流动起来，你只需要在classpath中包含你选择的绑定器实现。对于使用AMQP（RabbitMQ）和Kafka（\u003ccode\u003espring-cloud-starter-bus-[amqp|kafka]\u003c/code\u003e）的总线，有一些方便的启动器。一般来说，Spring Cloud Stream依靠Spring Boot的自动配置约定来配置中间件。例如，AMQP代理地址可以通过\u003ccode\u003espring.rabbitmq.*\u003c/code\u003e配置属性来改变。Spring Cloud Bus在\u003ccode\u003espring.cloud.bus.*\u003c/code\u003e中拥有少量的本地配置属性（例如，\u003ccode\u003espring.cloud.bus.destination\u003c/code\u003e是用作外部中间件的主题名称）。通常情况下，默认值就足够了。\u003c/p\u003e\n\u003cp\u003e要了解更多关于如何定制消息代理的设置，请查阅Spring Cloud Stream文档。\u003c/p\u003e\n\u003ch2 id=\"7-追踪总线事件\"\u003e7. 追踪总线事件\u003c/h2\u003e\n\u003cp\u003e总线事件（\u003ccode\u003eRemoteApplicationEvent\u003c/code\u003e的子类）可以通过设置\u003ccode\u003espring.cloud.bus.trace.enabled=true\u003c/code\u003e来追踪。如果你这样做，Spring Boot \u003ccode\u003eTraceRepository\u003c/code\u003e（如果它存在的话）会显示每个事件的发送情况和每个服务实例的所有acks。下面的例子来自\u003ccode\u003e/trace\u003c/code\u003e端点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;timestamp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;2015-11-26T10:24:44.411+0000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;info\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;signal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spring.cloud.bus.ack\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;RefreshRemoteApplicationEvent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;c4d374b7-58ea-4928-a312-31984def293b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;stores:8081\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;*:**\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;timestamp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;2015-11-26T10:24:41.864+0000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;info\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;signal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spring.cloud.bus.sent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;RefreshRemoteApplicationEvent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;c4d374b7-58ea-4928-a312-31984def293b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;customers:9000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;*:**\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;timestamp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;2015-11-26T10:24:41.862+0000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;info\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;signal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spring.cloud.bus.ack\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;RefreshRemoteApplicationEvent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;c4d374b7-58ea-4928-a312-31984def293b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;customers:9000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;*:**\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的跟踪显示，一个 \u0026ldquo;RefreshRemoteApplicationEvent\u0026quot;从\u003ccode\u003ecustomers:9000\u003c/code\u003e发出，广播到所有服务，并由\u003ccode\u003ecustomers:9000\u003c/code\u003e和\u003ccode\u003estores:8081\u003c/code\u003e接收（acked）。\u003c/p\u003e\n\u003cp\u003e要自己处理ack信号，你可以为\u003ccode\u003eAckRemoteApplicationEvent\u003c/code\u003e和\u003ccode\u003eSentApplicationEvent\u003c/code\u003e类型添加一个\u003ccode\u003e@EventListener\u003c/code\u003e到你的应用程序（并启用跟踪）。另外，你也可以进入\u003ccode\u003eTraceRepository\u003c/code\u003e，从那里挖掘数据。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e任何总线应用都可以跟踪acks。然而，有时候，在一个中央服务中进行这项工作是很有用的，它可以对数据进行更复杂的查询，或者将其转发给专门的追踪服务。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"8-广播自定义事件\"\u003e8. 广播自定义事件\u003c/h2\u003e\n\u003cp\u003e总线可以携带任何类型的\u003ccode\u003eRemoteApplicationEvent\u003c/code\u003e的事件。默认的传输方式是JSON，反序列化器需要提前知道哪些类型将被使用。要注册一个新的类型，你必须把它放在\u003ccode\u003eorg.springframework.cloud.bus.event\u003c/code\u003e的一个子包中。\u003c/p\u003e\n\u003cp\u003e要自定义事件名称，你可以在你的自定义类上使用\u003ccode\u003e@JsonTypeName\u003c/code\u003e，或者依靠默认策略，即使用类的简单名称。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e生产者和消费者都需要访问该类的定义。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"81-在自定义包中注册事件\"\u003e8.1. 在自定义包中注册事件\u003c/h3\u003e\n\u003cp\u003e如果你不能或不想为你的自定义事件使用\u003ccode\u003eorg.springframework.cloud.bus.event\u003c/code\u003e的子包，你必须通过使用\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e注解指定哪些包来扫描\u003ccode\u003eRemoteApplicationEvent\u003c/code\u003e类型的事件。用\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e指定的包包括子包。\u003c/p\u003e\n\u003cp\u003e例如，考虑下面的自定义事件，称为\u003ccode\u003eMyEvent\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003ecom.acme\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyEvent\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eRemoteApplicationEvent\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过以下方式向deserializer注册该事件:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003ecom.acme\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RemoteApplicationEventScan\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBusConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果没有指定值，则使用\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e的类的包被注册。在这个例子中，\u003ccode\u003ecom.acme\u003c/code\u003e是通过使用\u003ccode\u003eBusConfiguration\u003c/code\u003e的包注册的。\u003c/p\u003e\n\u003cp\u003e你也可以通过使用\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e上的\u003ccode\u003evalue\u003c/code\u003e、\u003ccode\u003ebasePackages\u003c/code\u003e或\u003ccode\u003ebasePackageClasses\u003c/code\u003e属性明确指定要扫描的包，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003ecom.acme\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//@RemoteApplicationEventScan({\u0026#34;com.acme\u0026#34;, \u0026#34;foo.bar\u0026#34;})\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e//@RemoteApplicationEventScan(basePackages = {\u0026#34;com.acme\u0026#34;, \u0026#34;foo.bar\u0026#34;, \u0026#34;fizz.buzz\u0026#34;})\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@RemoteApplicationEventScan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebasePackageClasses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBusConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBusConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所有前面的\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e的例子都是等同的，即通过明确指定\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e上的包来注册\u003ccode\u003ecom.acme\u003c/code\u003e包。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你可以指定多个base packages进行扫描\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"9-配置属性\"\u003e9. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有与总线相关的配置属性列表，请查看\u003ca href=\"https://docs.spring.io/spring-cloud-bus/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      },
    {
        id: 2,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-circuit-breaker/",
        title: "Spring Cloud Circuit Breaker",
        description: "Spring Cloud Circuit breaker提供了一个跨越不同断路器实现的抽象。它提供了一个一致的API，可以在你的应用程序中使用，允许你的开发者选择最适合你的应用程序需求的断路器实现。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：2.0.2\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月22日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-circuitbreaker/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-circuitbreaker/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-circuitbreaker\"\u003ehttps://github.com/spring-cloud/spring-cloud-circuitbreaker\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Circuit breaker提供了一个跨越不同断路器实现的抽象。它提供了一个一致的API，可以在你的应用程序中使用，允许你的开发者选择最适合你的应用程序需求的断路器实现。\u003c/p\u003e\n\u003ch2 id=\"1-使用说明\"\u003e1. 使用说明\u003c/h2\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker项目包含Resilience4J和Spring Retry的实现。Spring Cloud CircuitBreaker中实现的API在Spring Cloud Commons中存在。这些API的使用文档位于\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-circuit-breaker\"\u003eSpring Cloud Commons documentation\u003c/a\u003e中。\u003c/p\u003e\n\u003ch3 id=\"11-配置resilience4j断路器\"\u003e1.1. 配置Resilience4J断路器\u003c/h3\u003e\n\u003ch4 id=\"111-starters\"\u003e1.1.1. Starters\u003c/h4\u003e\n\u003cp\u003eResilience4J的实现有两个启动器，一个用于reactive应用，一个用于非reactive应用。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j\u003c/code\u003e - 非reactive应用程序\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j\u003c/code\u003e - reactive应用程序\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"112-自动配置\"\u003e1.1.2. 自动配置\u003c/h4\u003e\n\u003cp\u003e你可以通过设置\u003ccode\u003espring.cloud.circuitbreaker.resilience4j.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来禁用Resilience4J自动配置。\u003c/p\u003e\n\u003ch4 id=\"113-默认配置\"\u003e1.1.3. 默认配置\u003c/h4\u003e\n\u003cp\u003e为了给所有的断路器提供一个默认的配置，创建一个\u003ccode\u003eCustomize\u003c/code\u003e bean，它被传递给\u003ccode\u003eResilience4JCircuitBreakerFactory\u003c/code\u003e或\u003ccode\u003eReactiveResilience4JCircuitBreakerFactory\u003c/code\u003e。\u003ccode\u003econfigureDefault\u003c/code\u003e方法可以用来提供一个默认的配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigureDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eResilience4JConfigBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofSeconds\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eReactive Example\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eReactiveResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigureDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eResilience4JConfigBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofSeconds\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e()).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"114-具体的断路器配置\"\u003e1.1.4. 具体的断路器配置\u003c/h4\u003e\n\u003cp\u003e与提供默认配置类似，你可以创建一个\u003ccode\u003eCustomize\u003c/code\u003e Bean，它被传递给一个 \u003ccode\u003eResilience4JCircuitBreakerFactory\u003c/code\u003e 或 \u003ccode\u003eReactiveResilience4JCircuitBreakerFactory\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofSeconds\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e()),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slow\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e除了配置被创建的断路器外，你还可以在断路器被创建后但被返回给调用者之前对其进行自定义。要做到这一点，你可以使用\u003ccode\u003eaddCircuitBreakerCustomizer\u003c/code\u003e方法。这对于向Resilience4J断路器添加事件处理程序很有用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddCircuitBreakerCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecircuitBreaker\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecircuitBreaker\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetEventPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonError\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalFluxErrorConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eonSuccess\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalFluxSuccessConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;normalflux\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eReactive Example\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eReactiveResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofSeconds\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e()),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slow\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slowflux\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddCircuitBreakerCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecircuitBreaker\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecircuitBreaker\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetEventPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonError\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalFluxErrorConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eonSuccess\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalFluxSuccessConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;normalflux\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n     \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"115-断路器属性配置\"\u003e1.1.5. 断路器属性配置\u003c/h4\u003e\n\u003cp\u003e你可以在你的应用程序的配置属性文件中配置\u003ccode\u003eCircuitBreaker\u003c/code\u003e和\u003ccode\u003eTimeLimiter\u003c/code\u003e实例。属性配置比Java\u003ccode\u003eCustomizer\u003c/code\u003e配置具有更高的优先级。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eresilience4j.circuitbreaker\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nt\"\u003einstances\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendA\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eregisterHealthIndicator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eslidingWindowSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e100\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eregisterHealthIndicator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eslidingWindowSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003epermittedNumberOfCallsInHalfOpenState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eslidingWindowType\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eTIME_BASED\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003erecordFailurePredicate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eio.github.robwin.exception.RecordFailurePredicate\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eresilience4j.timelimiter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nt\"\u003einstances\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendA\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e2s\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003ecancelRunningFuture\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e1s\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003ecancelRunningFuture\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e关于Resilience4j属性配置的更多信息，见\u003ca href=\"https://resilience4j.readme.io/docs/getting-started-3#configuration\"\u003eResilience4J Spring Boot 2配置\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"116-隔离模式支持\"\u003e1.1.6. 隔离模式支持\u003c/h4\u003e\n\u003cp\u003e如果\u003ccode\u003eresilience4j-bulkhead\u003c/code\u003e在classpath上，Spring Cloud CircuitBreaker将用Resilience4j Bulkhead来包装所有方法。你可以通过设置\u003ccode\u003espring.cluitbreaker.bulkhead.resilience4j.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来禁用Resilience4j Bulkhead。\u003c/p\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker Resilience4j提供两种隔离模式的实现。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eSemaphoreBulkhead\u003c/code\u003e，使用Semaphores。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFixedThreadPoolBulkhead\u003c/code\u003e，它使用一个有界队列和一个固定的线程池。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e默认情况下，Spring Cloud CircuitBreaker Resilience4j使用\u003ccode\u003eFixedThreadPoolBulkhead\u003c/code\u003e。更多关于实现Bulkhead模式的信息请参见\u003ca href=\"https://resilience4j.readme.io/docs/bulkhead\"\u003eResilience4j Bulkhead\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eCustomizer\u0026lt;Resilience4jBulkheadProvider\u0026gt;\u003c/code\u003e可以用来提供默认的\u003ccode\u003eBulkhead\u003c/code\u003e和\u003ccode\u003eThreadPoolBulkhead\u003c/code\u003e配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4jBulkheadProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultBulkheadCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigureDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eResilience4jBulkheadConfigurationBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003emaxConcurrentCalls\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethreadPoolBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eThreadPoolBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ecoreThreadPoolSize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003emaxThreadPoolSize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"117-具体的隔离配置\"\u003e1.1.7. 具体的隔离配置\u003c/h4\u003e\n\u003cp\u003e与证明默认的\u0026rsquo;Bulkhead\u0026rsquo;或\u0026rsquo;ThreadPoolBulkhead\u0026rsquo;配置类似，你可以创建一个\u003ccode\u003eCustomize\u003c/code\u003e bean，这个bean被传递给\u003ccode\u003eResilience4jBulkheadProvider\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4jBulkheadProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowBulkheadProviderCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003emaxConcurrentCalls\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethreadPoolBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eThreadPoolBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e()),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slowBulkhead\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e除了配置被创建的隔板外，你还可以在隔板和线程池被创建后，但在返回给调用者之前，对其进行自定义。要做到这一点，你可以使用\u003ccode\u003eaddBulkheadCustomizer\u003c/code\u003e和\u003ccode\u003eaddThreadPoolBulkheadCustomizer\u003c/code\u003e方法。\u003c/p\u003e\n\u003cp\u003eBulkhead Example\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4jBulkheadProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddBulkheadCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebulkhead\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebulkhead\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetEventPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonCallRejected\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslowRejectedConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonCallFinished\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslowFinishedConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slowBulkhead\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThread Pool Bulkhead Example\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4jBulkheadProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowThreadPoolBulkheadCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddThreadPoolBulkheadCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethreadPoolBulkhead\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ethreadPoolBulkhead\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetEventPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonCallRejected\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslowThreadPoolRejectedConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonCallFinished\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslowThreadPoolFinishedConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slowThreadPoolBulkhead\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"118-隔板属性配置\"\u003e1.1.8. 隔板属性配置\u003c/h4\u003e\n\u003cp\u003e你可以在你的应用程序的配置属性文件中配置 ThreadPoolBulkhead 和 SemaphoreBulkhead 实例。属性配置比Java\u003ccode\u003eCustomizer\u003c/code\u003e配置具有更高的优先级。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eresilience4j.thread-pool-bulkhead\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003einstances\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendA\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emaxThreadPoolSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ecoreThreadPoolSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eresilience4j.bulkhead\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003einstances\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emaxConcurrentCalls\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e关于Resilience4j属性配置的更多信息，见\u003ca href=\"https://resilience4j.readme.io/docs/getting-started-3#configuration\"\u003eResilience4J Spring Boot 2配置\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"119-collecting-metrics\"\u003e1.1.9. Collecting Metrics\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Circuit Breaker Resilience4j包含自动配置功能，只要classpath上有正确的依赖项，就可以设置度量衡收集。要启用指标收集，你必须包括\u003ccode\u003eorg.springframework.boot:spring-boot-starter-actuator\u003c/code\u003e，和\u003ccode\u003eio.github.resilience4j:resilience4j-micrometer\u003c/code\u003e。关于存在这些依赖关系时产生的指标的更多信息，请参阅\u003ca href=\"https://resilience4j.readme.io/docs/micrometer\"\u003eResilience4j文档\u003c/a\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你不必直接包括\u003ccode\u003emicrometer-core\u003c/code\u003e，因为它是由\u003ccode\u003espring-boot-starter-actuator\u003c/code\u003e带来的。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"12-配置-spring-retry-circuit-breakers\"\u003e1.2. 配置 Spring Retry Circuit Breakers\u003c/h3\u003e\n\u003cp\u003eSpring Retry为Spring应用程序提供声明式重试支持。该项目中的一个子集包括实现断路器功能的能力。Spring Retry通过它的\u003ca href=\"https://github.com/spring-projects/spring-retry/blob/master/src/main/java/org/springframework/retry/policy/CircuitBreakerRetryPolicy.java\"\u003e\u003ccode\u003eCircuitBreakerRetryPolicy\u003c/code\u003e\u003c/a\u003e和\u003ca href=\"https://github.com/spring-projects/spring-retry#stateful-retry\"\u003estateful retry\u003c/a\u003e的组合来提供断路器实现。所有使用Spring Retry创建的断路器将使用\u003ccode\u003eCircuitBreakerRetryPolicy\u003c/code\u003e和一个\u003ca href=\"https://github.com/spring-projects/spring-retry/blob/master/src/main/java/org/springframework/retry/support/DefaultRetryState.java\"\u003e\u003ccode\u003eDefaultRetryState\u003c/code\u003e\u003c/a\u003e。这两个类都可以使用\u003ccode\u003eSpringRetryConfigBuilder\u003c/code\u003e进行配置。\u003c/p\u003e\n\u003ch4 id=\"121-默认配置\"\u003e1.2.1. 默认配置\u003c/h4\u003e\n\u003cp\u003e为了给所有的断路器提供一个默认的配置，创建一个\u003ccode\u003eCustomize\u003c/code\u003e bean，它被传递给一个\u003ccode\u003eSpringRetryCircuitBreakerFactory\u003c/code\u003e。\u003ccode\u003econfigureDefault\u003c/code\u003e方法可以用来提供一个默认的配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSpringRetryCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigureDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpringRetryConfigBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eretryPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTimeoutRetryPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e()).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"122-具体的断路器配置\"\u003e1.2.2. 具体的断路器配置\u003c/h4\u003e\n\u003cp\u003e与提供默认配置类似，你可以创建一个 \u003ccode\u003eCustomize\u003c/code\u003e Bean，它被传递给一个 \u003ccode\u003eSpringRetryCircuitBreakerFactory\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSpringRetryCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eretryPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSimpleRetryPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slow\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e除了配置被创建的断路器外，你还可以在断路器被创建后但被返回给调用者之前对其进行自定义。要做到这一点，你可以使用\u003ccode\u003eaddRetryTemplateCustomizers\u003c/code\u003e方法。这对于向\u003ccode\u003eRetryTemplate\u003c/code\u003e添加事件处理程序很有用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSpringRetryCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddRetryTemplateCustomizers\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eretryTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eretryTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eregisterListener\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRetryListener\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eopen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRetryContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRetryCallback\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecallback\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eclose\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRetryContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRetryCallback\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecallback\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e \u003cspan class=\"n\"\u003ethrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonError\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRetryContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRetryCallback\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecallback\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e \u003cspan class=\"n\"\u003ethrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}));\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-构建\"\u003e2. 构建\u003c/h2\u003e\n\u003ch3 id=\"21-基本编译和测试\"\u003e2.1. 基本编译和测试\u003c/h3\u003e\n\u003cp\u003e要构建源代码，你需要安装JDK 1.8。\u003c/p\u003e\n\u003cp\u003eSpring Cloud使用Maven进行大多数构建相关活动，你可以通过克隆你感兴趣的项目并键入\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ ./mvnw install\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e您也可以自己安装Maven（\u0026gt;=3.3.3），运行\u003ccode\u003emvn\u003c/code\u003e命令来代替下面例子中的\u003ccode\u003e./mvnw\u003c/code\u003e。如果你这样做，如果你的本地Maven设置不包含spring预发布工件的仓库声明，你可能还需要添加\u003ccode\u003e-P spring\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e请注意，您可能需要通过设置\u003ccode\u003eMAVEN_OPTS\u003c/code\u003e环境变量，如\u003ccode\u003eXmx512m -XX:MaxPermSize=128m\u003c/code\u003e来增加Maven的可用内存量。我们试图在\u003ccode\u003e.mvn\u003c/code\u003e配置中涵盖这一点，所以如果你发现你必须这样做才能使构建成功，请提出一个票据，将设置添加到源控制中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e关于如何构建项目的提示，请看\u003ccode\u003e.travis.yml\u003c/code\u003e，如果有的话。应该有一个 \u0026ldquo;script\u0026rdquo;，也许还有 \u0026ldquo;install\u0026quot;命令。也可以看看 \u0026ldquo;services\u0026quot;部分，看看是否有任何服务需要在本地运行（例如mongo或rabbit）。忽略你可能在 \u0026ldquo;before_install\u0026quot;中发现的与git有关的部分，因为它们与设置git证书有关，而你已经有了这些证书。\u003c/p\u003e\n\u003cp\u003e需要中间件的项目通常包括\u003ccode\u003edocker-compose.yml\u003c/code\u003e，所以考虑使用\u003ca href=\"https://docs.docker.com/compose/\"\u003eDocker Compose\u003c/a\u003e在Docker容器中运行中间件服务器。关于mongo、rabbit和redis的常见情况，请参见\u003ca href=\"https://github.com/spring-cloud-samples/scripts\"\u003escripts demo repository\u003c/a\u003e中的README，以了解具体说明。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果其他都失败了，用\u003ccode\u003e.travis.yml\u003c/code\u003e的命令来构建（通常是\u003ccode\u003e./mvnw install\u003c/code\u003e）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"22-文档\"\u003e2.2. 文档\u003c/h3\u003e\n\u003cp\u003espring-cloud-build模块有一个 \u0026ldquo;docs\u0026quot;配置文件，如果你打开它，它将尝试从\u003ccode\u003esrc/main/asciidoc\u003c/code\u003e构建asciidoc源。作为这个过程的一部分，它将寻找 \u0026ldquo;README.adoc\u0026rdquo;，并通过加载所有内容来处理它，但不解析或渲染它，只是将它复制到\u0026rdquo;${main.baseir}\u0026quot;（默认为\u0026rdquo;$/tmp/releaser-1622150702029-0/spring-cloud-circuitbreaker/docs\u0026rdquo;，即项目的根）。如果README有任何改动，在Maven构建后会在正确位置显示为修改过的文件。提交并推送修改内容即可。\u003c/p\u003e\n\u003ch3 id=\"23-使用代码工作\"\u003e2.3. 使用代码工作\u003c/h3\u003e\n\u003cp\u003e如果你没有IDE的偏好，我们建议你在处理代码时使用\u003ca href=\"https://www.springsource.com/developer/sts\"\u003eSpring Tools Suite\u003c/a\u003e或\u003ca href=\"https://eclipse.org/\"\u003eEclipse\u003c/a\u003e。我们使用\u003ca href=\"https://eclipse.org/m2e/\"\u003em2eclipse\u003c/a\u003e eclipse插件来支持maven。其他IDE和工具只要使用Maven 3.3.3或更高版本，也应能顺利工作。\u003c/p\u003e\n\u003ch4 id=\"231-激活spring-maven配置文件\"\u003e2.3.1. 激活Spring Maven配置文件\u003c/h4\u003e\n\u003cp\u003eSpring Cloud项目需要激活 \u0026ldquo;spring\u0026rdquo; Maven配置文件，以解决spring里程碑和快照库的问题。使用你喜欢的IDE将该配置文件设置为激活状态，否则你可能会遇到构建错误。\u003c/p\u003e\n\u003ch4 id=\"232-用m2eclipse导入到eclipse中\"\u003e2.3.2. 用m2eclipse导入到eclipse中\u003c/h4\u003e\n\u003cp\u003e在使用eclipse时，我们推荐\u003ca href=\"https://eclipse.org/m2e/\"\u003em2eclipse\u003c/a\u003e eclipse插件。如果你还没有安装m2eclipse，它可以从 \u0026ldquo;eclipse marketplace\u0026quot;获得。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e旧版本的m2e不支持Maven 3.3，所以一旦项目被导入Eclipse，你还需要告诉m2eclipse为项目使用正确的配置文件。如果你看到项目中与POMs有关的许多不同的错误，请检查你是否有一个最新的安装。如果你不能升级m2e，在你的\u003ccode\u003esettings.xml\u003c/code\u003e中加入 \u0026ldquo;spring \u0026ldquo;配置文件。或者你可以从父pom的 \u0026ldquo;spring \u0026ldquo;配置文件中复制版本库设置到你的\u003ccode\u003esettings.xml\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"233-在没有m2eclipse的情况下导入到eclipse中\"\u003e2.3.3. 在没有m2eclipse的情况下导入到eclipse中\u003c/h4\u003e\n\u003cp\u003e如果你不愿意使用m2eclipse，你可以用以下命令生成eclipse项目元数据。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ ./mvnw eclipse:eclipse\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e生成的eclipse项目可以通过在文件菜单中选择导入现有项目来导入。\u003c/p\u003e\n"
      },
    {
        id: 3,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-config/",
        title: "Spring Cloud Config",
        description: "Spring Cloud Config为分布式系统中的外部化配置提供服务器和客户端支持。有了配置服务器，你就有了一个集中的地方来管理所有环境中的应用程序的外部属性。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.4\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月23日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix\"\u003ehttps://github.com/spring-cloud/spring-cloud-netflix\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Config为分布式系统中的外部化配置提供服务器和客户端支持。有了配置服务器，你就有了一个集中的地方来管理所有环境中的应用程序的外部属性。客户端和服务器上的概念与Spring Environment和PropertySource抽象完全一致，因此它们非常适用于Spring应用程序，但也可用于以任何语言运行的任何应用程序。当一个应用程序通过部署渠道从开发到测试再到生产时，你可以管理这些不同环境之间的配置，并确定应用程序在迁移时拥有运行所需的一切。服务器存储后端的默认实现使用git，因此它可以轻松地支持标签版本的配置环境，以及可用于管理内容的广泛工具。很容易添加其他的实现，并将它们与Spring配置连接起来。\u003c/p\u003e\n\u003ch2 id=\"1-快速开始\"\u003e1. 快速开始\u003c/h2\u003e\n\u003cp\u003e这篇快速入门文章介绍了Spring Cloud Config Server的服务器和客户端的使用情况。\u003c/p\u003e\n\u003cp\u003e首先，启动服务器，如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e spring-cloud-config-server\n$ ../mvnw spring-boot:run\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e服务器是一个 Spring Boot 应用程序，因此如果您愿意，可以从 IDE 中运行它(主类是 \u003ccode\u003eConfigServerApplication\u003c/code\u003e)。\u003c/p\u003e\n\u003cp\u003e接下来尝试一个客户端，如下所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ curl localhost:8888/foo/development\n{\n  \u0026#34;name\u0026#34;: \u0026#34;foo\u0026#34;,\n  \u0026#34;profiles\u0026#34;: [\n    \u0026#34;development\u0026#34;\n  ]\n  ....\n  \u0026#34;propertySources\u0026#34;: [\n    {\n      \u0026#34;name\u0026#34;: \u0026#34;https://github.com/spring-cloud-samples/config-repo/foo-development.properties\u0026#34;,\n      \u0026#34;source\u0026#34;: {\n        \u0026#34;bar\u0026#34;: \u0026#34;spam\u0026#34;,\n        \u0026#34;foo\u0026#34;: \u0026#34;from foo development\u0026#34;\n      }\n    },\n    {\n      \u0026#34;name\u0026#34;: \u0026#34;https://github.com/spring-cloud-samples/config-repo/foo.properties\u0026#34;,\n      \u0026#34;source\u0026#34;: {\n        \u0026#34;foo\u0026#34;: \u0026#34;from foo props\u0026#34;,\n        \u0026#34;democonfigclient.message\u0026#34;: \u0026#34;hello spring io\u0026#34;\n      }\n    },\n    ....\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e定位属性源的默认策略是克隆一个 git 仓库（在\u003ccode\u003espring.cloud.config.server.git.uri\u003c/code\u003e）并使用它来初始化一个迷你 SpringApplication。该迷你应用程序的环境被用来列举属性源，并在一个JSON端点上发布它们。\u003c/p\u003e\n\u003cp\u003eHTTP 服务以下面的形式提供资源:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e/{application}/{profile}[/{label}]\n/{application}-{profile}.yml\n/{label}/{application}-{profile}.yml\n/{application}-{profile}.properties\n/{label}/{application}-{profile}.properties\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003ecurl localhost:8888/foo/development\ncurl localhost:8888/foo/development/master\ncurl localhost:8888/foo/development,db/master\ncurl localhost:8888/foo-development.yml\ncurl localhost:8888/foo-db.properties\ncurl localhost:8888/master/foo-db.properties\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中，\u003ccode\u003eapplication\u003c/code\u003e是作为\u003ccode\u003eSpringApplication\u003c/code\u003e中的\u003ccode\u003espring.config.name\u003c/code\u003e注入的（通常是普通Spring Boot应用中的\u003ccode\u003eapplication\u003c/code\u003e），\u003ccode\u003eprofile\u003c/code\u003e是一个活动的描述文件（或逗号分隔的属性列表），\u003ccode\u003elabel\u003c/code\u003e是一个可选的git标签（默认为master)。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config\u003c/code\u003e服务器从各种来源为远程客户端提供配置。下面的示例从git仓库获取配置(必须提供) ，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其他来源包括任何兼容JDBC的数据库、Subversion、Hashicorp Vault、Credhub和本地文件系统。\u003c/p\u003e\n\u003ch3 id=\"11-使用客户端\"\u003e1.1. 使用客户端\u003c/h3\u003e\n\u003cp\u003e要在应用程序中使用这些功能，你可以将其构建为依赖\u003ccode\u003espring-cloud-config-client\u003c/code\u003e的Spring Boot应用程序（有关示例，请参见\u003ccode\u003econfig-client\u003c/code\u003e的测试案例或示例应用程序）。添加依赖关系的最便捷方式是使用Spring Boot starter \u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-config\u003c/code\u003e。对于Maven用户，还有一个父级pom和BOM（\u003ccode\u003espring-cloud-starter-parent\u003c/code\u003e），对于Gradle和Spring CLI用户，还有一个Spring IO版本管理属性文件。下面的例子展示了一个典型的Maven配置：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;parent\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-parent\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e{spring-boot-docs-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;relativePath\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e \u003cspan class=\"c\"\u003e\u0026lt;!-- lookup parent from repository --\u0026gt;\u003c/span\u003e\n   \u003cspan class=\"nt\"\u003e\u0026lt;/parent\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e{spring-cloud-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-test\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003etest\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;build\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;plugins\u0026gt;\u003c/span\u003e\n           \u003cspan class=\"nt\"\u003e\u0026lt;plugin\u0026gt;\u003c/span\u003e\n               \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n               \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-maven-plugin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n           \u003cspan class=\"nt\"\u003e\u0026lt;/plugin\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/plugins\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/build\u0026gt;\u003c/span\u003e\n\n   \u003cspan class=\"c\"\u003e\u0026lt;!-- repositories also needed for snapshots and milestones --\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在您可以创建一个标准的 Spring Boot 应用程序，例如下面的 HTTP 服务器:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当这个 HTTP 服务器运行时，它从端口8888上的默认本地配置服务器(如果它正在运行)获取外部配置。要修改启动行为，可以使用\u003ccode\u003eapplication.properties\u003c/code\u003e更改配置服务器的位置，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=optional:configserver:http://myconfigserver.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认情况下，如果没有设置应用程序名，则将使用应用程序。要修改名称，可以将以下属性添加到 application.properties 文件中:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.application.name: myapp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e当设置属性\u003ccode\u003e${spring.application.name}\u003c/code\u003e时，不要在你的应用程序名称前加上保留词\u003ccode\u003eapplication-\u003c/code\u003e，以防止在解决正确的属性源时出现问题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eConfig Server属性作为高优先级属性源显示在/env 端点中，如下面的示例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ curl localhost:8080/env\n{\n  \u0026#34;activeProfiles\u0026#34;: [],\n  {\n    \u0026#34;name\u0026#34;: \u0026#34;servletContextInitParams\u0026#34;,\n    \u0026#34;properties\u0026#34;: {}\n  },\n  {\n    \u0026#34;name\u0026#34;: \u0026#34;configserver:https://github.com/spring-cloud-samples/config-repo/foo.properties\u0026#34;,\n    \u0026#34;properties\u0026#34;: {\n      \u0026#34;foo\u0026#34;: {\n        \u0026#34;value\u0026#34;: \u0026#34;bar\u0026#34;,\n        \u0026#34;origin\u0026#34;: \u0026#34;Config Server https://github.com/spring-cloud-samples/config-repo/foo.properties:2:12\u0026#34;\n      }\n    }\n  },\n  ...\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一个名为\u003ccode\u003econfigserver:\u0026lt;URL of remote repository\u0026gt;/\u0026lt;file name\u0026gt;\u003c/code\u003e的属性源包含foo属性，值为bar。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e属性源名称中的URL是 git仓库，而不是配置服务器URL\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ccode\u003eSpring Cloud Config\u003c/code\u003e 客户端，你需要设置\u003ccode\u003espring.config.import\u003c/code\u003e属性，以便与Config Server绑定。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#config-data-import\"\u003e《Spring Cloud Config参考指南》\u003c/a\u003e中阅读更多相关内容。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-spring-cloud-config-server\"\u003e2. Spring Cloud Config Server\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e为外部配置（名-值对或等效的YAML内容）提供了一个基于HTTP资源的API。通过使用\u003ccode\u003e@EnableConfigServer\u003c/code\u003e注解，该服务器可以嵌入到Spring Boot应用程序中。因此，下面的应用程序就是一个配置服务器:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConfigServer.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableConfigServer\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfigServer\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfigServer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e与所有 Spring Boot 应用程序一样，它默认运行在端口8080上，但是您可以通过各种方式将其切换到更常规的端口8888。最简单的，也是设置默认配置存储库的方法，就是使用 \u003ccode\u003espring.Config.name=configserver\u003c/code\u003e启动它(Config Server jar 中有一个\u003ccode\u003econfigserver.yml\u003c/code\u003e)。另一种方法是使用自己的\u003ccode\u003eapplication.properties\u003c/code\u003e，如下面的示例所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eserver.port: 8888\nspring.cloud.config.server.git.uri: file://${user.home}/config-repo\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中\u003ccode\u003e${ user.home }/config-repo\u003c/code\u003e是一个包含YAML和属性文件的 git 仓库。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在Windows上，如果文件URL是绝对的，带有驱动器前缀，你需要在文件URL中多加一个\u0026quot;/\u0026quot;（例如，file:///${user.home}/config-repo）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下面的列表显示了在前面的例子中创建git仓库的方法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ cd $HOME\n$ mkdir config-repo\n$ cd config-repo\n$ git init .\n$ echo info.foo: bar \u0026gt; application.properties\n$ git add -A .\n$ git commit -m \u0026#34;Add application.properties\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e为 git仓库使用本地文件系统只是为了进行测试。你应该使用服务器来托管生产环境中的配置存储库\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你在配置库中只保留文本文件，那么配置库的初始克隆可以快速有效地进行。如果你存储二进制文件，特别是大的二进制文件，你可能会在第一次请求配置时遇到延迟，或者在服务器中遇到内存不足的错误。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"21-环境仓库\"\u003e2.1. 环境仓库\u003c/h3\u003e\n\u003cp\u003e你应该把配置服务器的配置数据存储在哪里？支持这种行为的策略是\u003ccode\u003eEnvironmentRepository\u003c/code\u003e，为\u003ccode\u003eEnvironment\u003c/code\u003e对象服务。这个\u003ccode\u003eEnvironment\u003c/code\u003e是来自\u003ccode\u003eSpring Environment\u003c/code\u003e（包括作为主要特征的\u003ccode\u003epropertySources\u003c/code\u003e）的领域的浅拷贝。环境资源是由三个变量参数化的。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e{application}\u003c/code\u003e 映射到客户端的\u003ccode\u003espring.application.name\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e{profile}\u003c/code\u003e 映射到客户端上的\u003ccode\u003espring.profiles.active\u003c/code\u003e(逗号分隔多个)。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e{label}\u003c/code\u003e 这是一个服务器端特性，标记了一组 “versioned” 的配置文件。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e仓库实现通常表现得像Spring Boot应用程序，从等于\u003ccode\u003e{application}\u003c/code\u003e参数的\u003ccode\u003espring.config.name\u003c/code\u003e和等于\u003ccode\u003e{profiles}\u003c/code\u003e参数的\u003ccode\u003espring.profiles.active\u003c/code\u003e加载配置文件。配置文件的优先级规则也与普通Spring Boot应用程序相同。活跃的配置文件优先于默认值，如果有多个配置文件，最后一个优先（类似于向地图添加入口）。\u003c/p\u003e\n\u003cp\u003e下面的示例客户端应用程序具有这种引导配置:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efoo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edev,mysql\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e和 Spring Boot 应用程序一样，这些属性也可以通过环境变量或命令行参数来设置\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果资源库是基于文件的，服务器会从\u003ccode\u003eapplication.yml\u003c/code\u003e（在所有客户端之间共享）和\u003ccode\u003efoo.yml\u003c/code\u003e（以\u003ccode\u003efoo.yml\u003c/code\u003e为优先）创建一个环境。如果YAML文件里面有指向Spring配置文件的文件，这些文件将以更高的优先级被应用（按照列出的配置文件的顺序）。如果有特定于配置文件的YAML（或属性）文件，这些文件也会以高于默认值的优先权被应用。更高的优先级转换为环境中较早列出的属性源。(这些规则同样适用于独立的Spring Boot应用程序）。)\u003c/p\u003e\n\u003cp\u003e你可以将\u003ccode\u003espring.cloud.config.server.accept-empty\u003c/code\u003e设置为 false，这样如果没有找到应用程序，服务器将返回 HTTP 404 状态。默认情况下，该标志被设置为 true。\u003c/p\u003e\n\u003ch3 id=\"211-git后端\"\u003e2.1.1 Git后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eEnvironmentRepository\u003c/code\u003e的默认实现使用 Git 后台，这对于管理升级和物理环境以及审计更改非常方便。要改变仓库的位置，你可以在配置服务器中设置\u003ccode\u003espring.cloud.config.server.git.uri\u003c/code\u003e配置属性（例如在 application.yml 中）。如果你用前缀\u003ccode\u003efile:\u003c/code\u003e来设置它，它应该从本地仓库工作，这样你就可以在没有服务器的情况下快速、轻松地开始工作。然而，在这种情况下，服务器直接在本地资源库上操作，而不克隆它（如果它不是空的也没有关系，因为配置服务器从不对 \u0026ldquo;远程\u0026quot;资源库进行修改）。为了扩大配置服务器的规模并使其高可用，你需要让服务器的所有实例都指向同一个资源库，所以只有共享文件系统才能发挥作用。即使在这种情况下，最好使用共享文件系统资源库的\u003ccode\u003essh:\u003c/code\u003e协议，这样服务器就可以克隆它并使用本地工作拷贝作为缓存。\u003c/p\u003e\n\u003cp\u003e这个版本库的实现将HTTP资源的\u003ccode\u003e{label}\u003c/code\u003e参数映射到一个git标签（提交ID、分支名称或标签）。如果git分支或标签名称包含一个斜线（/），那么HTTP URL中的标签应该用特殊字符串（_)来指定（以避免与其他URL路径产生歧义）。例如，如果标签是foo/bar，替换掉斜线会产生以下标签：foo(_)bar。包含特殊字符串（_）也可以应用于\u003ccode\u003e{application}\u003c/code\u003e参数。如果你使用命令行客户端，如curl，要注意URL中的括号\u0026ndash;你应该在shell中用单引号（''）来转义它们。\u003c/p\u003e\n\u003ch4 id=\"2111-跳过-ssl-证书验证\"\u003e2.1.1.1. 跳过 SSL 证书验证\u003c/h4\u003e\n\u003cp\u003e通过将\u003ccode\u003egit.skipSslValidation\u003c/code\u003e属性设置为 true (默认为 false) ，可以禁用配置服务器对 Git 服务器的 SSL 证书的验证。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.com/my/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eskipSslValidation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2112-设置-http-连接超时\"\u003e2.1.1.2. 设置 HTTP 连接超时\u003c/h4\u003e\n\u003cp\u003e您可以配置配置服务器等待获取 HTTP 连接的时间(以秒为单位)。使用 git.timeout 属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.com/my/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2113-git-uri-中的占位符\"\u003e2.1.1.3. Git URI 中的占位符\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持git仓库的URL，其中包含\u003ccode\u003e{application}\u003c/code\u003e和\u003ccode\u003e{profile}\u003c/code\u003e的占位符。(如果你需要的话，还有\u003ccode\u003e{label}\u003c/code\u003e，但记住，无论如何，标签都是作为git标签应用的) 因此，你可以通过使用类似于以下的结构来支持 \u0026ldquo;每个应用一个仓库\u0026quot;的策略。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/myorg/{application}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e您还可以使用类似的模式(但是使用\u003ccode\u003e{profile}\u003c/code\u003e)支持“每个配置文件一个仓库”策略。\u003c/p\u003e\n\u003cp\u003e此外，在\u003ccode\u003e{application}\u003c/code\u003e参数中使用特殊的字符串“(_)”可以支持多个组织，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/{application}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中\u003ccode\u003e{application}\u003c/code\u003e在请求时以下列格式提供: \u003ccode\u003eorganization (_) application\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"2114-模式匹配和多个仓库\"\u003e2.1.1.4. 模式匹配和多个仓库\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config\u003c/code\u003e还包括对应用程序和配置文件名称的模式匹配，以支持更复杂的要求。模式格式是一个逗号分隔的\u003ccode\u003e{application}/{profile}\u003c/code\u003e名称列表，并带有通配符（注意，以通配符开始的模式可能需要加引号），如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003esimple\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/simple/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003especial\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003especial*/dev*,*special*/dev*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/special/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003elocal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocal*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:/home/configsvc/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果\u003ccode\u003e{application}/{profile}\u003c/code\u003e不匹配任何模式，它将使用\u003ccode\u003espring.cloud.config.server.git.URI\u003c/code\u003e下定义的默认URI。在上面的示例中，对于\u003ccode\u003esimple\u003c/code\u003e仓库，模式是\u003ccode\u003esimple/*\u003c/code\u003e (它只匹配所有概要文件中名为simple的一个应用程序)。\u003ccode\u003elocal\u003c/code\u003e仓库匹配所有概要文件中以\u003ccode\u003elocal\u003c/code\u003e开头的所有应用程序名称(/* 后缀会自动添加到任何没有配置文件匹配器的模式中)。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在 \u0026ldquo;simple\u0026quot;例子中使用的 \u0026ldquo;one-line\u0026quot;快捷方式，只有在唯一需要设置的属性是URI的情况下才可以使用。如果你需要设置其他东西（证书、模式等等），你需要使用完整的形式.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eRepo 中的 pattern 属性实际上是一个数组，因此可以使用 YAML 数组(或者[0]、[1]等属性文件中的后缀)绑定到多个模式。如果你要运行多个配置文件的应用程序，你可能需要这样做，如下面的例子所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003edevelopment\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e- \u003cspan class=\"s1\"\u003e\u0026#39;*/development\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e- \u003cspan class=\"s1\"\u003e\u0026#39;*/staging\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/development/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003estaging\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e- \u003cspan class=\"s1\"\u003e\u0026#39;*/qa\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e- \u003cspan class=\"s1\"\u003e\u0026#39;*/production\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/staging/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud猜测，包含一个不以*结尾的配置文件的模式意味着你实际上想匹配以这个模式开始的配置文件列表（所以\u003ccode\u003e*/staging\u003c/code\u003e是\u003ccode\u003e[\u0026quot;*/staging\u0026quot;, \u0026quot;*/staging,*\u0026quot;]\u003c/code\u003e等的快捷方式）。这种情况很常见，例如，你需要在本地运行 \u003ccode\u003edevelopment\u003c/code\u003e配置文件的应用程序，但也需要远程运行 \u003ccode\u003ecloud\u003c/code\u003e配置文件。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e每个仓库还可以有选择地将配置文件存储在子目录中，搜索这些目录的模式可以指定为搜索路径。下面的示例在顶层显示一个配置文件:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003esearch-paths\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"l\"\u003efoo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"l\"\u003ebar*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的示例中，服务器在顶层和 foo/sub 目录中搜索配置文件，还搜索名称以 bar 开头的任何子目录。\u003c/p\u003e\n\u003cp\u003e默认情况下，服务器在首次请求配置时克隆远程仓库。可以将服务器配置为在启动时克隆仓库，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/common/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-a\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-a-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloneOnStart\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-a/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-b\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-b-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloneOnStart\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-b/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-c\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-c-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-a/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的示例中，服务器在启动时克隆\u003ccode\u003eteam-a\u003c/code\u003e的\u003ccode\u003econfig-repo\u003c/code\u003e，然后接受任何请求。除非从存储库请求配置，否则不会克隆所有其他存储库。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e设置服务器启动时克隆资源库有助于在配置服务器启动时快速识别配置错误的配置源（如无效的资源库URI）。如果不配置\u003ccode\u003ecloneOnStart\u003c/code\u003e，配置服务器可能会在配置错误或无效的配置源下成功启动，直到应用程序从该配置源请求配置时才会发现错误。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"2115-认证\"\u003e2.1.1.5. 认证\u003c/h4\u003e\n\u003cp\u003e要在远程存储库上使用 HTTP 基本身份验证，请分别添加用户名和密码属性(不在 URL 中) ，如下例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etrolley\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003estrongpassword\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不使用 HTTPS 和用户凭证，当你在默认目录（~/.ssh）中存储密钥，并且 URI 指向 SSH 位置，如 \u003ccode\u003egit@github.com:configuration/cloud-configuration\u003c/code\u003e时，SSH 也应该开箱工作。重要的是，在 \u003ccode\u003e~/.ssh/known_hosts\u003c/code\u003e文件中要有 Git 服务器的条目，并且是\u003ccode\u003essh-rsa\u003c/code\u003e格式。其他格式（如ecdsa-sha2-nistp256）不被支持。为了避免意外，你应该确保 Git 服务器的\u003ccode\u003eknown_hosts\u003c/code\u003e文件中只有一个条目，并且它与你提供给配置服务器的 URL 相匹配。如果你在 URL 中使用了一个主机名，你应该在\u003ccode\u003eknown_hosts\u003c/code\u003e文件中准确地写入这个主机名（而不是 IP）。仓库是通过使用JGit访问的，所以你找到的任何关于这个的文档都应该是适用的。HTTPS 代理设置可以在\u003ccode\u003e~/.git/config \u003c/code\u003e或（与任何其他 JVM 进程的方式相同）用系统属性（\u003ccode\u003e-Dhttps.proxyHost\u003c/code\u003e和 \u003ccode\u003e-Dhttps.proxyPort\u003c/code\u003e）来设置。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你不知道你的\u003ccode\u003e~/.git\u003c/code\u003e目录在哪里，可以使用\u003ccode\u003egit config --global\u003c/code\u003e来操作设置（例如，\u003ccode\u003egit config --global http.sslVerify false\u003c/code\u003e）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eJGit需要PEM格式的RSA密钥。下面是一个ssh-keygen(来自openssh)命令的示例，它将生成正确格式的密钥:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003essh-keygen -m PEM -t rsa -b 4096 -f ~/config_server_deploy_key.rsa\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e警告:当使用SSH密钥时，期望的SSH私钥必须以\u003ccode\u003e----- begin RSA PRIVATE KEY-----\u003c/code\u003e开头。如果密钥以\u003ccode\u003e-----BEGIN OPENSSH PRIVATE key -----\u003c/code\u003e开头，则在启动\u003ccode\u003espring-cloud-config\u003c/code\u003e服务器时不会加载RSA密钥。错误如下所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e- Error in object \u0026#39;spring.cloud.config.server.git\u0026#39;: codes [PrivateKeyIsValid.spring.cloud.config.server.git,PrivateKeyIsValid]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [spring.cloud.config.server.git.,]; arguments []; default message []]; default message [Property \u0026#39;spring.cloud.config.server.git.privateKey\u0026#39; is not a valid private key]\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了纠正上述错误，必须将RSA密钥转换为PEM格式。上面提供了一个使用openssh的示例，以适当的格式生成新密钥。\u003c/p\u003e\n\u003ch4 id=\"2116-使用aws-codecommit进行身份验证\"\u003e2.1.1.6. 使用AWS CodeCommit进行身份验证\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config\u003c/code\u003e服务器也支持AWS CodeCommit认证。AWS CodeCommit在通过命令行使用Git时使用一个身份验证助手。这个助手没有和JGit库一起使用，所以如果Git URI匹配AWS CodeCommit模式，就会为AWS CodeCommit创建一个JGit CredentialProvider。AWS CodeCommit uri遵循以下模式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"l\"\u003ehttps//git-codecommit.${AWS_REGION}.amazonaws.com/v1/repos/${repo}.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果您使用AWS CodeCommit URI提供用户名和密码，那么它们必须是\u003ccode\u003eAWS accessKeyId\u003c/code\u003e和\u003ccode\u003esecretAccessKey\u003c/code\u003e，它们提供对仓库的访问。如果不指定用户名和密码，则使用AWS默认凭据提供程序链\u003ccode\u003eaccessKeyId\u003c/code\u003e和\u003ccode\u003esecretAccessKey\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果您的Git URI与CodeCommit URI模式匹配(前面显示的)，则必须在用户名和密码中或在默认凭据提供者链支持的某个位置提供有效的AWS凭据。AWS EC2实例可能使用IAM Roles作为EC2实例。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eaws-java-sdk-core jar\u003c/code\u003e是一个可选依赖项。如果\u003ccode\u003eAWS -java-sdk-core jar\u003c/code\u003e不在类路径中，则不会创建AWS Code提交凭据提供程序，而与git服务器URI无关。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"2117-使用google-cloud-source认证\"\u003e2.1.1.7. 使用Google Cloud Source认证\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Config Server也支持对Google Cloud Source仓库进行认证。\u003c/p\u003e\n\u003cp\u003e如果你的Git URI使用http或https协议，且域名为\u003ccode\u003esource.developer.google.com\u003c/code\u003e，则将使用\u003ccode\u003eGoogle Cloud Source\u003c/code\u003e凭证提供商。Google Cloud Source 仓库的 URI 格式为 \u003ccode\u003ehttps://source.developers.google.com/p/${GCP_PROJECT}/r/${REPO}\u003c/code\u003e。要获得你的资源库的URI，点击Google Cloud Source用户界面的 \u0026ldquo;Clone\u0026rdquo;，并选择 \u0026ldquo;手动生成的凭证\u0026rdquo;。不要生成任何凭证，只需复制显示的URI。\u003c/p\u003e\n\u003cp\u003eGoogle Cloud Source凭证提供者将使用谷歌云平台应用程序的默认凭证。关于如何为一个系统创建应用默认凭证，请参见Google Cloud SDK文档。这种方法将适用于开发环境中的用户账户和生产环境中的服务账户。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ecom.google。Auth:google-auth-library-oauth2-http\u003c/code\u003e是一个可选的依赖项。如果\u003ccode\u003eGoogle -auth-library-oauth2-http\u003c/code\u003ejar不在你的类路径，则不管git服务器URI如何，都不会创建谷歌Cloud Source凭据提供者。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"2118-使用属性进行ssh配置\"\u003e2.1.1.8. 使用属性进行SSH配置\u003c/h4\u003e\n\u003cp\u003e默认情况下，Spring Cloud Config Server 使用的 JGit 库在使用 SSH URI 连接到 Git 仓库时使用 SSH 配置文件，如\u003ccode\u003e~/.ssh/known_hosts\u003c/code\u003e和\u003ccode\u003e/etc/ssh/ssh_config\u003c/code\u003e。在 Cloud Foundry 等云环境中，本地文件系统可能是短暂的或不容易访问。对于这些情况，SSH 配置可以通过使用 Java 属性来设置。为了激活基于属性的 SSH 配置，\u003ccode\u003espring.cloud.config.server.git.ignoreLocalSshSettings\u003c/code\u003e属性必须设置为 true，如以下示例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit@gitserver.com:team/repo1.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eignoreLocalSshSettings\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esomeHostKey\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostKeyAlgorithm\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003essh-rsa\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eprivateKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         -----BEGIN RSA PRIVATE KEY-----\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         MIIEpgIBAAKCAQEAx4UbaDzY5xjW6hc9jwN0mX33XpTDVW9WqHp5AKaRbtAC3DqX\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         IXFMPgw3K45jxRb93f8tv9vL3rD9CUG1Gv4FM+o7ds7FRES5RTjv2RT/JVNJCoqF\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         ol8+ngLqRZCyBtQN7zYByWMRirPGoDUqdPYrj2yq+ObBBNhg5N+hOwKjjpzdj2Ud\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         1l7R+wxIqmJo1IYyy16xS8WsjyQuyC0lL456qkd5BDZ0Ag8j2X9H9D5220Ln7s9i\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         oezTipXipS7p7Jekf3Ywx6abJwOmB0rX79dV4qiNcGgzATnG1PkXxqt76VhcGa0W\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         DDVHEEYGbSQ6hIGSh0I7BQun0aLRZojfE3gqHQIDAQABAoIBAQCZmGrk8BK6tXCd\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         fY6yTiKxFzwb38IQP0ojIUWNrq0+9Xt+NsypviLHkXfXXCKKU4zUHeIGVRq5MN9b\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         BO56/RrcQHHOoJdUWuOV2qMqJvPUtC0CpGkD+valhfD75MxoXU7s3FK7yjxy3rsG\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         EmfA6tHV8/4a5umo5TqSd2YTm5B19AhRqiuUVI1wTB41DjULUGiMYrnYrhzQlVvj\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         5MjnKTlYu3V8PoYDfv1GmxPPh6vlpafXEeEYN8VB97e5x3DGHjZ5UrurAmTLTdO8\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         +AahyoKsIY612TkkQthJlt7FJAwnCGMgY6podzzvzICLFmmTXYiZ/28I4BX/mOSe\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         pZVnfRixAoGBAO6Uiwt40/PKs53mCEWngslSCsh9oGAaLTf/XdvMns5VmuyyAyKG\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         ti8Ol5wqBMi4GIUzjbgUvSUt+IowIrG3f5tN85wpjQ1UGVcpTnl5Qo9xaS1PFScQ\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         xrtWZ9eNj2TsIAMp/svJsyGG3OibxfnuAIpSXNQiJPwRlW3irzpGgVx/AoGBANYW\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         dnhshUcEHMJi3aXwR12OTDnaLoanVGLwLnkqLSYUZA7ZegpKq90UAuBdcEfgdpyi\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         PhKpeaeIiAaNnFo8m9aoTKr+7I6/uMTlwrVnfrsVTZv3orxjwQV20YIBCVRKD1uX\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         VhE0ozPZxwwKSPAFocpyWpGHGreGF1AIYBE9UBtjAoGBAI8bfPgJpyFyMiGBjO6z\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         FwlJc/xlFqDusrcHL7abW5qq0L4v3R+FrJw3ZYufzLTVcKfdj6GelwJJO+8wBm+R\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         gTKYJItEhT48duLIfTDyIpHGVm9+I1MGhh5zKuCqIhxIYr9jHloBB7kRm0rPvYY4\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         VAykcNgyDvtAVODP+4m6JvhjAoGBALbtTqErKN47V0+JJpapLnF0KxGrqeGIjIRV\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         cYA6V4WYGr7NeIfesecfOC356PyhgPfpcVyEztwlvwTKb3RzIT1TZN8fH4YBr6Ee\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         KTbTjefRFhVUjQqnucAvfGi29f+9oE3Ei9f7wA+H35ocF6JvTYUsHNMIO/3gZ38N\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         CPjyCMa9AoGBAMhsITNe3QcbsXAbdUR00dDsIFVROzyFJ2m40i4KCRM35bC/BIBs\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         q0TY3we+ERB40U8Z2BvU61QuwaunJ2+uGadHo58VSVdggqAo0BSkH58innKKt96J\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         69pcVH/4rmLbXdcmNYGm6iu+MlPQk4BUZknHSmVHIFdJ0EPupVaQ8RHT\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         -----END RSA PRIVATE KEY-----\u003c/span\u003e\u003cspan class=\"w\"\u003e                         \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下表描述了SSH配置属性。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e表1：SSH配置属性\u003c/strong\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e属性名称\u003c/th\u003e\n\u003cth\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eignoreLocalSshSettings\u003c/td\u003e\n\u003ctd\u003e如果为\u003ccode\u003etrue\u003c/code\u003e，使用基于属性而不是基于文件的 SSH 配置。必须在 \u003ccode\u003espring.cloud.config.server.git.ignoreLocalSshSettings\u003c/code\u003e 中设置，而不是在版本库定义中。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eprivateKey\u003c/td\u003e\n\u003ctd\u003e有效的SSH私钥。如果ignoreLocalSshSettings为true且Git URI为SSH格式，则必须设置。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ehostKey\u003c/td\u003e\n\u003ctd\u003e有效的SSH主机密钥。如果hostKeyAlgorithm也被设置，则必须被设置。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ehostKeyAlgorithm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003essh-dss\u003c/code\u003e, \u003ccode\u003essh-rsa\u003c/code\u003e, \u003ccode\u003eecdsa-sha2-nistp256\u003c/code\u003e, \u003ccode\u003eecdsa-sha2-nistp384\u003c/code\u003e, 或 \u003ccode\u003eecdsa-sha2-nistp521\u003c/code\u003e中的一个。如果hostKey也被设置，则必须被设置。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estrictHostKeyChecking\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e 或 \u003ccode\u003efalse\u003c/code\u003e. 如果是\u003ccode\u003efalse\u003c/code\u003e，则忽略主机钥匙的错误。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eknownHostsFile\u003c/td\u003e\n\u003ctd\u003e自定义\u003ccode\u003e.known_hosts\u003c/code\u003e文件的位置。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epreferredAuthentications\u003c/td\u003e\n\u003ctd\u003e覆盖服务器认证方法的顺序。如果服务器在\u003ccode\u003epublickey\u003c/code\u003e方法之前有键盘交互式认证，这应该允许规避登录提示。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch4 id=\"2119-git搜索路径中的占位符\"\u003e2.1.1.9. Git搜索路径中的占位符\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Config Server还支持带有\u003ccode\u003e{appcaliton}\u003c/code\u003e和\u003ccode\u003e{profile}\u003c/code\u003e占位符的搜索路径。(以及\u003ccode\u003e{label}\u003c/code\u003e（如果你需要的话），如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003esearch-paths\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;{application}\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"21110-强制拉取git仓库\"\u003e2.1.1.10. 强制拉取Git仓库\u003c/h4\u003e\n\u003cp\u003e如前所述，Spring Cloud Config Server复制了一个远程git仓库，以防本地副本变脏（例如，操作系统进程改变了文件夹内容），导致Spring Cloud Config Server无法从远程仓库更新本地副本。\u003c/p\u003e\n\u003cp\u003e为了解决这个问题，有一个\u003ccode\u003eforce-pull\u003c/code\u003e属性，如果本地副本脏了，它可以让Spring Cloud Config Server强制从远程仓库拉取，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eforce-pull\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你有一个多仓库的配置，你可以在每个仓库配置\u003ccode\u003eforce-pull\u003c/code\u003e属性，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/common/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eforce-pull\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-a\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-a-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-a/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eforce-pull\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-b\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-b-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-b/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eforce-pull\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-c\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-c-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-a/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eforce-pull\u003c/code\u003e属性默认为\u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"21111-删除git存储库中未被追踪的分支\"\u003e2.1.1.11. 删除Git存储库中未被追踪的分支\u003c/h4\u003e\n\u003cp\u003e由于Spring Cloud Config Server有一个远程git仓库的克隆，在将分支检出到本地repo后（例如通过标签获取属性），它将永远保留这个分支或直到下一次服务器重启（创建新的本地repo）。因此，可能会出现这样的情况：远程分支被删除，但其本地副本仍可用于获取。如果Spring云配置服务器客户端服务以\u003ccode\u003e--spring.cloud.config.label=deletedRemoteBranch,master\u003c/code\u003e启动，它将从\u003ccode\u003edeleedRemoteBranch\u003c/code\u003e本地分支获取属性，但不会从master获取。\u003c/p\u003e\n\u003cp\u003e为了保持本地版本库分支的干净和远程可以设置\u003ccode\u003edeleteUntrackedBranches\u003c/code\u003e属性。它将使Spring Cloud Config Server强制删除本地仓库中未跟踪的分支。例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003edeleteUntrackedBranches\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003edeleteUntrackedBranches\u003c/code\u003e属性默认为\u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"21112-git刷新频率\"\u003e2.1.1.12. Git刷新频率\u003c/h4\u003e\n\u003cp\u003e你可以通过使用\u003ccode\u003espring.cloud.config.server.git.refreshRate\u003c/code\u003e来控制配置服务器从你的 Git 后台获取更新配置数据的频率。该属性的值是以秒为单位的。默认值为0，意味着配置服务器将在每次请求时从Git repo中获取更新的配置。\u003c/p\u003e\n\u003ch3 id=\"212-版本控制后端文件系统的使用\"\u003e2.1.2 版本控制后端文件系统的使用\u003c/h3\u003e\n\u003cp\u003e对于基于VCS的后端（git、svn），文件被签出或克隆到本地文件系统。默认情况下，它们被放在系统的临时目录中，前缀为\u003ccode\u003econfig-repo-\u003c/code\u003e。例如，在linux上，它可能是\u003ccode\u003e/tmp/config-repo-\u0026lt;randomid\u0026gt;\u003c/code\u003e。一些操作系统会定期清理临时目录。这可能会导致意想不到的行为，比如丢失属性。为了避免这个问题，通过将\u003ccode\u003espring.cloud.config.server.git.basedir\u003c/code\u003e 或\u003ccode\u003espring.cloud.config.server.svn.basedir\u003c/code\u003e设置为不在系统临时结构中的目录，改变配置服务器使用的目录。\u003c/p\u003e\n\u003ch3 id=\"213-文件系统后台\"\u003e2.1.3 文件系统后台\u003c/h3\u003e\n\u003cp\u003e配置服务器中还有一个 \u003ccode\u003enative\u003c/code\u003e配置文件，它不使用Git，而是从本地classpath或文件系统（你想用\u003ccode\u003espring.cloud.config.server.native.searchLocations\u003c/code\u003e指向的任何静态URL）加载配置文件。要使用本地配置文件，请使用 \u003ccode\u003espring.profiles.active=native\u003c/code\u003e启动配置服务器。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e记住要为文件资源使用\u003ccode\u003efile:\u003c/code\u003e前缀（没有前缀的默认值通常是classpath）。与任何Spring Boot配置一样，你可以嵌入\u003ccode\u003e${}\u003c/code\u003e式的环境占位符，但要记住，Windows中的绝对路径需要额外的/（例如，\u003ccode\u003efile:///${user.home}/config-repo）\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003esearchLocations\u003c/code\u003e的默认值与本地Spring Boot应用程序相同（即\u003ccode\u003e[classpath:/, classpath:/config, file:./, file:./config]\u003c/code\u003e）。这不会将服务器上的\u003ccode\u003eapplication.properties\u003c/code\u003es暴露给所有客户端，因为在发送到客户端之前，服务器中存在的任何属性源都会被删除。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e文件系统后端非常适合快速入门并进行测试。 要在生产中使用它，您需要确保文件系统可靠并在Config Server的所有实例上共享。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e搜索位置可以包含\u003ccode\u003e{application}\u003c/code\u003e，\u003ccode\u003e{profile}\u003c/code\u003e和\u003ccode\u003e{label}\u003c/code\u003e的占位符。 通过这种方式，您可以分离路径中的目录并选择一个对您有意义的策略（例如每个应用程序或每个配置文件子目录）。\u003c/p\u003e\n\u003cp\u003e如果你不在搜索位置使用占位符，这个资源库也会将HTTP资源的\u003ccode\u003e{label}\u003c/code\u003e参数附加到搜索路径的后缀，所以属性文件会从每个搜索位置和一个与标签同名的子目录中加载（在Spring环境中，被标记的属性优先）。因此，没有占位符的默认行为与添加一个以\u003ccode\u003e/{label}/\u003c/code\u003e结尾的搜索位置相同。例如，\u003ccode\u003efile:/tmp/config\u003c/code\u003e与\u003ccode\u003efile:/tmp/config,file:/tmp/config/{label}\u003c/code\u003e相同。这种行为可以通过设置\u003ccode\u003espring.cloud.config.server.native.addLabelLocations=false\u003c/code\u003e来禁用。\u003c/p\u003e\n\u003ch3 id=\"214-vault-后端\"\u003e2.1.4 Vault 后端\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Config Server还支持Vault作为后端。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eVault是一个用于安全访问秘密的工具。秘密是任何你想严格控制访问的东西，如API密钥、密码、证书和其他敏感信息。Vault为任何秘密提供了一个统一的接口，同时提供严格的访问控制并记录详细的审计日志。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e有关Vault的更多信息，请参阅\u003ca href=\"https://learn.hashicorp.com/vault/?track=getting-started#getting-started\"\u003eVault快速入门指南\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e为了使配置服务器能够使用Vault后端，你可以用vault配置文件运行你的配置服务器。例如，在你的配置服务器的\u003ccode\u003eapplication.properties\u003c/code\u003e中，你可以添加\u003ccode\u003espring.profiles.active=vault\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e默认情况下，配置服务器假设您的Vault服务器运行在http://127.0.0.1:8200。它还假定后端名称为\u003ccode\u003esecret\u003c/code\u003e，密钥为应用。所有这些默认值都可以在您的配置服务器的\u003ccode\u003eapplication.properties\u003c/code\u003e中进行配置。下表描述了可配置的Vault属性。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003e名称\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003e默认值\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ehost\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e127.0.0.1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eport\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e8200\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003escheme\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003ehttp\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ebackend\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003esecret\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003edefaultKey\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003eapplication\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eprofileSeparator\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e,\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ekvVersion\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eskipSslValidation\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003efalse\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003etimeout\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e5\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003enamespace\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003enull\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e前述表格中的所有属性都必须以\u003ccode\u003espring.cloud.config.server.vault\u003c/code\u003e为前缀，或者放在复合配置中正确的 Vault 部分中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e所有可配置属性都可以在\u003ccode\u003eorg.springframework.cloud.config.server.environment.vaultenvironmentProperties\u003c/code\u003e中找到\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eVault 0.10.0引入了一个版本化的键值后端（k/v后端版本2），它暴露了一个与早期版本不同的API，它现在需要在挂载路径和实际上下文路径之间有一个\u003ccode\u003edata/\u003c/code\u003e，并将秘密包裹在一个数据对象中。设置\u003ccode\u003espring.cloud.config.server.vault.kv-version=2\u003c/code\u003e 将考虑到这一点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e（可选），支持\u003ccode\u003eVault Enterprise X-Vault-Namespace\u003c/code\u003e标头。 要将其发送到Vault设置\u003ccode\u003enamespace \u003c/code\u003e属性。\u003c/p\u003e\n\u003cp\u003e使用您的CONFIG SERVER运行，您可以将HTTP请求向服务器制作以检索Vault后端的值。 为此，您需要一个为Vault Server提供令牌。\u003c/p\u003e\n\u003cp\u003e首先，将一些数据放在Vault中，如下例所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ vault kv put secret/application foo=bar baz=bam\n$ vault kv put secret/myapp foo=myappsbar\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其次，对CONFIG Server进行HTTP请求以检索值，如以下示例所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ curl -X \u0026#34;GET\u0026#34; \u0026#34;http://localhost:8888/myapp/default\u0026#34; -H \u0026#34;X-Config-Token: yourtoken\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e您应该看到类似于以下内容的响应：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e{\n   \u0026#34;name\u0026#34;:\u0026#34;myapp\u0026#34;,\n   \u0026#34;profiles\u0026#34;:[\n      \u0026#34;default\u0026#34;\n   ],\n   \u0026#34;label\u0026#34;:null,\n   \u0026#34;version\u0026#34;:null,\n   \u0026#34;state\u0026#34;:null,\n   \u0026#34;propertySources\u0026#34;:[\n      {\n         \u0026#34;name\u0026#34;:\u0026#34;vault:myapp\u0026#34;,\n         \u0026#34;source\u0026#34;:{\n            \u0026#34;foo\u0026#34;:\u0026#34;myappsbar\u0026#34;\n         }\n      },\n      {\n         \u0026#34;name\u0026#34;:\u0026#34;vault:application\u0026#34;,\n         \u0026#34;source\u0026#34;:{\n            \u0026#34;baz\u0026#34;:\u0026#34;bam\u0026#34;,\n            \u0026#34;foo\u0026#34;:\u0026#34;bar\u0026#34;\n         }\n      }\n   ]\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e客户端提供必要的认证以让配置服务器与Vault对话的默认方式是设置\u003ccode\u003eX-Config-Token\u003c/code\u003e头。但是，您可以通过设置与\u003ccode\u003eSpring Cloud Vault\u003c/code\u003e相同的配置属性，省略该头文件并在服务器中配置认证。要设置的属性是\u003ccode\u003espring.cloud.config.server.vault.authentication\u003c/code\u003e。它应该被设置为支持的认证方法之一。您可能还需要设置您所使用的认证方法的其他特定属性，方法是使用与\u003ccode\u003espring.cloud.vault\u003c/code\u003e记载的相同的属性名称，但使用\u003ccode\u003espring.cloud.config.server.vault\u003c/code\u003e前缀。请参阅\u003ca href=\"https://cloud.spring.io/spring-cloud-vault/reference/html/#vault.config.authentication\"\u003e《Spring Cloud Vault参考指南》\u003c/a\u003e了解更多细节。\u003c/p\u003e\n\u003cp\u003e如果你省略了\u003ccode\u003eX-Config-Token\u003c/code\u003e头并使用服务器属性来设置验证，配置服务器应用程序需要额外依赖\u003ccode\u003eSpring Vault\u003c/code\u003e来启用额外的验证选项。请参阅\u003ccode\u003eSpring Vault\u003c/code\u003e参考指南，了解如何添加该依赖关系。\u003c/p\u003e\n\u003ch4 id=\"2141-多个属性源\"\u003e2.1.4.1 多个属性源\u003c/h4\u003e\n\u003cp\u003e当使用Vault时，您可以为您的应用程序提供多个属性源。例如，假设你已将数据写入Vault的以下路径：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003esecret/myApp,dev\nsecret/myApp\nsecret/application,dev\nsecret/application\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e写入\u003ccode\u003esecret/application\u003c/code\u003e的属性对使用配置服务器的所有应用程序都是可用的。一个名称为myApp的应用程序将有任何写入\u003ccode\u003esecret/myApp和secret/application\u003c/code\u003e的属性对其可用。当myApp启用\u003ccode\u003edev\u003c/code\u003e \u003ccode\u003eprofile\u003c/code\u003e时，写入上述所有路径的属性对它来说都是可用的，列表中第一个路径中的属性比其他路径优先。\u003c/p\u003e\n\u003ch3 id=\"215-通过代理访问后端\"\u003e2.1.5. 通过代理访问后端\u003c/h3\u003e\n\u003cp\u003e配置服务器可以通过HTTP或HTTPS代理访问Git或Vault的后端。对于 Git 或 Vault 来说，这种行为由 \u003ccode\u003eproxy.http\u003c/code\u003e 和 \u003ccode\u003eproxy.https\u003c/code\u003e 下的设置来控制。这些设置是针对每个仓库的，所以如果你使用的是复合环境仓库，你必须为复合环境中的每个后端单独配置代理设置。如果使用的网络需要为HTTP和HTTPS URLs提供单独的代理服务器，你可以为一个后端同时配置HTTP和HTTPS代理设置。\u003c/p\u003e\n\u003cp\u003e下表描述了HTTP和HTTPS代理的代理配置属性。所有这些属性必须以\u003ccode\u003eproxy.http\u003c/code\u003e或\u003ccode\u003eproxy.https\u003c/code\u003e为前缀。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e表格2：代理配置属性\u003c/strong\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003e属性名称\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003ehost\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e代理的主机\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003eport\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e用于访问的端口\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003enonProxyHosts\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e配置服务器应该在代理之外访问的任何主机。如果同时为\u003ccode\u003eproxy.http.nonProxyHosts\u003c/code\u003e和\u003ccode\u003eproxy.https.nonProxyHosts\u003c/code\u003e提供了值，将使用\u003ccode\u003eproxy.http\u003c/code\u003e的值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003eusername\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e用来验证代理的用户名。如果\u003ccode\u003eproxy.http.username\u003c/code\u003e和\u003ccode\u003eproxy.https.username\u003c/code\u003e都提供了值，将使用\u003ccode\u003eproxy.http\u003c/code\u003e的值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003epassword\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e用来验证代理的密码。如果同时提供\u003ccode\u003eproxy.http.password\u003c/code\u003e和\u003ccode\u003eproxy.https.password\u003c/code\u003e的值，将使用\u003ccode\u003eproxy.http\u003c/code\u003e的值。.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e以下配置使用HTTPS代理访问Git仓库。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eproxy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttps\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emy-proxy.host.io\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyproxypassword\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;3128\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyproxyusername\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003enonProxyHosts\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eexample.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"216-使用所有应用程序共享配置\"\u003e2.1.6. 使用所有应用程序共享配置\u003c/h3\u003e\n\u003cp\u003e所有应用程序之间的共享配置根据您所采取的方法而异，如以下主题中所述：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#spring-cloud-config-server-file-based-repositories\"\u003eFile Based Repositories\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#spring-cloud-config-server-vault-server\"\u003eVault Server\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"2161--基于文件的存储库\"\u003e2.1.6.1.  基于文件的存储库\u003c/h4\u003e\n\u003cp\u003e对于基于文件的（git、svn和本地）仓库，文件名为\u003ccode\u003eapplication\u003c/code\u003e的资源（\u003ccode\u003eapplication.properties\u003c/code\u003e、\u003ccode\u003eapplication.yml\u003c/code\u003e、\u003ccode\u003eapplication-.properties\u003c/code\u003e等）在所有客户端应用程序之间共享。你可以使用这些文件名的资源来配置全局默认值，并在必要时让它们被特定的应用程序文件所覆盖。\u003c/p\u003e\n\u003cp\u003e属性覆盖功能也可用于设置全局默认值，允许占位符应用程序在本地覆盖它们。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用“本机”配置文件（本地文件系统后端），您应该使用不属于服务器自己配置的显式搜索位置。 否则，默认搜索位置中的应用程序资源被删除，因为它们是服务器的一部分。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"2162-vault-服务器\"\u003e2.1.6.2. Vault 服务器\u003c/h4\u003e\n\u003cp\u003e当使用Vault作为后端时，您可以通过将配置放在\u003ccode\u003esecret/application\u003c/code\u003e中与所有应用程序共享配置。例如，如果你运行下面的Vault命令，所有使用配置服务器的应用程序将有属性foo和baz可供他们使用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003evault write secret/application \u003cspan class=\"nv\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ebar \u003cspan class=\"nv\"\u003ebaz\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ebam\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2163-credhub-服务器\"\u003e2.1.6.3. CredHub 服务器\u003c/h4\u003e\n\u003cp\u003e当使用\u003ccode\u003eCredHub\u003c/code\u003e作为后端时，你可以通过将配置放在\u003ccode\u003e/application/\u003c/code\u003e中，或将其放在应用程序的默认配置文件中，与所有应用程序共享配置。例如，如果你运行下面的CredHub命令，所有使用配置服务器的应用程序将有\u003ccode\u003eshared.color1\u003c/code\u003e和\u003ccode\u003eshared.color2\u003c/code\u003e的属性可供他们使用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003ecredhub \u003cspan class=\"nb\"\u003eset\u003c/span\u003e --name \u003cspan class=\"s2\"\u003e\u0026#34;/application/profile/master/shared\u0026#34;\u003c/span\u003e --type\u003cspan class=\"o\"\u003e=\u003c/span\u003ejson\nvalue: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;shared.color1\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;blue\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;shared.color\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003ecredhub \u003cspan class=\"nb\"\u003eset\u003c/span\u003e --name \u003cspan class=\"s2\"\u003e\u0026#34;/my-app/default/master/more-shared\u0026#34;\u003c/span\u003e --type\u003cspan class=\"o\"\u003e=\u003c/span\u003ejson\nvalue: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;shared.word1\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;shared.word2\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"217-jdbc-后端\"\u003e2.1.7. JDBC 后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持将JDBC（关系型数据库）作为配置属性的后端。你可以通过在\u003ccode\u003eclasspath\u003c/code\u003e中添加\u003ccode\u003espring-jdbc\u003c/code\u003e并使用jdbc配置文件或添加\u003ccode\u003eJdbcEnvironmentRepository\u003c/code\u003e类型的\u003ccode\u003ebean\u003c/code\u003e来启用该功能。如果你在\u003ccode\u003eclasspath\u003c/code\u003e上包含了正确的依赖关系（详情见用户指南），Spring Boot会配置一个数据源。\u003c/p\u003e\n\u003cp\u003e你可以通过将\u003ccode\u003espring.cloud.config.server.jdbc.enabled\u003c/code\u003e 属性设置为\u003ccode\u003efalse\u003c/code\u003e来禁用 \u003ccode\u003eJdbcEnvironmentRepository\u003c/code\u003e 的自动配置。\u003c/p\u003e\n\u003cp\u003e数据库需要有一个名为\u003ccode\u003ePROPERTIES\u003c/code\u003e的表，其列名为\u003ccode\u003eAPPLICATION\u003c/code\u003e、\u003ccode\u003ePROFILE\u003c/code\u003e和\u003ccode\u003eLABEL\u003c/code\u003e（具有通常的环境含义），另外还有KEY和VALUE，用于属性风格中的键和值对。所有字段都是Java中的String类型，所以你可以把它们变成任何你需要的长度的\u003ccode\u003eVARCHAR\u003c/code\u003e。属性值的行为与它们来自Spring Boot名为\u003ccode\u003e{application}-{profile}.properties\u003c/code\u003e的属性文件的行为相同，包括所有的加密和解密，这将作为后处理步骤应用（也就是说，不直接在版本库实现中应用）。\u003c/p\u003e\n\u003ch3 id=\"218-redis-后端\"\u003e2.1.8. Redis 后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持Redis作为配置属性的后端。你可以通过添加对\u003ccode\u003eSpring Data Redis\u003c/code\u003e的依赖性来启用这一功能。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-data-redis\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下配置使用\u003ccode\u003eSpring Data Redistemplate\u003c/code\u003e来访问Redis。 我们可以使用\u003ccode\u003espring.redis.*\u003c/code\u003e属性覆盖默认连接设置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eredis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eredis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e16379\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该属性应存储为哈希中的字段。 哈希名称应与\u003ccode\u003espring.application.name\u003c/code\u003e属性或\u003ccode\u003espring.application.name\u003c/code\u003e和\u003ccode\u003espring.profiles.active[n]\u003c/code\u003e相同。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003eHMSET sample-app server.port \u003cspan class=\"s2\"\u003e\u0026#34;8100\u0026#34;\u003c/span\u003e sample.topic.name \u003cspan class=\"s2\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e test.property1 \u003cspan class=\"s2\"\u003e\u0026#34;property1\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行以上可见的命令后，哈希应包含带有值的以下键：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eHGETALL sample-app\n{\n  \u0026#34;server.port\u0026#34;: \u0026#34;8100\u0026#34;,\n  \u0026#34;sample.topic.name\u0026#34;: \u0026#34;test\u0026#34;,\n  \u0026#34;test.property1\u0026#34;: \u0026#34;property1\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e当没有指定配置文件时，将使用默认值\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"219-aws-s3-后端\"\u003e2.1.9. AWS S3 后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持\u003ccode\u003eAWS S3\u003c/code\u003e作为配置属性的后端。 您可以通过向Amazon S3添加对AWS Java SDK的依赖性来启用此功能。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003ecom.amazonaws\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003eaws-java-sdk-s3\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下配置使用AWS S3客户端访问配置文件。 我们可以使用\u003ccode\u003espring.aws3.*\u003c/code\u003e属性以选择存储配置的存储桶。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eawss3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eawss3\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eregion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eus-east-1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ebucket\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebucket1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以指定一个AWS URL，用\u003ccode\u003espring.awss3.endpoint\u003c/code\u003e覆盖你的S3服务的标准端点。这允许支持S3的测试区，以及其他S3兼容的存储API。\u003c/p\u003e\n\u003cp\u003e使用\u003ca href=\"https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html\"\u003e默认的AWS凭据\u003c/a\u003e提供程序链找到凭据。 无需进一步配置，支持版本化和加密存储桶。\u003c/p\u003e\n\u003cp\u003e配置文件以\u003ccode\u003e{application}-{profile}.properties\u003c/code\u003e、\u003ccode\u003e{application}-{profile}.yml\u003c/code\u003e或\u003ccode\u003e{application}-{profile}.json\u003c/code\u003e的形式存储在你的桶中。可以提供一个可选的标签来指定文件的目录路径。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当没有指定配置文件时，将使用默认值\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"2110-credhub-后端\"\u003e2.1.10. CredHub 后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持CredHub作为配置属性的后端。你可以通过添加对\u003ccode\u003eSpring CredHub\u003c/code\u003e的依赖性来启用这一功能。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.credhub\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-credhub-starter\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下配置使用相互TLS访问CredHub：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecredhub\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecredhub\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://credhub:8844\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该属性应存储为JSON，例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003ecredhub set --name \u0026#34;/demo-app/default/master/toggles\u0026#34; --type=json\nvalue: {\u0026#34;toggle.button\u0026#34;: \u0026#34;blue\u0026#34;, \u0026#34;toggle.link\u0026#34;: \u0026#34;red\u0026#34;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003ecredhub \u003cspan class=\"nb\"\u003eset\u003c/span\u003e --name \u003cspan class=\"s2\"\u003e\u0026#34;/demo-app/default/master/abs\u0026#34;\u003c/span\u003e --type\u003cspan class=\"o\"\u003e=\u003c/span\u003ejson\nvalue: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;marketing.enabled\u0026#34;\u003c/span\u003e: true, \u003cspan class=\"s2\"\u003e\u0026#34;external.enabled\u0026#34;\u003c/span\u003e: false\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所有应用名称为\u003ccode\u003espring.cloud.config.name = demo-app\u003c/code\u003e将具有以下属性：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e{\n    toggle.button: \u0026#34;blue\u0026#34;,\n    toggle.link: \u0026#34;red\u0026#34;,\n    marketing.enabled: true,\n    external.enabled: false\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e当没有指定配置文件时，将使用默认值；当没有指定标签时，将使用主值作为默认值。注意：添加到应用程序的值将被所有应用程序共享。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"21101-oauth-20\"\u003e2.1.10.1 OAuth 2.0\u003c/h4\u003e\n\u003cp\u003e你可以使用\u003ca href=\"https://docs.cloudfoundry.org/concepts/architecture/uaa.html\"\u003eUAA\u003c/a\u003e作为提供程序使用\u003ca href=\"https://oauth.net/2/\"\u003eOAuth 2.0\u003c/a\u003e进行身份验证。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.security\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-security-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.security\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-security-oauth2-client\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下配置使用OAuth 2.0和UAA访问CredHub：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecredhub\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecredhub\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://credhub:8844\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eregistration-id\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecredhub-client\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003esecurity\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eregistration\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ecredhub-client\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003euaa\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient-id\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecredhub_config_server\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient-secret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003easecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eauthorization-grant-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eclient_credentials\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euaa\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003etoken-uri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://uaa:8443/oauth/token\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e使用的UAA客户-ID应该有credhub.read作为范围。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"2111-复合环境仓库\"\u003e2.1.11. 复合环境仓库\u003c/h3\u003e\n\u003cp\u003e在某些情况下，你可能希望从多个环境仓库中提取配置数据。要做到这一点，你可以在配置服务器的应用程序属性或YAML文件中启用\u003ccode\u003ecomposite\u003c/code\u003e配置文件。例如，如果你想从一个\u003ccode\u003eSubversion\u003c/code\u003e 仓库以及两个 Git 仓库提取配置数据，你可以为你的配置服务器设置以下属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecomposite\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecomposite\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e-\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esvn\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:///path/to/svn/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e-\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:///path/to/rex/git/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e-\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:///path/to/walter/git/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用这种配置，优先级是由复合键下的仓库排列顺序决定的。在上面的例子中，Subversion 仓库被列在第一位，所以在 Subversion 仓库中发现的值会优先于在某个 Git 仓库中发现的相同属性的值。在\u003ccode\u003erex\u003c/code\u003e Git 仓库中找到的值会在\u003ccode\u003ewalter\u003c/code\u003e Git 仓库中找到的相同属性值之前使用。\u003c/p\u003e\n\u003cp\u003e如果你想只从不同类型的存储库中提取配置数据，你可以在配置服务器的应用程序属性或YAML文件中启用相应的配置文件，而不是\u003ccode\u003ecomposite\u003c/code\u003e配置文件。例如，如果你想从一个Git仓库和一个\u003ccode\u003eHashiCorp Vault\u003c/code\u003e服务器拉取配置数据，你可以为你的配置服务器设置以下属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit, vault\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:///path/to/git/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eorder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003evault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e127.0.0.1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8200\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eorder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用这种配置，可以通过\u003ccode\u003eorder\u003c/code\u003e属性来确定优先权。你可以使用\u003ccode\u003eorder\u003c/code\u003e属性来为你的所有存储库指定优先顺序。\u003ccode\u003eorder\u003c/code\u003e属性的数值越低，它的优先级就越高。存储库的优先顺序有助于解决包含相同属性值的存储库之间的任何潜在冲突。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你的复合环境包括一个Vault服务器，就像前面的例子一样，您必须在向配置服务器发出的每个请求中包括一个Vault令牌。参见Vault后台。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e从环境资源库检索数值时，任何类型的失败都会导致整个复合环境的失败。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当使用复合环境时，重要的是所有版本库都包含相同的标签。如果你有一个类似于前面例子中的环境，你请求带有master标签的配置数据，但Subversion版本库不包含一个叫做master的分支，整个请求就会失败。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"21111自定义复合环境存储库\"\u003e2.1.11.1.自定义复合环境存储库\u003c/h4\u003e\n\u003cp\u003e除了使用Spring Cloud的一个环境库外，你还可以提供你自己的\u003ccode\u003eEnvironmentRepository Bean\u003c/code\u003e，作为复合环境的一部分。要做到这一点，你的\u003ccode\u003eBean\u003c/code\u003e必须实现\u003ccode\u003eEnvironmentRepository\u003c/code\u003e接口。如果你想在复合环境中控制你的自定义\u003ccode\u003eEnvironmentRepository\u003c/code\u003e的优先级，你也应该实现\u003ccode\u003eOrdered\u003c/code\u003e接口并重写\u003ccode\u003egetOrdered\u003c/code\u003e方法。如果你不实现\u003ccode\u003eOrdered\u003c/code\u003e接口，你的\u003ccode\u003eEnvironmentRepository\u003c/code\u003e将被赋予最低的优先级。\u003c/p\u003e\n\u003ch3 id=\"2112-属性覆盖\"\u003e2.1.12. 属性覆盖\u003c/h3\u003e\n\u003cp\u003e配置服务器有一个 \u0026ldquo;overrides \u0026ldquo;功能，可以让操作员为所有应用程序提供配置属性。被覆盖的属性不能被应用程序用正常的Spring Boot钩子方法改变。要声明覆盖，请向 \u003ccode\u003espring.cloud.config.server.overrides\u003c/code\u003e 添加一个\u003ccode\u003ekey-value\u003c/code\u003e对的映射，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eoverrides\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebar\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面的示例会导致配置客户端的所有应用程序读取foo = bar，与自己的配置无关。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e配置系统不能强制应用程序以任何特定方式使用配置数据。因此，覆盖是不可执行的。然而，它们确实为Spring Cloud Config客户端提供了有用的默认行为。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e通常情况下，带有\u003ccode\u003e${}\u003c/code\u003e的Spring环境占位符可以通过使用反斜杠\u003ccode\u003e（\\）\u003c/code\u003e来转义\u003ccode\u003e$\u003c/code\u003e或{来转义\u003ccode\u003e（\u003c/code\u003e。并在客户端解析）。例如，\u003ccode\u003e\\${app.foo:bar}\u003c/code\u003e会解析为\u003ccode\u003ebar\u003c/code\u003e，除非应用程序提供了自己的\u003ccode\u003eapp.foo\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在YAML中，你不需要转义反斜杠本身。然而，在属性文件中，当你在服务器上配置重写时，你确实需要转义反斜杠。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你可以通过在远程资源库中设置 \u003ccode\u003espring.cloud.config.overrideNone=true \u003c/code\u003e标志（默认为 false）来改变客户端中所有覆盖的优先级，使其更像默认值，让应用程序在环境变量或系统属性中提供自己的值。\u003c/p\u003e\n\u003ch3 id=\"22-健康指示器\"\u003e2.2. 健康指示器\u003c/h3\u003e\n\u003cp\u003e配置服务器带有一个健康指示器，用于检查配置的 \u003ccode\u003eEnvironmentRepository\u003c/code\u003e 是否在工作。默认情况下，它要求\u003ccode\u003eEnvironmentRepository\u003c/code\u003e提供一个名为\u003ccode\u003eapp\u003c/code\u003e的应用程序、\u003ccode\u003edefault\u003c/code\u003e配置文件和\u003ccode\u003eEnvironmentRepository\u003c/code\u003e实现提供的默认标签。\u003c/p\u003e\n\u003cp\u003e你可以配置健康指标，以检查更多的应用程序以及自定义配置文件和自定义标签，如以下例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepositories\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emyservice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emylabel\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emyservice-dev\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyservice\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edevelopment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过设置\u003ccode\u003eManagement.Health.config.enabled = false\u003c/code\u003e来禁用健康指示符。\u003c/p\u003e\n\u003ch3 id=\"23-security\"\u003e2.3. Security\u003c/h3\u003e\n\u003cp\u003e你可以用任何对你有意义的方式来保护你的配置服务器（从物理网络安全到OAuth2令牌），因为\u003ccode\u003eSpring Security\u003c/code\u003e和\u003ccode\u003eSpring Boot\u003c/code\u003e提供对许多安全安排的支持。\u003c/p\u003e\n\u003cp\u003e要使用默认的Spring Boot配置的\u003ccode\u003eHTTP Basic\u003c/code\u003e安全，请在\u003ccode\u003eclasspath\u003c/code\u003e上包含\u003ccode\u003eSpring Security\u003c/code\u003e（例如，通过\u003ccode\u003espring-boot-starter-security\u003c/code\u003e）。默认的用户名是\u003ccode\u003euser\u003c/code\u003e，密码是随机生成的。随机密码在实践中没有用，所以我们建议你配置密码（通过设置\u003ccode\u003espring.security.user.password\u003c/code\u003e），并对其进行加密（关于如何做到这一点，见下文的说明）。\u003c/p\u003e\n\u003ch3 id=\"24-加密和解密\"\u003e2.4. 加密和解密\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e为了使用加密和解密功能，你需要在你的JVM中安装全部的JCE（默认情况下不包括）。你可以从\u003ccode\u003eOracle \u003c/code\u003e公司下载 \u0026ldquo;Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files\u0026rdquo;，并遵循安装说明（基本上，你需要用你下载的文件替换\u003ccode\u003eJRE lib/security\u003c/code\u003e目录中的两个策略文件）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果远程属性源包含加密的内容（以\u003ccode\u003e{cipher}\u003c/code\u003e开头的值），它们在通过HTTP发送给客户端之前会被解密。这种设置的主要优点是，当属性值处于 \u0026ldquo;静止状态 \u0026ldquo;时（例如，在git仓库中），它们不需要是纯文本。如果一个值不能被解密，它就会被从属性源中删除，并添加一个额外的属性，其密钥相同，但前缀为\u003ccode\u003einvalid\u003c/code\u003e和一个表示 \u0026ldquo;not applicable \u0026ldquo;的值（通常是\u0026lt;n/a\u0026gt;）。这主要是为了防止密码文本被用作密码而意外地泄露出去。\u003c/p\u003e\n\u003cp\u003e如果你为配置客户端应用程序设置了一个远程配置仓库，它可能包含一个类似于下面的\u003ccode\u003eapplication.yml\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edatasource\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edbuser\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;{cipher}FKSAJDFGYOS8F7GLHAKERGFHLSAJ\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eapplication.properties\u003c/code\u003e文件中的加密值不能用引号包裹。否则，该值将不会被解密。下面的例子显示了可以工作的值。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.datasource.username: dbuser\nspring.datasource.password: {cipher}FKSAJDFGYOS8F7GLHAKERGFHLSAJ\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以安全地把这个纯文本推送到共享的git仓库，而秘密密码仍然受到保护。\u003c/p\u003e\n\u003cp\u003e服务器还公开了\u003ccode\u003e/encrypt\u003c/code\u003e和\u003ccode\u003e/decrypt\u003c/code\u003e端点（假设这些端点是安全的，只有授权的代理才能访问）。如果你编辑一个远程配置文件，你可以使用配置服务器通过POST到\u003ccode\u003e/encrypt\u003c/code\u003e端点来加密数值，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ curl localhost:8888/encrypt -s -d mysecret\n682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果你用curl测试，那么使用\u003ccode\u003e--data-urlencode\u003c/code\u003e（而不是-d），并在要加密的值前加上\u003ccode\u003e=\u003c/code\u003e（curl需要这样做），或者设置一个明确的\u003ccode\u003eContent-Type: text/plain\u003c/code\u003e，以确保curl在有特殊字符（'+\u0026lsquo;特别棘手）时能正确编码数据。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e要确保在加密的值中不包括任何curl命令的统计信息，这就是为什么例子中使用-s选项来沉默它们。将数值输出到文件中可以帮助避免这个问题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e解密操作也可以通过/decrypt进行（前提是服务器配置了对称密钥或全密钥对），如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ curl localhost:8888/decrypt -s -d 682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\nmysecret\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在你把它放在YAML或属性文件中，以及在你提交和推送到远程（可能是不安全的）商店之前，采取加密的值并添加\u003ccode\u003e{cipher}\u003c/code\u003e前缀。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e/encrypt\u003c/code\u003e和\u003ccode\u003e/decrypt\u003c/code\u003e端点也都接受\u003ccode\u003e/*/{application}/{profiles}\u003c/code\u003e形式的路径，当客户端调用主环境资源时，可用于在每个应用（名称）和每个文件的基础上控制密码。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e为了以这种精细的方式控制加密，你还必须提供一个\u003ccode\u003eTextEncryptorLocator\u003c/code\u003e类型的\u003ccode\u003e@Bean\u003c/code\u003e，它可以为每个名字和配置文件创建一个不同的加密器。默认提供的那个没有这样做（所有的加密都使用同一个密钥）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ccode\u003espring\u003c/code\u003e命令行客户端（安装了\u003ccode\u003eSpring Cloud CLI\u003c/code\u003e扩展）也可以用来加密和解密，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ spring encrypt mysecret --key foo\n682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\n$ spring decrypt --key foo 682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\nmysecret\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要使用文件中的密钥（如用于加密的RSA公钥），在密钥值前加上\u0026rdquo;@\u0026quot;，并提供文件路径，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ spring encrypt mysecret --key @\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/.ssh/id_rsa.pub\nAQAjPgt3eFZQXwt8tsHAVv/QHiY5sI2dRcR+...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003e--key\u003c/code\u003e参数是强制性的（尽管有一个\u003ccode\u003e--\u003c/code\u003e前缀）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"25-key管理\"\u003e2.5. Key管理\u003c/h3\u003e\n\u003cp\u003e配置服务器可以使用对称（共享）密钥或非对称密钥（RSA密钥对）。非对称的选择在安全性方面更胜一筹，但使用对称密钥通常更方便，因为它是在\u003ccode\u003ebootstrap.properties\u003c/code\u003e中配置的单一属性值。\u003c/p\u003e\n\u003cp\u003e要配置对称密钥，你需要将\u003ccode\u003eencrypt.key\u003c/code\u003e设置为一个秘密的String（或者使用\u003ccode\u003eENCRYPT_KEY\u003c/code\u003e环境变量来防止它进入纯文本配置文件）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你不能使用encrypt.key配置非对称密钥。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要配置非对称钥匙，请使用钥匙库（例如，由 JDK 附带的 keytool 工具创建）。密钥库的属性是 \u003ccode\u003eencrypt.keyStore.*\u003c/code\u003e，\u003ccode\u003e*\u003c/code\u003e可选以下属性:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:center\"\u003e属性\u003c/th\u003e\n\u003cth style=\"text-align:center\"\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e\u003ccode\u003eencrypt.keyStore.location\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e包含一个资源位置\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e\u003ccode\u003eencrypt.keyStore.password\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e解锁钥匙库的密码\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e\u003ccode\u003eencrypt.keyStore.alias\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e确定要使用商店中的哪个键\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e\u003ccode\u003eencrypt.keyStore.type\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e要创建的KeyStore的类型。默认为\u003ccode\u003ejks\u003c/code\u003e。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e加密是用公钥完成的，而解密则需要私钥。因此，原则上，如果你只想加密（并准备在本地用私钥解密），你可以只在服务器上配置公钥。在实践中，你可能不想在本地进行解密，因为它将密钥管理过程分散到所有的客户端，而不是集中在服务器上。另一方面，如果你的配置服务器相对不安全，而且只有少数客户需要加密的属性，这可能是一个有用的选择。\u003c/p\u003e\n\u003ch3 id=\"26-创建用于测试的key-store\"\u003e2.6. 创建用于测试的Key Store\u003c/h3\u003e\n\u003cp\u003e要创建用于测试的密钥库，可以使用类似于以下内容的命令：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ keytool -genkeypair -alias mytestkey -keyalg RSA \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e  -dname \u003cspan class=\"s2\"\u003e\u0026#34;CN=Web Server,OU=Unit,O=Organization,L=City,S=State,C=US\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e  -keypass changeme -keystore server.jks -storepass letmein\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当使用JDK 11或以上版本时，你在使用上述命令时可能会得到以下警告。在这种情况下，你可能要确保keypass和storepass的值一致。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003eWarning:  Different store and key passwords not supported \u003cspan class=\"k\"\u003efor\u003c/span\u003e PKCS12 KeyStores. Ignoring user-specified -keypass value.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把\u003ccode\u003eserver.jks\u003c/code\u003e文件放在\u003ccode\u003eclasspath\u003c/code\u003e中（例如），然后，在你的\u003ccode\u003ebootstrap.yml\u003c/code\u003e中，为配置服务器创建以下设置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eencrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ekeyStore\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eclasspath:/server.jks\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eletmein\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ealias\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emytestkey\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esecret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003echangeme\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"27使用多个key-和-轮换-key\"\u003e2.7.使用多个Key 和 轮换 key\u003c/h3\u003e\n\u003cp\u003e除了加密属性值中的\u003ccode\u003e{cipher}\u003c/code\u003e前缀外，配置服务器在（Base64编码的）密码文本开始前寻找零个或多个\u003ccode\u003e{name:value}\u003c/code\u003e前缀。密钥被传递给\u003ccode\u003eTextEncryptorLocator\u003c/code\u003e，它可以做任何需要的逻辑来为密码定位一个\u003ccode\u003eTextEncryptor\u003c/code\u003e。如果你已经配置了一个钥匙库\u003ccode\u003e（encrypt.keystore.location\u003c/code\u003e），默认的定位器会寻找带有由钥匙前缀提供的别名的钥匙，其密码文本类似于以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e`{cipher}{key:testkey}...`\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该定位器寻找一个名为 \u0026ldquo;testkey \u0026ldquo;的密钥。也可以通过在前缀中使用\u003ccode\u003e{secret:...}\u003c/code\u003e值来提供一个秘密。然而，如果没有提供，默认情况下是使用钥匙库密码（当你建立一个钥匙库而没有指定一个秘密时，你会得到这样的密码）。如果你提供了一个秘密，你也应该用一个自定义的\u003ccode\u003eSecretLocator\u003c/code\u003e来加密这个秘密。\u003c/p\u003e\n\u003cp\u003e当钥匙只被用来加密几个字节的配置数据时（也就是说，它们没有被用在其他地方），从密码学的角度来看，钥匙的轮换几乎没有必要。然而，你可能偶尔需要改变密钥（例如，在安全漏洞的情况下）。在这种情况下，所有的客户端都需要改变他们的源配置文件（例如，在git中），并在所有密码中使用新的\u003ccode\u003e{key:...}\u003c/code\u003e前缀。请注意，客户需要首先检查配置服务器密钥库中的密钥别名是否可用。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你想让配置服务器处理所有的加密以及解密，\u003ccode\u003e{name:value}\u003c/code\u003e前缀也可以作为纯文本添加到\u003ccode\u003e/encrypt\u003c/code\u003e端点上。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"28-服务加密属性\"\u003e2.8. 服务加密属性\u003c/h3\u003e\n\u003cp\u003e有时你想让客户端在本地解密配置，而不是在服务器中进行解密。在这种情况下，如果你提供 \u003ccode\u003eencrypt.* \u003c/code\u003e配置来定位一个密钥，你仍然可以有\u003ccode\u003e /encrypt\u003c/code\u003e 和 \u003ccode\u003e/decrypt\u003c/code\u003e 端点，但你需要通过在 \u003ccode\u003ebootstrap.[yml|properties] \u003c/code\u003e中放置 \u003ccode\u003espring.cloud.config.server.encrypt.enabled=false\u003c/code\u003e 明确地关闭对出站属性的解密。如果你不关心端点，如果你不配置密钥或启用的标志，它应该可以工作。\u003c/p\u003e\n\u003ch2 id=\"3-提供其他形式的服务\"\u003e3. 提供其他形式的服务\u003c/h2\u003e\n\u003cp\u003e来自\u003ccode\u003eenvironment \u003c/code\u003e端点的默认JSON格式非常适合Spring应用程序使用，因为它直接映射到\u003ccode\u003eenvironment \u003c/code\u003e抽象。如果你愿意，你可以通过在资源路径中添加一个后缀（\u0026quot;.yml\u0026rdquo;、\u0026quot;.yaml \u0026ldquo;或\u0026rdquo;.properties\u0026rdquo;）来消费YAML或Java属性的相同数据。这对于那些不关心JSON端点的结构或其提供的额外元数据的应用程序的消费是非常有用的（例如，不使用Spring的应用程序可能会从这种方法的简单性中受益）。\u003c/p\u003e\n\u003cp\u003eYAML 和属性表示法有一个额外的标志（以\u003ccode\u003eboolean \u003c/code\u003e查询参数的形式提供，称为 \u003ccode\u003eresolvePlaceholders\u003c/code\u003e），表示源文档中的占位符（以标准的\u003ccode\u003eSpring ${...}\u003c/code\u003e形式）应该在渲染之前在输出中被解析，可能的话。对于不了解Spring占位符约定的消费者来说，这是一个有用的功能。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用YAML或属性格式有一些限制，主要是与元数据的损失有关。例如JSON的结构是一个有序的属性源列表，其名称与源相关。YAML和属性形式被凝聚成一张图，即使值的来源有多个，原始源文件的名称也会丢失。另外，YAML表示法也不一定是支持仓库中YAML源的可靠表示。它是由平面属性源的列表构建的，必须对键的形式做出假设。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"4-服务于纯文本\"\u003e4. 服务于纯文本\u003c/h2\u003e\n\u003cp\u003e你的应用程序可能需要为其环境量身定制的通用纯文本配置文件，而不是使用环境抽象（或YAML或properties格式中的一种替代表示）。配置服务器通过\u003ccode\u003e/{application}/{profile}/{label}/{path}\u003c/code\u003e的额外端点提供这些文件，其中\u003ccode\u003eapplication\u003c/code\u003e、\u003ccode\u003eprofile\u003c/code\u003e和\u003ccode\u003elabel\u003c/code\u003e的含义与常规环境端点相同，但path是一个文件名的路径（如\u003ccode\u003elog.xml\u003c/code\u003e）。这个端点的源文件的位置与环境端点的相同。属性和YAML文件也使用同样的搜索路径。然而，不是聚合所有匹配的资源，而是只返回第一个匹配的资源。\u003c/p\u003e\n\u003cp\u003e找到资源后，正常格式的占位符（\u003ccode\u003e${...}\u003c/code\u003e）通过使用提供的应用程序名称、配置文件和标签的有效环境来解决。通过这种方式，资源端点与环境端点紧密结合。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e与环境配置的源文件一样，配置文件被用来解决文件名。因此，如果你想要一个特定的配置文件，\u003ccode\u003e/*/development/*/logback.xml\u003c/code\u003e可以被一个叫做\u003ccode\u003elogback-development.xml\u003c/code\u003e的文件解决（优先于logback.xml）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你不想提供标签而让服务器使用默认标签，你可以提供一个\u003ccode\u003euseDefaultLabel\u003c/code\u003e请求参数。因此，前面的默认配置文件的例子可以是\u003ccode\u003e/sample/default/nginx.conf?useDefaultLabel\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e目前，Spring Cloud Config可以为git、SVN、本地后端和AWS S3提供纯文本。对git、SVN和本地后端的支持是相同的。AWS S3的工作方式有些不同。下面的章节展示了每一种的工作方式。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#spring-cloud-config-serving-plain-text-git-svn-native-backends\"\u003eGit, SVN, and Native Backends\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#spring-cloud-config-serving-plain-text-aws-s3\"\u003eAWS S3\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"41-gitsvn和native-后端\"\u003e4.1. GIT,SVN和Native 后端\u003c/h3\u003e\n\u003cp\u003eGit或SVN存储库或Native后端的以下示例：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eapplication.yml\nnginx.conf\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003enginx.conf\u003c/code\u003e类似于以下列表：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eserver {\n    listen              80;\n    server_name         ${nginx.server.name};\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eapplication.yml\u003c/code\u003e类似于以下列表：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003enginx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eexample.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edevelopment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003enginx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edevelop.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e/sample/default/master/nginx.conf\u003c/code\u003e资源类似如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eserver {\n    listen              80;\n    server_name         example.com;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e/sample/development/master/nginx.conf\u003c/code\u003e 类似如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eserver {\n    listen              80;\n    server_name         develop.com;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"42-aws-s3\"\u003e4.2. AWS S3\u003c/h3\u003e\n\u003cp\u003e要为AWS s3提供纯文本服务，配置服务器应用程序需要包括一个对Spring Cloud AWS的依赖。关于如何设置该依赖关系的详细信息，请参见《Spring Cloud AWS参考指南》。然后你需要配置Spring Cloud AWS，如《Spring Cloud AWS参考指南》中所述。\u003c/p\u003e\n\u003ch3 id=\"43-解密文本\"\u003e4.3. 解密文本\u003c/h3\u003e\n\u003cp\u003e默认情况下，纯文本文件中的加密值不会被解密。为了启用纯文本文件的解密，请在 bootstrap 中设置 \u003ccode\u003espring.cloud.config.server.encrypt.enabled=true\u003c/code\u003e 和 \u003ccode\u003espring.cloud.config.server.encrypt.plainTextEncrypt=true[yml|properties]\u003c/code\u003e 。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e解密纯文本文件只支持YAML、JSON和属性文件扩展名。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果该功能被启用，并且请求一个不支持的文件扩展，文件中的任何加密值将不会被解密。\u003c/p\u003e\n\u003ch2 id=\"5-嵌入配置服务器\"\u003e5. 嵌入配置服务器\u003c/h2\u003e\n\u003cp\u003e配置服务器最好作为一个独立的应用程序运行。然而，如果需要的话，你可以把它嵌入到另一个应用程序中。要做到这一点，请使用\u003ccode\u003e@EnableConfigServer\u003c/code\u003e注解。在这种情况下，一个名为\u003ccode\u003espring.cloud.config.server.bootstrap\u003c/code\u003e的可选属性会很有用。它是一个标志，表示服务器是否应该从自己的远程资源库配置自己。默认情况下，该标志是关闭的，因为它可能延迟启动。然而，当嵌入到另一个应用程序中时，以与其他应用程序相同的方式初始化是有意义的。当设置\u003ccode\u003e spring.cloud.config.server.bootstrap\u003c/code\u003e 为 true 时，你还必须使用复合环境资源库配置。例如\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfigserver\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecomposite\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecomposite\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enative\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003esearch-locations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${HOME}/Desktop/config\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ebootstrap\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e​\t如果你使用 bootstrap 标志，配置服务器需要在\u003ccode\u003ebootstrap.yml\u003c/code\u003e 中配置其名称和版本库 URI。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要改变服务器端点的位置，你可以（选择性地）设置\u003ccode\u003espring.cloud.config.server.prefix\u003c/code\u003e（例如\u003ccode\u003e/config\u003c/code\u003e），以在一个前缀下提供资源。该前缀应以\u003ccode\u003e/\u003c/code\u003e开头，但不以\u003ccode\u003e/\u003c/code\u003e结尾。它被应用于配置服务器中的\u003ccode\u003e@RequestMappings\u003c/code\u003e（即在\u003ccode\u003eSpring Boot server.servletPath\u003c/code\u003e和\u003ccode\u003eserver.contextPath\u003c/code\u003e的前缀之下）。\u003c/p\u003e\n\u003cp\u003e如果你想直接从后端资源库（而不是从配置服务器）读取应用程序的配置，你基本上想要一个没有端点的嵌入式配置服务器。你可以通过不使用\u003ccode\u003e@EnableConfigServer\u003c/code\u003e注解（设置\u003ccode\u003espring.cloud.config.server.bootstrap=true\u003c/code\u003e）完全关闭端点。\u003c/p\u003e\n\u003ch2 id=\"6-推送通知和spring-cloud-bus\"\u003e6. 推送通知和Spring Cloud Bus\u003c/h2\u003e\n\u003cp\u003e许多源代码库提供商（如Github、Gitlab、Gitea、Gitee、Gogs或Bitbucket）通过webhook通知你库中的变化。你可以通过供应商的用户界面将\u003ccode\u003ewebhook\u003c/code\u003e配置为一个URL和一组你感兴趣的事件。例如，Github使用POST向webhook发送一个包含提交列表的JSON主体和一个设置为\u003ccode\u003epush\u003c/code\u003e的头（\u003ccode\u003eX-Github-Event\u003c/code\u003e）。如果你添加了对\u003ccode\u003espring-cloud-config-monitor\u003c/code\u003e库的依赖，并在你的配置服务器中激活了\u003ccode\u003eSpring Cloud Bus\u003c/code\u003e，那么就会启用一个\u003ccode\u003e/monitor\u003c/code\u003e端点。\u003c/p\u003e\n\u003cp\u003e当\u003ccode\u003ewebhook\u003c/code\u003e被激活时，配置服务器会向它认为可能发生变化的应用程序发送一个\u003ccode\u003eRefreshRemoteApplicationEvent\u003c/code\u003e。变化检测可以是战略性的。然而，默认情况下，它寻找与应用程序名称相匹配的文件中的变化（例如\u003ccode\u003efoo.properties\u003c/code\u003e是针对\u003ccode\u003efoo\u003c/code\u003e应用程序的，而\u003ccode\u003eapplication.properties\u003c/code\u003e是针对所有应用程序的）。当你想覆盖该行为时，要使用的策略是\u003ccode\u003ePropertyPathNotificationExtractor\u003c/code\u003e，它接受请求头和正文作为参数，并返回一个变化的文件路径列表。\u003c/p\u003e\n\u003cp\u003e默认配置可以在Github、Gitlab、Gitea、Gitee、Gogs或Bitbucket中使用。除了来自Github、Gitlab、Gitee或Bitbucket的JSON通知外，你还可以通过向\u003ccode\u003e/monitor\u003c/code\u003e发送带有表单编码的主体参数的\u003ccode\u003epath={application}\u003c/code\u003e模式来触发变更通知。这样做是为了向与\u003ccode\u003e{application}\u003c/code\u003e模式相匹配的应用程序进行广播（可以包含通配符）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e只有当配置服务器和客户端应用程序中的\u003ccode\u003espring-cloud-bus\u003c/code\u003e都被激活时，才会传输\u003ccode\u003eRefreshRemoteApplicationEven\u003c/code\u003et。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e默认配置也会检测本地git仓库的文件系统变化。在这种情况下，不使用webhook。然而，只要你编辑一个配置文件，就会有一个刷新广播。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"7-spring-cloud-config-client\"\u003e7. Spring Cloud Config Client\u003c/h2\u003e\n\u003cp\u003eSpring Boot应用程序可以立即利用Spring配置服务器（或由应用程序开发人员提供的其他外部属性源）。它还可以获得一些与环境变化事件有关的额外的有用功能。\u003c/p\u003e\n\u003ch3 id=\"71-spring-boot-config-数据导入\"\u003e7.1. Spring Boot Config 数据导入\u003c/h3\u003e\n\u003cp\u003eSpring Boot 2.4引入了一种通过·spring.config.import·属性导入配置数据的新方法。现在这是与配置服务器绑定的默认方式。\u003c/p\u003e\n\u003cp\u003e要选择连接到配置服务器，请在application.properties中设置以下内容：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=optional:configserver:\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在 \u0026ldquo;http://localhost:8888 \u0026ldquo;的默认位置连接到配置服务器。删除可选的: 前缀将导致配置客户端在无法连接到配置服务器时失败。要改变配置服务器的位置，可以设置\u003ccode\u003espring.cloud.config.uri\u003c/code\u003e或在\u003ccode\u003espring.config.import\u003c/code\u003e语句中添加url，如\u003ccode\u003espring.config.import=optional:configserver:http://myhost:8888\u003c/code\u003e。import属性中的位置优先于uri属性。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e通过\u003ccode\u003espring.config.import\u003c/code\u003e导入的Spring Boot配置数据方法不需要一个引导文件（properties或yaml）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"72-配置首个bootstrap\"\u003e7.2. 配置首个BootStrap\u003c/h3\u003e\n\u003cp\u003e要使用传统的引导方式连接到配置服务器，必须通过一个属性或 \u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e 启动器启用引导。该属性是\u003ccode\u003e spring.cloud.bootstrap.enabled=true\u003c/code\u003e。它必须被设置为系统属性或环境变量。一旦启用\u003ccode\u003ebootstrap\u003c/code\u003e，\u003ccode\u003eclasspath\u003c/code\u003e上有\u003ccode\u003eSpring Cloud Config Client\u003c/code\u003e的任何应用程序将按如下方式连接到配置服务器。当配置客户端启动时，它会绑定到配置服务器（通过\u003ccode\u003espring.cloud.config.uri bootstrap\u003c/code\u003e配置属性）并使用远程属性源初始化Spring环境。\u003c/p\u003e\n\u003cp\u003e这种行为的结果是，所有想要使用配置服务器的客户端应用程序都需要一个\u003ccode\u003ebootstrap.yml\u003c/code\u003e（或一个环境变量），并在\u003ccode\u003espring.cloud.config.uri \u003c/code\u003e中设置服务器地址（它默认为 \u0026ldquo;http://localhost:8888\u0026rdquo;）。\u003c/p\u003e\n\u003ch4 id=\"721-discovery-查找首个\"\u003e7.2.1 Discovery 查找首个\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003cp\u003e除非你使用\u003ccode\u003econfig first bootstrap\u003c/code\u003e，否则你需要在配置属性中设置\u003ccode\u003espring.config.import\u003c/code\u003e属性。例如，\u003ccode\u003espring.config.import=optional:configserver:\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e实现，如Spring Cloud Netflix和Eureka Service Discovery或Spring Cloud Consul，你可以让配置服务器向发现服务注册。\u003c/p\u003e\n\u003cp\u003e如果你喜欢使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e来定位配置服务器，你可以通过设置\u003ccode\u003espring.cloud.config.discovery.enabled=true\u003c/code\u003e（默认是false）来实现。例如，使用\u003ccode\u003eSpring Cloud Netflix\u003c/code\u003e，你需要定义Eureka服务器地址（例如，在\u003ccode\u003eeureka.client.serviceUrl.defaultZone\u003c/code\u003e中）。使用这个选项的代价是在启动时要进行额外的网络往返，以定位服务注册。其好处是，只要发现服务是一个固定点，配置服务器就可以改变其坐标。默认的服务ID是\u003ccode\u003econfigserver\u003c/code\u003e，但你可以在客户端通过设置\u003ccode\u003espring.cloud.config.discovery.serviceId\u003c/code\u003e来改变它（在服务器上，以服务的通常方式，如设置\u003ccode\u003espring.application.name\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e发现客户端的实现都支持某种\u003ccode\u003emetadata map\u003c/code\u003e（例如，我们有\u003ccode\u003eEureka.instance.metadataMap\u003c/code\u003e用于\u003ccode\u003eEureka\u003c/code\u003e）。配置服务器的一些额外属性可能需要在其服务注册元数据中进行配置，以便客户端能够正确连接。如果配置服务器用\u003ccode\u003eHTTP Basic\u003c/code\u003e来保证安全，你可以将凭证配置为\u003ccode\u003euser\u003c/code\u003e和\u003ccode\u003epassword\u003c/code\u003e。另外，如果配置服务器有一个上下文路径，你可以设置\u003ccode\u003econfigPath\u003c/code\u003e。例如，下面的YAML文件是针对作为Eureka客户端的配置服务器的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"l\"\u003e...\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadataMap\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eosufhalskjrtl\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elviuhlszvaorhvlo5847\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfigPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/config\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"722-使用eureka和webclient的第一次bootstrap-discovery\"\u003e7.2.2. 使用Eureka和WebClient的第一次Bootstrap Discovery\u003c/h4\u003e\n\u003cp\u003e如果你使用\u003ccode\u003eSpring Cloud Netflix\u003c/code\u003e的\u003ccode\u003eEureka DiscoveryClient\u003c/code\u003e，并且想使用\u003ccode\u003eWebClient\u003c/code\u003e而不是\u003ccode\u003eJersey\u003c/code\u003e或\u003ccode\u003eRestTemplate\u003c/code\u003e，你需要在\u003ccode\u003eclasspath\u003c/code\u003e上包含\u003ccode\u003eWebClient\u003c/code\u003e，并设置\u003ccode\u003eeureka.client.webclient.enabled=true\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"73-配置客户端快速失效\"\u003e7.3. 配置客户端快速失效\u003c/h3\u003e\n\u003cp\u003e在某些情况下，如果服务不能连接到配置服务器，你可能想让它启动失败。如果这是需要的行为，请设置\u003ccode\u003ebootstrap\u003c/code\u003e配置属性\u003ccode\u003espring.cloud.config.fail-fast=true\u003c/code\u003e，使客户端以异常停止。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e要使用\u003ccode\u003espring.config.import\u003c/code\u003e获得类似的功能，只需省略\u003ccode\u003eoptional: \u003c/code\u003e前缀。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"74-配置客户端重试\"\u003e7.4. 配置客户端重试\u003c/h3\u003e\n\u003cp\u003e如果你预计配置服务器在你的应用程序启动时可能偶尔不可用，你可以让它在失败后继续尝试。首先，你需要设置 \u003ccode\u003espring.cloud.config.fail-fast=true\u003c/code\u003e。然后你需要将 \u003ccode\u003espring-retry\u003c/code\u003e 和 \u003ccode\u003espring-boot-starter-aop\u003c/code\u003e 添加到你的 \u003ccode\u003eclasspath\u003c/code\u003e。默认行为是重试六次，初始回退间隔为1000ms，后续回退的指数乘数为\u003ccode\u003e1.1\u003c/code\u003e。你可以通过设置 \u003ccode\u003espring.cloud.config.retry.* \u003c/code\u003e配置属性来配置这些属性（以及其他属性）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e要想完全控制重试行为，并且使用传统的\u003ccode\u003ebootstrap\u003c/code\u003e，请添加一个\u003ccode\u003eRetryOperationsInterceptor\u003c/code\u003e类型的\u003ccode\u003e@Bean\u003c/code\u003e，ID为\u003ccode\u003econfigServerRetryInterceptor\u003c/code\u003e。\u003ccode\u003eSpring Retry\u003c/code\u003e有一个\u003ccode\u003eRetryInterceptorBuilder\u003c/code\u003e，支持创建一个。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"75-用springconfigimport配置客户端重试\"\u003e7.5. 用spring.config.import配置客户端重试\u003c/h3\u003e\n\u003cp\u003e重试在\u003ccode\u003eSpring Boot的spring.config.import\u003c/code\u003e语句中起作用，正常的属性也起作用。但是，如果导入语句是在配置文件中，比如\u003ccode\u003eapplication-prod.properties\u003c/code\u003e，那么你需要用不同的方式来配置重试。配置需要作为url参数放在导入语句中。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication-prod.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=configserver:http://configserver.example.com?fail-fast=true\u0026amp;max-attempts=10\u0026amp;max-interval=1500\u0026amp;multiplier=1.2\u0026amp;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将设置 \u003ccode\u003espring.cloud.config.fail-fast=true\u003c/code\u003e（注意上面缺少前缀）和所有可用的 \u003ccode\u003espring.cloud.config.retry.*\u003c/code\u003e 配置属性。\u003c/p\u003e\n\u003ch3 id=\"76-定位远程配置资源\"\u003e7.6. 定位远程配置资源\u003c/h3\u003e\n\u003cp\u003e配置服务为来自\u003ccode\u003e/{application}/{profile}/{label}\u003c/code\u003e的属性源提供服务，其中客户端应用程序的默认绑定如下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;application\u0026rdquo; = \u003ccode\u003e${spring.application.name}\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;profile\u0026rdquo; = \u003ccode\u003e${spring.profiles.active}\u003c/code\u003e (actually \u003ccode\u003eEnvironment.getActiveProfiles()\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;label\u0026rdquo; = \u0026ldquo;master\u0026rdquo;\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e​\t当设置属性\u003ccode\u003e${spring.application.name}\u003c/code\u003e时，不要在你的应用程序名称前加上保留词\u003ccode\u003eapplication-\u003c/code\u003e，以防止在解决正确的属性源时出现问题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你可以通过设置\u003ccode\u003espring.cloud.config\u003c/code\u003e.\u003cem\u003e（其中\u003c/em\u003e是名称、配置文件或标签）来覆盖所有的配置。标签对于回滚到以前版本的配置非常有用。在默认的配置服务器实现中，它可以是一个git标签、分支名称或提交ID。标签也可以以逗号分隔的列表形式提供。在这种情况下，列表中的项目会被逐一尝试，直到有一个成功。这种行为在处理一个特性分支时很有用。例如，你可能想让配置标签与你的分支保持一致，但让它成为可选项（在这种情况下，使用 \u003ccode\u003espring.cloud.config.label=myfeature,develop\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e如果你在配置服务器上使用 HTTP 基本安全，目前只有在你将凭证嵌入您在 \u003ccode\u003espring.cloud.config.uri \u003c/code\u003e属性下指定的每个 URL 中时，才可能支持每个配置服务器的认证凭证。如果你使用任何其他类型的安全机制，你（目前）无法支持每台配置服务器的认证和授权。\u003c/p\u003e\n\u003ch3 id=\"77-配置超时\"\u003e7.7. 配置超时\u003c/h3\u003e\n\u003cp\u003e如果要配置超时阈值：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e读取超时可以通过使用属性\u003ccode\u003eSpring.cloud.config.Request-read-timeout\u003c/code\u003e来配置。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e可以通过使用属性\u003ccode\u003eSpring.cloud.config.Request-Connect-Timeout\u003c/code\u003e来配置连接超时。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"78-安全\"\u003e7.8. 安全\u003c/h3\u003e\n\u003cp\u003e如果你在服务器上使用\u003ccode\u003eHTTP Basic\u003c/code\u003e安全，客户需要知道密码（如果不是默认的，还需要知道用户名）。你可以通过配置服务器URI或通过单独的用户名和密码属性来指定用户名和密码，如下面的例子中所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://user:secret@myconfig.mycompany.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下示例显示了传递相同信息的备用方式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://myconfig.mycompany.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003espring.cloud.config.password\u003c/code\u003e 和 \u003ccode\u003espring.cloud.config.username\u003c/code\u003e 的值会覆盖 URI 中提供的任何内容。\u003c/p\u003e\n\u003cp\u003e如果您在 \u003ccode\u003eCloud Foundry\u003c/code\u003e 上部署应用程序，提供密码的最佳方式是通过服务凭证（如 URI 中，因为它不需要在配置文件中）。以下示例适用于本地和 \u003ccode\u003eCloud Foundry\u003c/code\u003e 上用户提供的名为 \u003ccode\u003econfigserver\u003c/code\u003e 的服务。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${vcap.services.configserver.credentials.uri:http://user:password@localhost:8888}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果\u003ccode\u003eConfig Server\u003c/code\u003e需要客户端TLS证书，则可以通过属性配置客户端TLS证书和信任库，如下示例所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://myconfig.myconfig.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etls\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;path-of-key-store\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;key-store-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;key-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;path-of-trust-store\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;trust-store-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003espring.cloud.config.tls.enabled\u003c/code\u003e需要为true，以启用配置客户端TLS。当\u003ccode\u003espring.cloud.config.tls.trust-store\u003c/code\u003e被省略时，会使用JVM默认的信任存储。\u003ccode\u003espring.cloud.config.tls.key-store-type \u003c/code\u003e和 \u003ccode\u003espring.cloud.config.tls.trust-store-type\u003c/code\u003e 的默认值是 PKCS12。当密码属性被省略时，假定为空密码。\u003c/p\u003e\n\u003cp\u003e如果你使用另一种形式的安全，你可能需要向\u003ccode\u003eConfigServicePropertySourceLocator\u003c/code\u003e提供一个\u003ccode\u003eRestTemplate\u003c/code\u003e（例如，通过在\u003ccode\u003ebootstrap\u003c/code\u003e上下文中抓取并注入它）。\u003c/p\u003e\n\u003ch4 id=\"781-健康指示器\"\u003e7.8.1. 健康指示器\u003c/h4\u003e\n\u003cp\u003e配置客户端提供了一个Spring Boot健康指示器，试图从配置服务器加载配置。可以通过设置\u003ccode\u003ehealth.config.enabled=false\u003c/code\u003e来禁用该健康指标。出于性能考虑，响应也会被缓存起来。默认的缓存生存时间是5分钟。要改变该值，请设置\u003ccode\u003ehealth.config.time-to-live\u003c/code\u003e属性（单位：毫秒）。\u003c/p\u003e\n\u003ch4 id=\"782-提供自定义resttemplate\"\u003e7.8.2. 提供自定义RestTemplate\u003c/h4\u003e\n\u003cp\u003e在某些情况下，你可能需要定制从客户端向配置服务器发出的请求。通常情况下，这样做涉及到传递特殊的授权头信息来验证对服务器的请求。要提供一个自定义的\u003ccode\u003eRestTemplate\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e创建一个具有PropertySourceLocator实现的新配置，如下例所示。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCustomConfigServiceBootstrapConfiguration.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomConfigServiceBootstrapConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eConfigServicePropertySourceLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003econfigServicePropertySourceLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eConfigClientProperties\u003c/span\u003e \u003cspan class=\"n\"\u003eclientProperties\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003econfigClientProperties\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n       \u003cspan class=\"n\"\u003eConfigServicePropertySourceLocator\u003c/span\u003e \u003cspan class=\"n\"\u003econfigServicePropertySourceLocator\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eConfigServicePropertySourceLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclientProperties\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003econfigServicePropertySourceLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclientProperties\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econfigServicePropertySourceLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e对于添加授权头的简化方法，可以使用 \u003ccode\u003espring.cloud.config.headers.*\u003c/code\u003e属性来代替。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e在\u003ccode\u003eResources / META-INf\u003c/code\u003e中，创建一个名为\u003ccode\u003eSpring.factories\u003c/code\u003e的文件并指定您的自定义配置，如下示例所示：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003espring.factories\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eorg.springframework.cloud.bootstrap.BootstrapConfiguration = com.my.config.client.CustomConfigServiceBootstrapConfiguration\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"783-vault\"\u003e7.8.3. Vault\u003c/h4\u003e\n\u003cp\u003e当使用Vault作为配置服务器的后端时，客户端需要为服务器提供一个令牌，以便从Vault检索值。这个令牌可以通过在\u003ccode\u003ebootstrap.yml\u003c/code\u003e中设置\u003ccode\u003espring.cloud.config.token\u003c/code\u003e在客户端中提供，如以下例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYourVaultToken\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"784-嵌套keys中的vault\"\u003e7.8.4. 嵌套Keys中的Vault\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eVault\u003c/code\u003e支持在存储在\u003ccode\u003eVault\u003c/code\u003e中的值中嵌套键的能力，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eecho -n \u0026#39;{\u0026#34;appA\u0026#34;: {\u0026#34;secret\u0026#34;: \u0026#34;appAsecret\u0026#34;}, \u0026#34;bar\u0026#34;: \u0026#34;baz\u0026#34;}\u0026#39; | vault write secret/myapp -\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个命令会将一个JSON对象写入你的Vault中。要在Spring中访问这些值，你可以使用传统的dot(.)注解，如以下例子所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Value\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${appA.secret}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;World\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的代码将设置\u003ccode\u003ename\u003c/code\u003e变量的值为\u003ccode\u003eappAsecret\u003c/code\u003e。\u003c/p\u003e\n"
      },
    {
        id: 4,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-consul/",
        title: "Spring Cloud Consul",
        description: "Spring Cloud Consul通过自动配置和与Spring环境及其他Spring编程模型成语的绑定，为Spring Boot应用程序提供Consul集成。通过一些简单的注解，你可以快速启用和配置你的应用程序内的常见模式，并使用Hashicorp的Consul构建大型分布式系统。提供的模式包括服务发现、分布式配置和控制总线。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月23日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-consul/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-consul\"\u003ehttps://github.com/spring-cloud/spring-cloud-consul\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e该项目通过自动配置和与Spring环境及其他Spring编程模型习语的绑定，为Spring Boot应用程序提供\u003ca href=\"https://consul.io/\"\u003eConsul\u003c/a\u003e集成。通过一些简单的注解，你可以在你的应用程序中快速启用和配置常见的模式，并使用基于Consul的组件构建大型分布式系统。提供的模式包括服务发现、控制总线和配置。通过与其他Spring Cloud项目的集成，提供了智能路由和客户端负载平衡、断路器。\u003c/p\u003e\n\u003ch2 id=\"1-快速开始\"\u003e1. 快速开始\u003c/h2\u003e\n\u003cp\u003e这篇快速入门指南介绍了如何使用Spring Cloud Consul进行服务发现和分布式配置。\u003c/p\u003e\n\u003cp\u003e首先，在你的机器上运行Consul Agent。然后你就可以访问它，并将其作为Spring Cloud Consul的服务注册和配置源。\u003c/p\u003e\n\u003ch3 id=\"11-服务发现\"\u003e1.1. 服务发现\u003c/h3\u003e\n\u003cp\u003e要在应用程序中使用这些功能，你可以将其构建为一个依赖\u003ccode\u003espring-cloud-consul-core\u003c/code\u003e的Spring Boot应用程序。添加依赖的最方便方式是使用Spring Boot启动器：\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-consul-discovery\u003c/code\u003e。我们建议使用依赖性管理和\u003ccode\u003espring-boot-starter-parent\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e下面的例子显示了一个典型的Maven配置。\u003c/p\u003e\n\u003cp\u003epom.xml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;project\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;parent\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-parent\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e{spring-boot-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;relativePath/\u0026gt;\u003c/span\u003e \u003cspan class=\"c\"\u003e\u0026lt;!-- lookup parent from repository --\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/parent\u0026gt;\u003c/span\u003e\n\n  \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-consul-discovery\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-test\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003etest\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${spring-cloud.version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;build\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;plugins\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;plugin\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-maven-plugin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/plugin\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/plugins\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/build\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/project\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子显示了一个典型的Gradle设置。\u003c/p\u003e\n\u003cp\u003ebuild.gradle\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"n\"\u003eplugins\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.boot\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"n\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eboot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;io.spring.dependency-management\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"n\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edependency\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emanagement\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;java\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003erepositories\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emavenCentral\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edependencies\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.cloud:spring-cloud-starter-consul-discovery\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003etestImplementation\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.boot:spring-boot-starter-test\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003edependencyManagement\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimports\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emavenBom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在你可以创建一个标准的Spring Boot应用程序，比如下面的HTTP服务器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当这个HTTP服务器运行时，它会连接到运行在本地默认8500端口的Consul Agent。要修改启动行为，你可以通过\u003ccode\u003eapplication.properties\u003c/code\u003e来改变Consul Agent的位置，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocalhost\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8500\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在你可以使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e、\u003ccode\u003e@LoadBalanced\u003c/code\u003e \u003ccode\u003eRestTemplate\u003c/code\u003e或\u003ccode\u003e@LoadBalanced\u003c/code\u003e \u003ccode\u003eWebClient.Builder\u003c/code\u003e来从\u003ccode\u003eConsul\u003c/code\u003e检索服务和实例数据，如以下例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eDiscoveryClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstances\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;STORES\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003egetUri\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"12-分布式配置\"\u003e1.2. 分布式配置\u003c/h3\u003e\n\u003cp\u003e要在应用程序中使用这些功能，您可以将其构建为依赖\u003ccode\u003espring-cloud-consul-core\u003c/code\u003e和\u003ccode\u003espring-cloud-consul-config\u003c/code\u003e的Spring Boot应用程序。添加依赖的最便捷方式是使用Spring Boot启动器：\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-consul-config\u003c/code\u003e。我们建议使用依赖性管理和\u003ccode\u003espring-boot-starter-parent\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e下面的例子展示了一个典型的Maven配置。\u003c/p\u003e\n\u003cp\u003epom.xml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;project\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;parent\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-parent\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e{spring-boot-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;relativePath/\u0026gt;\u003c/span\u003e \u003cspan class=\"c\"\u003e\u0026lt;!-- lookup parent from repository --\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/parent\u0026gt;\u003c/span\u003e\n\n  \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-consul-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-test\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003etest\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${spring-cloud.version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;build\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;plugins\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;plugin\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-maven-plugin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/plugin\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/plugins\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/build\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/project\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子显示了一个典型的Gradle设置。\u003c/p\u003e\n\u003cp\u003ebuild.gradle\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"n\"\u003eplugins\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.boot\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"n\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eboot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;io.spring.dependency-management\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"n\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edependency\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emanagement\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;java\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003erepositories\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emavenCentral\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edependencies\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.cloud:spring-cloud-starter-consul-config\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003etestImplementation\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.boot:spring-boot-starter-test\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003edependencyManagement\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimports\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emavenBom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在你可以创建一个标准的Spring Boot应用程序，比如下面的HTTP服务器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该应用程序从Consul检索配置数据。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用Spring Cloud Consul配置，你需要设置\u003ccode\u003espring.config.import\u003c/code\u003e属性，以便与Consul绑定。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/#config-data-import\"\u003eSpring Boot配置数据导入部分\u003c/a\u003e阅读更多信息。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-安装consul\"\u003e2. 安装Consul\u003c/h2\u003e\n\u003cp\u003e请参阅\u003ca href=\"https://www.consul.io/intro/getting-started/install.html\"\u003e安装文档\u003c/a\u003e，了解如何安装Consul。\u003c/p\u003e\n\u003ch2 id=\"3-consul-agent\"\u003e3. Consul Agent\u003c/h2\u003e\n\u003cp\u003e所有Spring Cloud Consul应用程序必须有一个Consul Agent客户端。默认情况下，代理客户端应该在\u003ccode\u003elocalhost:8500\u003c/code\u003e。关于如何启动代理客户端以及如何连接到Consul代理服务器集群的具体细节，请参阅\u003ca href=\"https://consul.io/docs/agent/basics.html\"\u003e代理文档\u003c/a\u003e。对于开发来说，在你安装了consul之后，你可以使用以下命令启动一个Consul Agent。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e./src/main/bash/local_run_consul.sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在8500端口启动一个服务器模式的代理，用户界面在\u003ccode\u003elocalhost:8500\u003c/code\u003e可用。\u003c/p\u003e\n\u003ch2 id=\"4-使用consul进行服务发现\"\u003e4. 使用Consul进行服务发现\u003c/h2\u003e\n\u003cp\u003e服务发现是基于微服务的架构的关键原则之一。试图手工配置每个客户端或某种形式的约定是非常困难的，而且可能非常脆弱。Consul通过\u003ca href=\"https://www.consul.io/docs/agent/http.html\"\u003eHTTP API\u003c/a\u003e和\u003ca href=\"https://www.consul.io/docs/agent/dns.html\"\u003eDNS\u003c/a\u003e提供服务发现服务。Spring Cloud Consul利用HTTP API进行服务注册和发现。这并不妨碍非Spring Cloud应用程序利用DNS接口。Consul代理服务器在一个\u003ca href=\"https://www.consul.io/docs/internals/architecture.html\"\u003e集群\u003c/a\u003e中运行，该集群通过\u003ca href=\"https://www.consul.io/docs/internals/gossip.html\"\u003e流言协议\u003c/a\u003e进行通信并使用\u003ca href=\"https://www.consul.io/docs/internals/consensus.html\"\u003eRaft共识协议\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"41-如何激活\"\u003e4.1. 如何激活\u003c/h3\u003e\n\u003cp\u003e要激活Consul服务发现，请使用group为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和artifact id为\u003ccode\u003espring-cloud-starter-consul-discovery\u003c/code\u003e的\u003ccode\u003estarter\u003c/code\u003e。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解关于用当前Spring Cloud发布列车设置构建系统的细节。\u003c/p\u003e\n\u003ch3 id=\"42-注册到consul\"\u003e4.2. 注册到Consul\u003c/h3\u003e\n\u003cp\u003e当客户端在Consul注册时，它提供了关于自己的元数据，如主机和端口、ID、名称和标签。默认情况下，会创建一个HTTP检查，Consul每隔10秒会点击\u003ccode\u003e/actuator/health\u003c/code\u003e端点。如果健康检查失败，服务实例将被标记为关键。\u003c/p\u003e\n\u003cp\u003e示例Consul客户端。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello world\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpringApplicationBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eweb\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(即完全是正常的Spring Boot应用)。如果Consul客户端位于\u003ccode\u003elocalhost:8500\u003c/code\u003e以外的地方，则需要配置来定位该客户端。例子。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocalhost\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8500\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/#spring-cloud-consul-config\"\u003eSpring Cloud Consul Config\u003c/a\u003e，并且设置了\u003ccode\u003espring.cloud.bootstrap.enabled=true\u003c/code\u003e或\u003ccode\u003espring.config.use-legacy-processing=true\u003c/code\u003e或使用\u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e，那么上述值将需要放在\u003ccode\u003ebootstrap.yml\u003c/code\u003e而不是\u003ccode\u003eapplication.yml\u003c/code\u003e中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e默认的服务名称、实例ID和端口取自\u003ccode\u003eEnvironment\u003c/code\u003e，分别为\u003ccode\u003e${spring.application.name}\u003c/code\u003e、Spring Context ID和\u003ccode\u003e${server.port}\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要禁用Consul发现客户端，可以将\u003ccode\u003espring.cloud.consul.discovery.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。当\u003ccode\u003espring.cloud.discovery.enabled\u003c/code\u003e被设置为\u003ccode\u003efalse\u003c/code\u003e时，Consul发现客户端也将被禁用。\u003c/p\u003e\n\u003cp\u003e要禁用服务注册，你可以将\u003ccode\u003espring.cloud.consul.discovery.register\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"421-将管management为一项单独的服务进行注册\"\u003e4.2.1. 将管Management为一项单独的服务进行注册\u003c/h4\u003e\n\u003cp\u003e当管理服务器的端口被设置为与应用程序的端口不同时，通过设置\u003ccode\u003emanagement.server.port\u003c/code\u003e属性，管理服务将被注册为比应用程序服务单独的服务。比如说。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyApp\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emanagement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e4452\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上述配置将注册以下两个服务。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eApplication Service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eID: myApp\nName: myApp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eManagement Service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eID: myApp-management\nName: myApp-management\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eManagement Service将从Application Service继承其\u003ccode\u003einstanceId\u003c/code\u003e和\u003ccode\u003eserviceName\u003c/code\u003e。比如说。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyApp\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emanagement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e4452\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance-id\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecustom-service-id\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyprefix-${spring.application.name}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上述配置将注册以下两个服务。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eApplication Service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eID: custom-service-id\nName: myprefix-myApp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eManagement Service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eID: custom-service-id-management\nName: myprefix-myApp-management\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e通过以下属性可以进行进一步的定制。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e/** Port to register the management service under (defaults to management port) */\nspring.cloud.consul.discovery.management-port\n\n/** Suffix to use when registering management service (defaults to \u0026#34;management\u0026#34; */\nspring.cloud.consul.discovery.management-suffix\n\n/** Tags to use when registering management service (defaults to \u0026#34;management\u0026#34; */\nspring.cloud.consul.discovery.management-tags\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"422-http健康检查\"\u003e4.2.2. HTTP健康检查\u003c/h4\u003e\n\u003cp\u003eConsul实例的健康检查默认为\u0026quot;/actuator/health\u0026quot;，这是Spring Boot Actuator应用程序中健康端点的默认位置。如果你使用非默认的上下文路径或servlet路径（如\u003ccode\u003eserver.servletPath=/foo\u003c/code\u003e）或管理端点路径（如\u003ccode\u003emanagement.server.servlet.context-path=/admin\u003c/code\u003e），你需要改变这一点，即使对于Actuator应用程序来说。\u003c/p\u003e\n\u003cp\u003e也可以配置Consul用于检查健康端点的时间间隔。\u0026ldquo;10s\u0026quot;和 \u0026ldquo;1m\u0026quot;分别代表10秒和1分钟。\u003c/p\u003e\n\u003cp\u003e这个例子说明了上述情况（更多选项请参见附录页中的 \u003ccode\u003espring.cloud.consul.discovery.health-check-*\u003c/code\u003e 属性）。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthCheckPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${management.server.servlet.context-path}/actuator/health\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthCheckInterval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e15s\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过设置 \u003ccode\u003espring.cloud.consul.discovery.register-health-check=false\u003c/code\u003e 完全禁用 HTTP 健康检查。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eApplying Headers\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e头信息可以应用于健康检查请求。例如，如果你试图注册一个使用\u003ca href=\"https://github.com/spring-cloud/spring-cloud-config/blob/master/docs/src/main/asciidoc/spring-cloud-config.adoc#vault-backend\"\u003eVault Backend\u003c/a\u003e的\u003ca href=\"https://cloud.spring.io/spring-cloud-config/\"\u003eSpring Cloud Config\u003c/a\u003e服务器。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealth-check-headers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eX-Config-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e6442e58b-d1ea-182e-cfa5-cf9cddef0722\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据HTTP标准，每个header可以有多个值，在这种情况下，可以提供一个数组。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealth-check-headers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eX-Config-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;6442e58b-d1ea-182e-cfa5-cf9cddef0722\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;Some other value\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"423-actuator-health-indicators\"\u003e4.2.3. Actuator Health Indicator(s)\u003c/h4\u003e\n\u003cp\u003e如果服务实例是一个Spring Boot执行器应用程序，可以向它提供以下的Actuator health indicator.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDiscoveryClientHealthIndicator\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e当Consul服务发现被激活时，一个\u003ca href=\"https://cloud.spring.io/spring-cloud-commons/2.2.x/reference/html/#health-indicator\"\u003eDiscoverClientHealthIndicator\u003c/a\u003e被配置并提供给执行器健康端点使用。关于配置选项，请看\u003ca href=\"https://cloud.spring.io/spring-cloud-commons/2.2.x/reference/html/#health-indicator\"\u003e这里\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConsulHealthIndicator\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e配置了一个指标来验证\u003ccode\u003eConsulClient\u003c/code\u003e的健康状况。\u003c/p\u003e\n\u003cp\u003e默认情况下，它检索Consul领导节点状态和所有注册服务。在有许多注册服务的部署中，每次健康检查都要检索所有的服务，成本很高。要跳过服务检索，只检查领导节点状态，请设置 \u003ccode\u003espring.cloud.consul.health-indicator.include-services-query=false\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要禁用该指标，请设置 \u003ccode\u003emanagement.health.consul.enabled=false\u003c/code\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当应用程序运行在\u003ca href=\"https://cloud.spring.io/spring-cloud-commons/2.2.x/reference/html/#the-bootstrap-application-context\"\u003ebootstrap context mode\u003c/a\u003e (默认情况下)，该指标被加载到bootstrap上下文中，不提供给执行器健康端点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"424-metadata\"\u003e4.2.4. Metadata\u003c/h4\u003e\n\u003cp\u003eConsul支持服务的元数据。Spring Cloud的\u003ccode\u003eServiceInstance\u003c/code\u003e有一个\u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e元数据字段，它是由服务元字段填充的。为了填充元字段，在\u003ccode\u003espring.cloud.consul.discovery.metadata\u003c/code\u003e或\u003ccode\u003espring.cloud.consul.discovery.management-metadata\u003c/code\u003e属性上设置值。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003emyfield\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyvalue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eanotherfield\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eanothervalue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上述配置将产生一个服务，其元字段包含\u003ccode\u003emyfield→myvalue\u003c/code\u003e和\u003ccode\u003eanotherfield→anothervalue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eGenerated Metadata\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eConsul\u003c/code\u003e 自动注册将自动生成一些条目。\u003c/p\u003e\n\u003cp\u003eTable 1. 自动生成的元数据\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eKey\u003c/th\u003e\n\u003cth\u003eValue\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003egroup\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e属性 \u003ccode\u003espring.cloud.consul.discovery.instance-group\u003c/code\u003e 。这个值只有在\u003ccode\u003einstance-group\u003c/code\u003e不是空的情况下才会生成。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esecure\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e如果属性\u003ccode\u003espring.cloud.consul.discovery.scheme\u003c/code\u003e等于\u003ccode\u003ehttps\u003c/code\u003e则为真，否则为: \u003ccode\u003efalse\u003c/code\u003e。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e属性 \u003ccode\u003espring.cloud.consul.discovery.default-zone-metadata-name\u003c/code\u003e ，默认为 \u003ccode\u003ezone\u003c/code\u003e。\u003c/td\u003e\n\u003ctd\u003e属性 \u003ccode\u003espring.cloud.consul.discovery.instance-zone\u003c/code\u003e 。这个值只有在\u003ccode\u003einstance-zone\u003c/code\u003e不是空的情况下才会生成。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e旧版本的Spring Cloud Consul通过解析\u003ccode\u003espring.cloud.consul.discovery.tags\u003c/code\u003e属性，从Spring Cloud Commons填充\u003ccode\u003eServiceInstance.getMetadata（）\u003c/code\u003e方法。这已不再被支持，请迁移到使用\u003ccode\u003espring.cloud.consul.discovery.metadata\u003c/code\u003e Map。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"425-使consul实例的id唯一\"\u003e4.2.5. 使Consul实例的ID唯一\u003c/h4\u003e\n\u003cp\u003e默认情况下，consul实例的注册ID等于其Spring应用上下文ID。默认情况下，Spring应用上下文ID是\u003ccode\u003e${spring.application.name}:comma,separated,profiles:${server.port}\u003c/code\u003e。对于大多数情况，这将允许一个服务的多个实例在一台机器上运行。如果需要进一步的唯一性，使用Spring Cloud你可以通过在\u003ccode\u003espring.cloud.consul.discovery.instanceId\u003c/code\u003e中提供一个唯一的标识符来覆盖这一点。比如说。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003einstanceId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有了这个元数据，并且在 localhost 上部署了多个服务实例，随机值就会在那里启动，使实例独一无二。在 Cloudfoundry 中，\u003ccode\u003evcap.application.instance_id\u003c/code\u003e 将会在 Spring Boot 应用程序中自动填充，因此不需要随机值。\u003c/p\u003e\n\u003ch3 id=\"43-查阅服务\"\u003e4.3. 查阅服务\u003c/h3\u003e\n\u003ch4 id=\"431-使用负载均衡\"\u003e4.3.1. 使用负载均衡\u003c/h4\u003e\n\u003cp\u003eSpring Cloud支持\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix/blob/master/docs/src/main/asciidoc/spring-cloud-netflix.adoc#spring-cloud-feign\"\u003eFeign\u003c/a\u003e（一个REST客户端构建器）和\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#rest-template-loadbalancer-client\"\u003eSpring \u003ccode\u003eRestTemplate\u003c/code\u003e\u003c/a\u003e，用于使用逻辑服务名称/ID而不是物理URL来查找服务。Feign和具有发现意识的RestTemplate都利用\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer\"\u003eSpring Cloud LoadBalancer\u003c/a\u003e进行客户端的负载均衡。\u003c/p\u003e\n\u003cp\u003e如果你想使用RestTemplate访问\u003ccode\u003eSTORES\u003c/code\u003e服务，只需声明。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@LoadBalanced\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"nf\"\u003eloadbalancedRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e并像这样使用它（注意我们如何使用来自Consul的\u003ccode\u003eSTORES\u003c/code\u003e服务名称/ID，而不是一个完全合格的域名）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetFirstProduct\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetForObject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://STORES/products/1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你在多个数据中心有Consul集群，并且你想访问另一个数据中心的服务，仅有服务名称/ID是不够的。在这种情况下，你可以使用属性\u003ccode\u003espring.cloud.consul.discovery.datacenters.STORES=dc-west\u003c/code\u003e，其中STORES是服务名称/id，dc-west是STORES服务所在的数据中心，而不是一个完全合格的域名）。)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud现在还提供对\u003ca href=\"https://cloud.spring.io/spring-cloud-commons/reference/html/#_spring_resttemplate_as_a_load_balancer_client\"\u003eSpring Cloud LoadBalancer\u003c/a\u003e 的支持。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"432-使用discoveryclient\"\u003e4.3.2. 使用DiscoveryClient\u003c/h4\u003e\n\u003cp\u003e你也可以使用\u003ccode\u003eorg.springframework.cloud.client.discovery.DiscoveryClient\u003c/code\u003e，它为发现客户端提供了一个简单的API，而不是专门针对Netflix的，比如说\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eDiscoveryClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstances\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;STORES\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003egetUri\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"44-consul-catalog-watch\"\u003e4.4. Consul Catalog Watch\u003c/h3\u003e\n\u003cp\u003eConsul Catalog Watch利用了consul\u003ca href=\"https://www.consul.io/docs/agent/watches.html#services\"\u003e观察服务\u003c/a\u003e的能力。目录监视进行阻塞的Consul HTTP API调用，以确定是否有任何服务改变。如果有新的服务数据，就会发布心跳事件。\u003c/p\u003e\n\u003cp\u003e要改变配置观察被调用的频率，请改变\u003ccode\u003espring.cloud.consul.config.discovery.catalog-services-watch-delay\u003c/code\u003e。默认值是1000，单位是毫秒。延迟是指前一次调用结束后到下一次调用开始的时间量。\u003c/p\u003e\n\u003cp\u003e要禁用目录观察，请设置\u003ccode\u003espring.cloud.consul.discovery.catalogServicesWatch.enabled=false\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e该观察使用Spring的\u003ccode\u003eTaskScheduler\u003c/code\u003e来安排对consul的调用。默认情况下，它是一个\u003ccode\u003eThreadPoolTaskScheduler\u003c/code\u003e，\u003ccode\u003epoolSize\u003c/code\u003e为1。 要改变\u003ccode\u003eTaskScheduler\u003c/code\u003e，创建一个\u003ccode\u003eTaskScheduler\u003c/code\u003e类型的bean，用\u003ccode\u003eConsulDiscoveryClientConfiguration.CATALOG_WATCH_TASK_SCHEDULER_NAME\u003c/code\u003e常量命名。\u003c/p\u003e\n\u003ch2 id=\"5-使用consul的分布式配置\"\u003e5. 使用Consul的分布式配置\u003c/h2\u003e\n\u003cp\u003eConsul提供了一个\u003ca href=\"https://consul.io/docs/agent/http/kv.html\"\u003eKey/Value Store\u003c/a\u003e来存储配置和其他元数据。Spring Cloud Consul配置是\u003ca href=\"https://github.com/spring-cloud/spring-cloud-config\"\u003e配置服务器和客户端\u003c/a\u003e的替代品。在特殊的 \u0026ldquo;bootstrap\u0026rdquo; 阶段，配置被加载到Spring环境中。配置默认存储在\u003ccode\u003e/config\u003c/code\u003e文件夹中。多个 \u003ccode\u003ePropertySource\u003c/code\u003e 实例根据应用程序的名称和活动配置文件创建，模仿Spring Cloud Config的属性解析顺序。例如，一个名称为 \u0026ldquo;testApp \u0026ldquo;并使用 \u0026ldquo;dev \u0026ldquo;配置文件的应用程序将创建以下属性源。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003econfig/testApp,dev/\nconfig/testApp/\nconfig/application,dev/\nconfig/application/\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e最具体的属性来源在顶部，最不具体的在底部。\u003ccode\u003econfig/application\u003c/code\u003e文件夹中的属性适用于所有使用consul进行配置的应用程序。\u003ccode\u003econfig/testApp\u003c/code\u003e文件夹中的属性只适用于名为 \u0026ldquo;testApp \u0026ldquo;的服务实例。\u003c/p\u003e\n\u003cp\u003e目前，配置是在应用程序的启动时读取的。向\u003ccode\u003e/refresh\u003c/code\u003e发送HTTP POST将导致配置被重新加载。\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/#spring-cloud-consul-config-watch\"\u003eConfig Watch\u003c/a\u003e也将自动检测变化并重新加载应用程序上下文。\u003c/p\u003e\n\u003ch3 id=\"51-如何激活\"\u003e5.1. 如何激活\u003c/h3\u003e\n\u003cp\u003e要开始使用Consul配置，请使用 \u003ccode\u003eorg.springframework.cloud\u003c/code\u003e group和 \u003ccode\u003espring-cloud-starter-consul-config\u003c/code\u003e artifact id的starter。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解用当前的Spring Cloud Release Train设置构建系统的细节。\u003c/p\u003e\n\u003ch3 id=\"52-spring-boot配置数据导入\"\u003e5.2. Spring Boot配置数据导入\u003c/h3\u003e\n\u003cp\u003eSpring Boot 2.4引入了一种通过\u003ccode\u003espring.config.import\u003c/code\u003e属性导入配置数据的新方法。现在这是从Consul获取配置的默认方式。\u003c/p\u003e\n\u003cp\u003e要选择性地连接到Consul，请在\u003ccode\u003eapplication.properties\u003c/code\u003e中设置以下内容。\u003c/p\u003e\n\u003cp\u003eapplication.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=optional:consul:\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在 \u003ccode\u003ehttp://localhost:8500\u003c/code\u003e 的默认位置连接到Consul代理。移除\u003ccode\u003eoptional:\u003c/code\u003e前缀将导致Consul配置在无法连接到Consul时失败。要改变Consul配置的连接属性，可以设置\u003ccode\u003espring.cloud.consul.host\u003c/code\u003e和\u003ccode\u003espring.cloud.consul.port\u003c/code\u003e或者将主机/端口对添加到\u003ccode\u003espring.config.import\u003c/code\u003e语句中，例如，\u003ccode\u003espring.config.import=optional:consul:myhost:8500\u003c/code\u003e。import属性中的位置优先于host和port属性。\u003c/p\u003e\n\u003cp\u003eConsul配置将根据\u003ccode\u003espring.cloud.consul.config.name\u003c/code\u003e（默认为\u003ccode\u003espring.application.name\u003c/code\u003e属性的值）和\u003ccode\u003espring.cloud.consul.config.default-context\u003c/code\u003e（默认为\u003ccode\u003eapplication\u003c/code\u003e），尝试从四个自动上下文加载值。如果你想指定上下文而不是使用计算出来的上下文，你可以在\u003ccode\u003espring.config.import\u003c/code\u003e语句中添加这些信息。\u003c/p\u003e\n\u003cp\u003eapplication.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=optional:consul:myhost:8500/contextone;/context/two\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将有选择地只从\u003ccode\u003e/contextone\u003c/code\u003e和\u003ccode\u003e/context/two\u003c/code\u003e加载配置。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e通过\u003ccode\u003espring.config.import\u003c/code\u003e导入的Spring Boot配置数据方法不需要一个\u003ccode\u003ebootstrap\u003c/code\u003e文件（properties或yaml）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"53-定制化\"\u003e5.3. 定制化\u003c/h3\u003e\n\u003cp\u003eConsul配置可以使用以下属性进行定制。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eprefix\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfiguration\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultContext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eapps\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofileSeparator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;::\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果你设置了\u003ccode\u003espring.cloud.bootstrap.enabled=true\u003c/code\u003e或\u003ccode\u003espring.config.use-legacy-processing=true\u003c/code\u003e，或者包含了\u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e，那么上述数值需要放在\u003ccode\u003ebootstrap.yml\u003c/code\u003e而不是\u003ccode\u003eapplication.yml\u003c/code\u003e中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eenabled\u003c/code\u003e将此值设置为 \u0026ldquo;false\u0026rdquo;，可禁用Consul配置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eprefix\u003c/code\u003e设置配置值的基础文件夹\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edefaultContext\u003c/code\u003e设置所有应用程序使用的文件夹名称。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eprofileSeparator\u003c/code\u003e设置分隔符的值，用于在有配置文件的属性源中分隔配置文件的名称。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"54-config-watch\"\u003e5.4. Config Watch\u003c/h3\u003e\n\u003cp\u003eConsul Config Watch利用了consul \u003ca href=\"https://www.consul.io/docs/agent/watches.html#keyprefix\"\u003ewatch a key prefix\u003c/a\u003e 的能力。Config Watch进行阻塞式Consul HTTP API调用，以确定当前应用程序的任何相关配置数据是否发生了变化。如果有新的配置数据，就会发布一个刷新事件。这等同于调用\u003ccode\u003e/refresh\u003c/code\u003e执行器端点。\u003c/p\u003e\n\u003cp\u003e要改变配置观察被调用的频率，请改变\u003ccode\u003espring.cloud.consul.config.watch.delay\u003c/code\u003e。默认值是1000，单位是毫秒。延迟是指上一次调用结束后到下一次调用开始的时间量。\u003c/p\u003e\n\u003cp\u003e要禁用配置观察，请设置\u003ccode\u003espring.cloud.consul.config.watch.enabled=false\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e观察使用Spring的\u003ccode\u003eTaskScheduler\u003c/code\u003e来安排对consul的调用。默认情况下，它是一个\u003ccode\u003eThreadPoolTaskScheduler\u003c/code\u003e，\u003ccode\u003epoolSize\u003c/code\u003e为1。 要改变\u003ccode\u003eTaskScheduler\u003c/code\u003e，创建一个\u003ccode\u003eTaskScheduler\u003c/code\u003e类型的bean，用\u003ccode\u003eConsulConfigAutoConfiguration.CONFIG_WATCH_TASK_SCHEDULER_NAME\u003c/code\u003e常量命名。\u003c/p\u003e\n\u003ch3 id=\"55-yaml或properties的配置\"\u003e5.5. YAML或Properties的配置\u003c/h3\u003e\n\u003cp\u003e相对于单独的键/值对，以YAML或Properties格式来存储属性的blob可能更方便。设置\u003ccode\u003espring.cloud.consul.config.format\u003c/code\u003e属性为\u003ccode\u003eYAML\u003c/code\u003e或\u003ccode\u003eproperties\u003c/code\u003e。例如，使用YAML。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYAML\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果你设置了 \u003ccode\u003espring.cloud.bootstrap.enabled=true\u003c/code\u003e 或 \u003ccode\u003espring.config.use-legacy-processing=true\u003c/code\u003e，或者包含了 \u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e，那么上述值就需要放在 \u003ccode\u003ebootstrap.yml\u003c/code\u003e 而不是 \u003ccode\u003eapplication.yml\u003c/code\u003e 中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eYAML 必须设置在\u003ccode\u003econsul\u003c/code\u003e中适当的data \u003ccode\u003ekey\u003c/code\u003e中。使用上面的默认值，键会看起来像。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003econfig/testApp,dev/data\nconfig/testApp/data\nconfig/application,dev/data\nconfig/application/data\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以将YAML文档存储在上面列出的任何一个键中。\u003c/p\u003e\n\u003cp\u003e你可以使用\u003ccode\u003espring.cloud.consul.config.data-key\u003c/code\u003e改变data key。\u003c/p\u003e\n\u003ch3 id=\"56-git2consul的配置\"\u003e5.6. git2consul的配置\u003c/h3\u003e\n\u003cp\u003egit2consul是一个Consul社区项目，它将文件从git仓库加载到Consul的单个键中。默认情况下，键的名字就是文件的名字。支持YAML和属性文件，文件扩展名分别为\u003ccode\u003e.yml\u003c/code\u003e和\u003ccode\u003e.properties\u003c/code\u003e。设置\u003ccode\u003espring.cloud.consul.config.format\u003c/code\u003e属性为\u003ccode\u003eFILES\u003c/code\u003e。比如说。\u003c/p\u003e\n\u003cp\u003ebootstrap.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eFILES\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e给出\u003ccode\u003e/config\u003c/code\u003e中的以下键，\u003ccode\u003edevelopment\u003c/code\u003e 配置文件和应用程序名称为\u003ccode\u003efoo\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e.gitignore\napplication.yml\nbar.properties\nfoo-development.properties\nfoo-production.yml\nfoo.properties\nmaster.ref\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e将创建以下配置资源。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003econfig/foo-development.properties\nconfig/foo.properties\nconfig/application.yml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e每个key的value需要是一个格式正确的YAML或属性文件。\u003c/p\u003e\n\u003ch3 id=\"57-快速失败\"\u003e5.7. 快速失败\u003c/h3\u003e\n\u003cp\u003e在某些情况下（如本地开发或某些测试场景），如果consul不能用于配置，可能会很方便，不会失败。设置\u003ccode\u003espring.cloud.consul.config.fail-fast=false\u003c/code\u003e将导致配置模块记录一个警告而不是抛出一个异常。这将允许应用程序继续正常启动。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你设置了\u003ccode\u003espring.cloud.bootstrap.enabled=true\u003c/code\u003e或\u003ccode\u003espring.config.use-legacy-processing=true\u003c/code\u003e，或者包含了\u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e，那么上述数值需要放在\u003ccode\u003ebootstrap.yml\u003c/code\u003e而不是\u003ccode\u003eapplication.yml\u003c/code\u003e中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"6-consul-重试\"\u003e6. Consul 重试\u003c/h2\u003e\n\u003cp\u003e如果你预计consul代理在你的应用程序启动时可能偶尔不可用，你可以要求它在失败后继续尝试。你需要把\u003ccode\u003espring-retry\u003c/code\u003e和\u003ccode\u003espring-boot-starter-aop\u003c/code\u003e添加到你的classpath中。默认行为是重试6次，初始回退间隔为1000ms，后续回退的指数乘数为1.1。你可以使用\u003ccode\u003espring.cloud.consul.retry.*\u003c/code\u003e配置属性来配置这些属性（以及其他）。这在Spring Cloud Consul配置和发现注册中都适用。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e为了完全控制重试，添加一个\u003ccode\u003e@Bean\u003c/code\u003e类型的\u003ccode\u003eRetryOperationsInterceptor\u003c/code\u003e，ID为 \u0026ldquo;consulRetryInterceptor\u0026rdquo;。Spring Retry有一个\u003ccode\u003eRetryInterceptorBuilder\u003c/code\u003e，可以很容易地创建一个。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"7-spring-cloud-bus-和-consul\"\u003e7. Spring Cloud Bus 和 Consul\u003c/h2\u003e\n\u003ch3 id=\"71-如何激活\"\u003e7.1. 如何激活\u003c/h3\u003e\n\u003cp\u003e要开始使用Consul Bus，请使用 \u0026ldquo;org.springframework.cloud\u0026rdquo; group和 \u003ccode\u003espring-cloud-starter-consul-bus\u003c/code\u003e artifact id的starter 。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解关于使用当前Spring Cloud发布列车设置构建系统的详细信息。\u003c/p\u003e\n\u003cp\u003e参见\u003ca href=\"https://cloud.spring.io/spring-cloud-bus/\"\u003eSpring Cloud Bus\u003c/a\u003e文档，了解可用的执行器端点以及如何发送自定义消息。\u003c/p\u003e\n\u003ch2 id=\"8-circuit-breaker-和-hystrix\"\u003e8. Circuit Breaker 和 Hystrix\u003c/h2\u003e\n\u003cp\u003e应用程序可以使用由Spring Cloud Netflix项目提供的Hystrix熔断器，方法是在项目的pom.xml中包括这个启动器。\u003ccode\u003espring-cloud-starter-hystrix\u003c/code\u003e 。Hystrix并不依赖Netflix发现客户端。\u003ccode\u003e@EnableHystrix\u003c/code\u003e注解应该放在一个配置类上（通常是主类）。然后方法可以用\u003ccode\u003e@HystrixCommand\u003c/code\u003e来注解，以受到熔断器的保护。更多细节见\u003ca href=\"https://projects.spring.io/spring-cloud/spring-cloud.html#_circuit_breaker_hystrix_clients\"\u003e文档\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"9-hystrix-metrics-aggregation-with-turbine-and-consul\"\u003e9. Hystrix metrics aggregation with Turbine and Consul\u003c/h3\u003e\n\u003cp\u003eTurbine（由Spring Cloud Netflix项目提供），聚合了多个实例Hystrix的指标流，因此仪表板可以显示一个聚合视图。Turbine使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e接口来查找相关实例。要在Spring Cloud Consul中使用Turbine，请以类似于以下例子的方式配置Turbine应用程序。\u003c/p\u003e\n\u003cp\u003epom.xml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-netflix-turbine\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-consul-discovery\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，Turbine的依赖关系不是一个启动器。 turbine starter包括对Netflix Eureka的支持。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.application.name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eturbine\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapplications\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econsulhystrixclient\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eturbine\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eaggregator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eclusterConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${applications}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eappConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${applications}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eclusterConfig\u003c/code\u003e和\u003ccode\u003eappConfig\u003c/code\u003e部分必须匹配，所以把逗号分隔的服务ID列表放到一个单独的配置属性中是很有用的。\u003c/p\u003e\n\u003cp\u003eTurbine.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@EnableTurbine\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTurbine\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDemoturbinecommonsApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"10-配置属性\"\u003e10. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有与Consul有关的配置属性列表，请查看\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      },
    {
        id: 5,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-gateway/",
        title: "Spring Cloud Gateway",
        description: "该项目提供了一个库，用于在Spring WebFlux之上构建API网关。Spring Cloud Gateway旨在提供一种简单而有效的方式来路由到API，并为其提供交叉关注，如：安全、监控/指标和弹性。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月23日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-gateway\"\u003ehttps://github.com/spring-cloud/spring-cloud-gateway\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这个项目提供了一个建立在Spring生态系统之上的API网关，包括。Spring 5、Spring Boot 2和Project Reactor。Spring Cloud Gateway旨在提供一种简单而有效的方式来路由到API，并提供跨领域的关注，如：安全、监控/指标和弹性。\u003c/p\u003e\n\u003ch2 id=\"1-添加spring-cloud-gateway\"\u003e1. 添加Spring Cloud Gateway\u003c/h2\u003e\n\u003cp\u003e要在你的项目中包含Spring Cloud Gateway，请使用grup ID为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和artifact ID为\u003ccode\u003espring-cloud-starter-gateway\u003c/code\u003e的starter。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解关于使用当前Spring Cloud发布列车设置构建系统的详细信息。\u003c/p\u003e\n\u003cp\u003e如果你包含了starter，但你不希望启用网关，请设置\u003ccode\u003espring.cloud.gateway.enabled=false\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Gateway建立在\u003ca href=\"https://spring.io/projects/spring-boot#learn\"\u003eSpring Boot 2.x\u003c/a\u003e、\u003ca href=\"https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html\"\u003eSpring WebFlux\u003c/a\u003e和\u003ca href=\"https://projectreactor.io/docs\"\u003eProject Reactor\u003c/a\u003e之上。因此，你所熟悉的许多同步库（例如Spring Data和Spring Security）和模式在你使用Spring Cloud Gateway时可能不适用。如果你不熟悉这些项目，我们建议你在使用Spring Cloud Gateway之前先阅读它们的文档，熟悉一些新的概念。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Gateway需要Spring Boot和Spring Webflux提供的Netty运行时间。它不能在传统的Servlet容器中工作，也不能以WAR的形式构建。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-术语表\"\u003e2. 术语表\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eRoute\u003c/strong\u003e。网关的基本构造块。它由一个ID、一个目的地URI、一个谓词集合和一个过滤器集合定义。如果集合谓词为真，则路由被匹配。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePredicate\u003c/strong\u003e。这是一个\u003ca href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html\"\u003eJava 8 Function Predicate\u003c/a\u003e。输入类型是一个\u003ca href=\"https://docs.spring.io/spring/docs/5.0.x/javadoc-api/org/springframework/web/server/ServerWebExchange.html\"\u003eSpring Framework \u003ccode\u003eServerWebExchange\u003c/code\u003e\u003c/a\u003e。这让你可以匹配HTTP请求中的任何内容，如头文件或参数。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFilter\u003c/strong\u003e。这些是\u003ca href=\"https://github.com/spring-cloud/spring-cloud-gateway/tree/main/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/filter/GatewayFilter.java\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e\u003c/a\u003e的实例，已经用特定的工厂构建。在这里，你可以在发送下游请求之前或之后修改请求和响应。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"3-它是如何工作的\"\u003e3. 它是如何工作的\u003c/h2\u003e\n\u003cp\u003e下图提供了一个关于Spring Cloud Gateway如何工作的高层次概述。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/KevinBlandy/springcloud-images/2021/07/23/6026b5a0b1ad41a68dee61d1af1ff5d0.png\" alt=\"springcloud\"\u003e\u003c/p\u003e\n\u003cp\u003e客户端向Spring Cloud Gateway发出请求。如果Gateway处理程序映射确定一个请求与路由相匹配，它将被发送到Gateway Web处理程序。这个处理程序通过一个特定于该请求的过滤器链来运行该请求。过滤器被虚线划分的原因是，过滤器可以在代理请求发送之前和之后运行逻辑。所有的 \u0026ldquo;pre\u0026quot;过滤器逻辑都被执行。然后发出代理请求。在代理请求发出后，\u0026ldquo;post\u0026quot;过滤器逻辑被运行。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在路由中定义的没有端口的URI，其HTTP和HTTPS URI的默认端口值分别为80和443。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"4-配置-route-predicate-和-gateway-filter\"\u003e4. 配置 Route Predicate 和 Gateway Filter\u003c/h2\u003e\n\u003cp\u003e有两种方式可以配置谓词和过滤器：快捷方式和完全展开参数。下面的大多数例子使用的是快捷方式。\u003c/p\u003e\n\u003cp\u003e名称和参数名称将在每个部分的第一或第二句中以\u003ccode\u003ecode\u003c/code\u003e的形式列出。参数通常按照快捷方式配置所需的顺序列出。\u003c/p\u003e\n\u003ch3 id=\"41-快捷配置\"\u003e4.1. 快捷配置\u003c/h3\u003e\n\u003cp\u003e捷径配置是由过滤器名称识别的，后面是等号（\u003ccode\u003e=\u003c/code\u003e），后面是由逗号（\u003ccode\u003e,\u003c/code\u003e）分隔的参数值。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eafter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eCookie=mycookie,mycookievalue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的例子定义了\u003ccode\u003eCookie\u003c/code\u003e路由谓词工厂，有两个参数，cookie名称\u003ccode\u003emycookie\u003c/code\u003e和要匹配的值\u003ccode\u003emycookievalue\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"42-完整展开的参数配置\"\u003e4.2. 完整展开的参数配置\u003c/h3\u003e\n\u003cp\u003e完全展开的参数看起来更像标准的yaml配置，有name/vlue键值对。一般来说，会有一个\u003ccode\u003ename\u003c/code\u003e键和一个\u003ccode\u003eargs\u003c/code\u003e键。\u003ccode\u003eargs\u003c/code\u003e键是一个键值对的映射，用于配置谓词或过滤器。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eafter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCookie\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emycookie\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eregexp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emycookievalue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这是上面显示的\u003ccode\u003eCookie\u003c/code\u003e谓词的快捷配置的完整配置。\u003c/p\u003e\n\u003ch2 id=\"5-路由-predicate-工厂\"\u003e5. 路由 Predicate 工厂\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Gateway将路由作为Spring WebFlux \u003ccode\u003eHandlerMapping\u003c/code\u003e基础设施的一部分进行匹配。Spring Cloud Gateway包括许多内置的路由谓词工厂。所有这些谓词都与HTTP请求的不同属性相匹配。你可以用逻辑上的 \u0026ldquo;and \u0026ldquo;语句组合多个路由谓词工厂。\u003c/p\u003e\n\u003ch3 id=\"51-the-after-route-predicate-factory\"\u003e5.1. The After Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u0026ldquo;After\u0026rdquo; 路由谓词工厂需要一个参数，即 \u0026ldquo;datetime\u0026rdquo;（它是java的 \u0026ldquo;ZonedDateTime\u0026rdquo;）。这个谓词匹配发生在指定日期时间之后的请求。下面的例子配置了一个after路线谓词。\u003c/p\u003e\n\u003cp\u003eExample 1. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eafter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAfter=2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请求的时间只有在 \u003ccode\u003e2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/code\u003e 之后才会路由请求。\u003c/p\u003e\n\u003ch3 id=\"52-the-before-route-predicate-factory\"\u003e5.2. The Before Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u0026ldquo;Before\u0026quot;路由谓词工厂需要一个参数，即 \u0026ldquo;datetime\u0026rdquo;（它是一个java的 \u0026ldquo;ZonedDateTime\u0026rdquo;）。这个谓词匹配发生在指定的\u003ccode\u003edatetime\u003c/code\u003e之前的请求。下面的例子配置了一个before路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 2. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebefore_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eBefore=2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请求的时间只有在 \u003ccode\u003e2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/code\u003e 之前才会路由请求。\u003c/p\u003e\n\u003ch3 id=\"53-the-between-route-predicate-factory\"\u003e5.3. The Between Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eBetween\u003c/code\u003e路由谓词工厂需要两个参数，\u003ccode\u003edatetime1\u003c/code\u003e和\u003ccode\u003edatetime2\u003c/code\u003e，它们是java\u003ccode\u003eZonedDateTime\u003c/code\u003e对象。这个谓词匹配发生在\u003ccode\u003edatetime1\u003c/code\u003e之后和\u003ccode\u003edatetime2\u003c/code\u003e之前的请求。参数\u003ccode\u003edatetime2\u003c/code\u003e必须在\u003ccode\u003edatetime1\u003c/code\u003e之后。下面的例子配置了一个路由谓词之间。\u003c/p\u003e\n\u003cp\u003eExample 3. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebetween_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eBetween=2017-01-20T17:42:47.789-07:00[America/Denver], 2017-01-21T17:42:47.789-07:00[America/Denver]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这条路线匹配任何在\u003ccode\u003e2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/code\u003e之后和\u003ccode\u003e2017-01-21T17:42:47.789-07:00[America/Denver]\u003c/code\u003e之前发起的请求。这对维护窗口可能是有用的。\u003c/p\u003e\n\u003ch3 id=\"54-the-cookie-route-predicate-factory\"\u003e5.4. The Cookie Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eCookie'路由谓词工厂接受两个参数，即cookie\u003c/code\u003e名称\u0026rsquo;和\u003ccode\u003eregexp\u003c/code\u003e（这是一个Java正则表达式）。这个谓词匹配具有给定名称且其值符合正则表达式的cookie。下面的例子配置了一个cookie路由谓词工厂。\u003c/p\u003e\n\u003cp\u003eExample 4. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecookie_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eCookie=chocolate, ch.p\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个路由匹配有一个名为 \u0026ldquo;chocolate\u0026quot;的cookie的请求，其值与 \u0026ldquo;ch.p\u0026quot;正则表达式匹配。\u003c/p\u003e\n\u003ch3 id=\"55-the-header-route-predicate-factory\"\u003e5.5. The Header Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e路由谓词工厂 \u0026ldquo;Header\u0026rdquo; 需要两个参数，header的 \u0026ldquo;name\u0026rdquo; 和 \u0026ldquo;regexp\u0026rdquo;（这是一个Java正则表达式）。这个谓词与具有给定名称且其值符合正则表达式的头匹配。下面的例子配置了一个hear的路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 5. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eHeader=X-Request-Id, \\d+\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求有一个名为\u003ccode\u003eX-Request-Id\u003c/code\u003e的头，其值与\u003ccode\u003ed+\u003c/code\u003e正则表达式相匹配（即，它有一个或多个数字的值），则该路由匹配。\u003c/p\u003e\n\u003ch3 id=\"56-the-host-route-predicate-factory\"\u003e5.6. The Host Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eHost\u003c/code\u003e路由谓词工厂接受一个参数：一个主机名称\u003ccode\u003epatterns\u003c/code\u003e的列表。模式是一个Ant风格的模式，以\u003ccode\u003e.\u003c/code\u003e作为分隔符。这个谓词匹配符合该模式的\u003ccode\u003eHost\u003c/code\u003e头。下面的例子配置了一个主机路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 6. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehost_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eHost=**.somehost.org,**.anotherhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也支持URI模板变量（如\u003ccode\u003e{sub}.myhost.org\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e如果请求有一个\u003ccode\u003eHost\u003c/code\u003e头，其值为\u003ccode\u003ewww.somehost.org\u003c/code\u003e或\u003ccode\u003ebeta.somehost.org\u003c/code\u003e或\u003ccode\u003ewww.anotherhost.org\u003c/code\u003e，则该路由匹配。\u003c/p\u003e\n\u003cp\u003e这个谓词提取URI模板变量（如\u003ccode\u003esub\u003c/code\u003e，在前面的例子中定义）作为名称和值的映射，并将其放在\u003ccode\u003eServerWebExchange.getAttributes()\u003c/code\u003e中，其键定义在\u003ccode\u003eServerWebExchangeUtils.URI_TEMPLATE_VARIABLES_ATTRIBUTE\u003c/code\u003e。然后，这些值可供\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-route-filters\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e factories\u003c/a\u003e 使用。\u003c/p\u003e\n\u003ch3 id=\"57-the-method-route-predicate-factory\"\u003e5.7. The Method Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u0026ldquo;Method\u0026quot;路由谓词工厂接受一个 \u0026ldquo;methods\u0026quot;参数，这是一个或多个参数：要匹配的HTTP方法。下面的例子配置了一个方法路径谓词。\u003c/p\u003e\n\u003cp\u003eExample 7. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emethod_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e- \u003cspan class=\"l\"\u003eMethod=GET,POST\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求方法是 \u0026ldquo;GET \u0026ldquo;或 \u0026ldquo;POST\u0026rdquo;，则该路由匹配。\u003c/p\u003e\n\u003ch3 id=\"58-the-path-route-predicate-factory\"\u003e5.8. The Path Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003ePath Route Predicate Factory需要两个参数：一个Spring \u003ccode\u003ePathMatcher\u003c/code\u003e模式的列表和一个可选的标志\u003ccode\u003ematchTrailingSlash\u003c/code\u003e（默认为\u003ccode\u003etrue\u003c/code\u003e）。下面的例子配置了一个路径路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 8. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/red/{segment},/blue/{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求路径是，例如：\u003ccode\u003e/red/1\u003c/code\u003e或\u003ccode\u003e/red/1/\u003c/code\u003e或\u003ccode\u003e/red/blue\u003c/code\u003e或\u003ccode\u003e/blue/green\u003c/code\u003e，则该路径匹配。\u003c/p\u003e\n\u003cp\u003e如果\u003ccode\u003ematchTrailingSlash\u003c/code\u003e被设置为\u003ccode\u003efalse\u003c/code\u003e，那么请求路径\u003ccode\u003e/red/1/\u003c/code\u003e将不被匹配。\u003c/p\u003e\n\u003cp\u003e这个谓词提取URI模板变量（如\u003ccode\u003esegment\u003c/code\u003e，在前面的例子中定义）作为名称和值的映射，并将其放在\u003ccode\u003eServerWebExchange.getAttributes()\u003c/code\u003e中，其键定义在\u003ccode\u003eServerWebExchangeUtils.URI_TEMPLATE_VARIABLES_ATTRIBUTE\u003c/code\u003e。这些值然后可供\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-route-filters\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e factories\u003c/a\u003e使用。\u003c/p\u003e\n\u003cp\u003e有一个实用的方法（称为 \u0026ldquo;get\u0026rdquo;），以使访问这些变量更加容易。下面的例子显示了如何使用\u003ccode\u003eget\u003c/code\u003e方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003euriVariables\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eServerWebExchangeUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetPathPredicateVariables\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003esegment\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euriVariables\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;segment\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"59-the-query-route-predicate-factory\"\u003e5.9. The Query Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e查询路由谓词工厂需要两个参数：一个必需的param和一个可选的regexp（这是一个Java正则表达式）。下面的例子配置了一个查询路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 9. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003equery_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eQuery=green\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求包含一个\u0026quot;green\u0026quot;的查询参数，前面的路由就会匹配。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003equery_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eQuery=red, gree.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求中包含一个\u003ccode\u003ered\u003c/code\u003e的查询参数，其值与\u003ccode\u003egree.\u003c/code\u003e的重合表达式相匹配，那么前面的路由就会匹配，所以\u003ccode\u003egreen\u003c/code\u003e和\u003ccode\u003egreet\u003c/code\u003e会匹配。\u003c/p\u003e\n\u003ch3 id=\"510-the-remoteaddr-route-predicate-factory\"\u003e5.10. The RemoteAddr Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003eRemoteAddr路由谓词工厂接受一个来源列表（最小尺寸为1），它是CIDR-注解（IPv4或IPv6）字符串，如192.168.0.1/16（其中192.168.0.1是一个IP地址，16是子网掩码）。下面的例子配置了一个RemoteAddr路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 10. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eremoteaddr_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRemoteAddr=192.168.1.1/24\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求的远程地址是，例如，192.168.1.10，则该路由匹配。\u003c/p\u003e\n\u003ch3 id=\"511-the-weight-route-predicate-factory\"\u003e5.11. The Weight Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003eWeight路线谓语工厂需要两个参数：group 和weight （一个int）。weight 是按group计算的。下面的例子配置了一个权重路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 11. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eweight_high\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://weighthigh.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eWeight=group1, 8\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eweight_low\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://weightlow.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eWeight=group1, 2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e此路由将转发~80%的流量到 \u003ccode\u003eweighthigh.org\u003c/code\u003e，~20%的流量到\u003ccode\u003eweightlow.org\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"5111-modifying-the-way-remote-addresses-are-resolved\"\u003e5.11.1. Modifying the Way Remote Addresses Are Resolved\u003c/h4\u003e\n\u003cp\u003e默认情况下，RemoteAddr路由谓语工厂使用传入请求中的远程地址。如果Spring Cloud Gateway位于代理层后面，这可能与实际的客户端IP地址不一致。\u003c/p\u003e\n\u003cp\u003e你可以通过设置自定义的\u003ccode\u003eRemoteAddressResolver\u003c/code\u003e来定制远程地址的解析方式。Spring Cloud Gateway有一个非默认的远程地址解析器，基于\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For\"\u003eX-Forwarded-For header\u003c/a\u003e，\u003ccode\u003eXForwardedRemoteAddressResolver\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eXForwardedRemoteAddressResolver\u003c/code\u003e有两个静态构造方法，它们采取不同的安全方法。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eXForwardedRemoteAddressResolver::trustAll\u003c/code\u003e返回一个\u003ccode\u003eRemoteAddressResolver\u003c/code\u003e，它总是采取在\u003ccode\u003eX-Forwarded-For\u003c/code\u003e头中发现的第一个IP地址。这种方法容易受到欺骗，因为恶意的客户可以为\u003ccode\u003eX-Forwarded-For\u003c/code\u003e设置一个初始值，这将被解析器所接受。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eXForwardedRemoteAddressResolver::maxTrustedIndex\u003c/code\u003e采取一个与Spring Cloud Gateway前面运行的受信任基础设施数量相关的索引。例如，如果Spring Cloud Gateway只能通过HAProxy访问，那么应该使用1的值。如果在Spring Cloud Gateway被访问之前需要两跳受信任的基础设施，那么应该使用2的值。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e考虑一下下面的标头值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eX-Forwarded-For: 0.0.0.1, 0.0.0.2, 0.0.0.3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下\u003ccode\u003emaxTrustedIndex\u003c/code\u003e值产生以下远程地址。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003ccode\u003emaxTrustedIndex\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003eresult\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e[ \u003ccode\u003eInteger.MIN_VALUE\u003c/code\u003e ,0]\u003c/td\u003e\n\u003ctd\u003e(invalid, \u003ccode\u003eIllegalArgumentException\u003c/code\u003e during initialization)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003e0.0.0.3\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e0.0.0.2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003e0.0.0.1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e[4, \u003ccode\u003eInteger.MAX_VALUE\u003c/code\u003e ]\u003c/td\u003e\n\u003ctd\u003e0.0.0.1\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e下面的例子显示了如何用Java实现同样的配置。\u003c/p\u003e\n\u003cp\u003eExample 12. GatewayConfig.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRemoteAddressResolver\u003c/span\u003e \u003cspan class=\"n\"\u003eresolver\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eXForwardedRemoteAddressResolver\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emaxTrustedIndex\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;direct-route\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eremoteAddr\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;10.1.1.1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;10.10.1.1/24\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://downstream1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;proxied-route\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eremoteAddr\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresolver\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;10.10.1.1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;10.10.1.1/24\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://downstream2\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"6-gatewayfilter-工厂\"\u003e6. GatewayFilter 工厂\u003c/h2\u003e\n\u003cp\u003e路由过滤器允许以某种方式修改传入的 HTTP 请求或传出的 HTTP 响应。路由过滤器的范围是一个特定的路由。Spring Cloud Gateway包括许多内置的GatewayFilter Factories。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关于如何使用以下任何过滤器的更详细的例子，请看\u003ca href=\"https://github.com/spring-cloud/spring-cloud-gateway/tree/master/spring-cloud-gateway-server/src/test/java/org/springframework/cloud/gateway/filter/factory\"\u003e单元测试\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"61-the-addrequestheader-gatewayfilter-factory\"\u003e6.1. The AddRequestHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eAddRequestHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂需要一个\u003ccode\u003ename\u003c/code\u003e和\u003ccode\u003evalue\u003c/code\u003e参数。下面的例子配置了一个\u003ccode\u003eAddRequestHeader\u003c/code\u003e的\u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 13. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_request_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddRequestHeader=X-Request-red, blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个列表将\u003ccode\u003eX-Request-red:blue\u003c/code\u003e头添加到所有匹配请求的下游请求的头文件中。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eAddRequestHeader\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并在运行时被扩展。下面的例子配置了一个\u003ccode\u003eAddRequestHeader``GatewayFilter\u003c/code\u003e，使用了一个变量。\u003c/p\u003e\n\u003cp\u003eExample 14. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_request_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/red/{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddRequestHeader=X-Request-Red, Blue-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"62-the-addrequestparameter-gatewayfilter-factory\"\u003e6.2. The AddRequestParameter GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eAddRequestParameter GatewayFilter Factory需要一个名称和值参数。下面的例子配置了一个AddRequestParameter GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 15. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_request_parameter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddRequestParameter=red, blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将为所有匹配的请求在下游请求的查询字符串中添加\u003ccode\u003ered=blue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eAddRequestParameter\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并在运行时被扩展。下面的例子配置了一个\u003ccode\u003eAddRequestParameter``GatewayFilter\u003c/code\u003e，使用了一个变量。\u003c/p\u003e\n\u003cp\u003eExample 16. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_request_parameter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e{\u003cspan class=\"l\"\u003esegment}.myhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddRequestParameter=foo, bar-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"63-the-addresponseheader-gatewayfilter-factory\"\u003e6.3. The AddResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eAddResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂需要一个\u003ccode\u003ename\u003c/code\u003e和\u003ccode\u003evalue\u003c/code\u003e参数。下面的例子配置了一个\u003ccode\u003eAddResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 17. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_response_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddResponseHeader=X-Response-Red, Blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将把\u003ccode\u003eX-Response-Foo:Bar\u003c/code\u003e头添加到所有匹配请求的下游响应的头文件中。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eAddResponseHeader\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并在运行时被扩展。下面的例子配置了一个\u003ccode\u003eAddResponseHeader``GatewayFilter\u003c/code\u003e，使用了一个变量。\u003c/p\u003e\n\u003cp\u003eExample 18. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_response_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e{\u003cspan class=\"l\"\u003esegment}.myhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddResponseHeader=foo, bar-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"64-the-deduperesponseheader-gatewayfilter-factory\"\u003e6.4. The DedupeResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eDedupeResponseHeader GatewayFilter工厂接收一个\u003ccode\u003ename\u003c/code\u003e参数和一个可选的\u003ccode\u003estrategy\u003c/code\u003e参数。\u003ccode\u003ename\u003c/code\u003e可以包含一个以空格分隔的头名称列表。下面的例子配置了一个\u003ccode\u003eDedupeResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ededupe_response_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eDedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在网关CORS逻辑和下游逻辑都添加了\u003ccode\u003eAccess-Control-Allow-Credentials\u003c/code\u003e和\u003ccode\u003eAccess-Control-Allow-Origin\u003c/code\u003e响应头的情况下，这将删除重复的值。\u003c/p\u003e\n\u003cp\u003eDedupeResponseHeader 过滤器还接受一个可选的 \u003ccode\u003estrategy\u003c/code\u003e 参数。接受的值是\u003ccode\u003eRETAIN_FIRST\u003c/code\u003e（默认），\u003ccode\u003eRETAIN_LAST\u003c/code\u003e，和\u003ccode\u003eRETAIN_UNIQUE\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"65-spring-cloud-circuitbreaker-gatewayfilter-factory\"\u003e6.5. Spring Cloud CircuitBreaker GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker GatewayFilter工厂使用Spring Cloud CircuitBreaker APIs将Gateway路由包裹在一个断路器中。Spring Cloud CircuitBreaker支持多个可与Spring Cloud Gateway一起使用的库。Spring Cloud支持Resilience4J开箱即用。\u003c/p\u003e\n\u003cp\u003e要启用Spring Cloud CircuitBreaker过滤器，你需要将\u003ccode\u003espring-cloud-starter-circuitbreaker-reactor-resilience4j\u003c/code\u003e放在classpath上。下面的例子配置了一个Spring Cloud CircuitBreaker \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 20. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecircuitbreaker_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eCircuitBreaker=myCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要配置断路器，请参阅你所使用的底层断路器实现的配置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.spring.io/spring-cloud-circuitbreaker/reference/html/spring-cloud-circuitbreaker.html\"\u003eResilience4J Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker过滤器也可以接受一个可选的\u003ccode\u003efallbackUri\u003c/code\u003e参数。目前，只支持\u003ccode\u003eforward:\u003c/code\u003e模式化的URI。如果回退被调用，请求将被转发到URI所匹配的控制器。下面的例子配置了这样一个fallback。\u003c/p\u003e\n\u003cp\u003eExample 21. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecircuitbreaker_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://backing-service:8088\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/consumingServiceEndpoint\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eforward:/inCaseOfFailureUseThis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRewritePath=/consumingServiceEndpoint, /backingServiceEndpoint\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的列表在Java中做同样的事情。\u003c/p\u003e\n\u003cp\u003eExample 22. Application.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;circuitbreaker_route\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/consumingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreaker\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;myCircuitBreaker\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;forward:/inCaseOfFailureUseThis\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erewritePath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/consumingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/backingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lb://backing-service:8088\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e本例在调用断路器回退时转发到\u003ccode\u003e/inCaseofFailureUseThis\u003c/code\u003e URI。请注意，这个例子还演示了（可选）Spring Cloud LoadBalancer的负载均衡（由目标URI上的\u003ccode\u003elb\u003c/code\u003e前缀定义）。\u003c/p\u003e\n\u003cp\u003e主要情况是使用\u003ccode\u003efallbackUri\u003c/code\u003e来定义网关应用中的内部控制器或处理器。然而，你也可以将请求重新路由到外部应用程序的控制器或处理程序，如下所示。\u003c/p\u003e\n\u003cp\u003eExample 23. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eingredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://ingredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=//ingredients/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efetchIngredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eforward:/fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eingredients-fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:9994\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个例子中，网关应用程序中没有 \u003ccode\u003efallback\u003c/code\u003e 端点或处理程序。然而，在另一个应用程序中有一个，在\u003ccode\u003elocalhost:9994\u003c/code\u003e下注册。\u003c/p\u003e\n\u003cp\u003e在请求被转发到回退的情况下，Spring Cloud CircuitBreaker Gateway过滤器也提供了引起该请求的\u003ccode\u003eThrowable\u003c/code\u003e。它作为 \u003ccode\u003eServerWebExchangeUtils.CIRCUITBREAKER_EXECUTION_EXCEPTION_ATTR\u003c/code\u003e 属性被添加到 \u003ccode\u003eServerWebExchange\u003c/code\u003e 中，在网关应用程序中处理fallback时可以使用。\u003c/p\u003e\n\u003cp\u003e对于外部控制器/处理程序的情况，可以添加带有异常细节的头文件。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#fallback-headers\"\u003eFallbackHeaders GatewayFilter Factory section\u003c/a\u003e 中找到更多关于这样做的信息。\u003c/p\u003e\n\u003ch4 id=\"651-状态码中的断路器熔断\"\u003e6.5.1. 状态码中的断路器熔断\u003c/h4\u003e\n\u003cp\u003e在某些情况下，你可能想根据它所包裹的路由返回的状态代码来熔断。断路器配置对象需要一个状态代码列表，如果返回这些代码将导致断路器熔断。当设置你想让断路器熔断的状态代码时，你可以使用一个带有状态代码值的整数或HttpStatus枚举的字符串表示。\u003c/p\u003e\n\u003cp\u003eExample 24. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecircuitbreaker_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://backing-service:8088\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/consumingServiceEndpoint\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eforward:/inCaseOfFailureUseThis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003estatusCodes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e- \u003cspan class=\"m\"\u003e500\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;NOT_FOUND\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eExample 25. Application.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;circuitbreaker_route\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/consumingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreaker\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;myCircuitBreaker\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;forward:/inCaseOfFailureUseThis\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eaddStatusCode\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;INTERNAL_SERVER_ERROR\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erewritePath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/consumingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/backingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lb://backing-service:8088\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"66-the-fallbackheaders-gatewayfilter-factory\"\u003e6.6. The FallbackHeaders GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e通过\u003ccode\u003eFallbackHeaders\u003c/code\u003e工厂，你可以在转发到外部应用程序中的\u003ccode\u003efallbackUri\u003c/code\u003e的请求的标题中添加\u003ccode\u003eSpring Cloud CircuitBreaker\u003c/code\u003e的执行异常细节，如以下场景。\u003c/p\u003e\n\u003cp\u003eExample 26. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eingredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://ingredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=//ingredients/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efetchIngredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eforward:/fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eingredients-fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:9994\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eFallbackHeaders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eexecutionExceptionTypeHeaderName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eTest-Header\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个例子中，在运行断路器时发生执行异常后，请求被转发到运行在\u003ccode\u003elocalhost:9994\u003c/code\u003e的应用程序中的\u003ccode\u003efallback\u003c/code\u003e端点或处理器。带有异常类型、消息和（如果有）根本原因的异常类型和消息的头文件被\u003ccode\u003eFallbackHeaders\u003c/code\u003e过滤器添加到该请求中。\u003c/p\u003e\n\u003cp\u003e你可以通过设置以下参数的值来覆盖配置中的头文件名称（显示为默认值）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eexecutionExceptionTypeHeaderName\u003c/code\u003e ( \u003ccode\u003e\u0026quot;Execution-Exception-Type\u0026quot;\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eexecutionExceptionMessageHeaderName\u003c/code\u003e ( \u003ccode\u003e\u0026quot;Execution-Exception-Message\u0026quot;\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erootCauseExceptionTypeHeaderName\u003c/code\u003e ( \u003ccode\u003e\u0026quot;Root-Cause-Exception-Type\u0026quot;\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erootCauseExceptionMessageHeaderName\u003c/code\u003e ( \u003ccode\u003e\u0026quot;Root-Cause-Exception-Message\u0026quot;\u003c/code\u003e )\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e关于断路器和网关的更多信息，请参阅\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#spring-cloud-circuitbreaker-filter-factory\"\u003eSpring Cloud CircuitBreaker Factory部分\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"67-the-maprequestheader-gatewayfilter-factory\"\u003e6.7. The MapRequestHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eMapRequestHeader GatewayFilter工厂接受fromHeader和toHeader参数。它创建一个新的命名头（toHeader），并从传入的http请求的现有命名头（fromHeader）中提取值。如果输入的头不存在，过滤器没有任何影响。如果新的命名头信息已经存在，它的值就会被增加新的值。下面的例子配置了一个MapRequestHeader。\u003c/p\u003e\n\u003cp\u003eExample 27. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emap_request_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eMapRequestHeader=Blue, X-Request-Red\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在下游请求中添加\u003ccode\u003eX-Request-Red:\u0026lt;values\u0026gt;\u003c/code\u003e头，并从传入的HTTP请求的\u003ccode\u003eBlue\u003c/code\u003e头中更新数值。\u003c/p\u003e\n\u003ch3 id=\"68-the-prefixpath-gatewayfilter-factory\"\u003e6.8. The PrefixPath GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003ePrefixPath GatewayFilter工厂需要一个前缀参数。下面的例子配置了一个PrefixPath GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 28. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eprefixpath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePrefixPath=/mypath\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将把\u003ccode\u003e/mypath\u003c/code\u003e作为所有匹配请求的路径的前缀。因此，一个到\u003ccode\u003e/hello\u003c/code\u003e的请求将被发送到\u003ccode\u003e/mypath/hello\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"69-the-preservehostheader-gatewayfilter-factory\"\u003e6.9. The PreserveHostHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003ePreserveHostHeader GatewayFilter工厂没有参数。这个过滤器设置一个请求属性，路由过滤器会检查该属性，以确定是否应该发送原始的主机头，而不是由HTTP客户端确定的主机头。下面的例子配置了一个PreserveHostHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 29. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epreserve_host_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePreserveHostHeader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"610-the-requestratelimiter-gatewayfilter-factory\"\u003e6.10. The RequestRateLimiter GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRequestRateLimiter``GatewayFilter\u003c/code\u003e工厂使用\u003ccode\u003eRateLimiter\u003c/code\u003e实现来确定是否允许当前请求继续进行。如果不允许，将返回 \u0026ldquo;HTTP 429 - Too Many Requests\u0026rdquo;（默认）的状态。\u003c/p\u003e\n\u003cp\u003e这个过滤器需要一个可选的\u003ccode\u003ekeyResolver\u003c/code\u003e参数和特定于速率限制器的参数（在本节后面描述）。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ekeyResolver\u003c/code\u003e是一个实现\u003ccode\u003eKeyResolver\u003c/code\u003e接口的bean。在配置中，使用SpEL来引用Bean的名字。\u003ccode\u003e#{@myKeyResolver}\u003c/code\u003e是一个SpEL表达式，它引用了一个名为\u003ccode\u003emyKeyResolver\u003c/code\u003e的bean。下面的列表显示了\u003ccode\u003eKeyResolver\u003c/code\u003e的接口。\u003c/p\u003e\n\u003cp\u003eExample 30. KeyResolver.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eKeyResolver\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eresolve\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eServerWebExchange\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eKeyResolver\u003c/code\u003e接口让可插拔的策略得出限制请求的密钥。在未来的里程碑版本中，会有一些\u003ccode\u003eKeyResolver\u003c/code\u003e的实现。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eKeyResolver\u003c/code\u003e的默认实现是\u003ccode\u003ePrincipalNameKeyResolver\u003c/code\u003e，它从\u003ccode\u003eServerWebExchange\u003c/code\u003e中检索\u003ccode\u003ePrincipal\u003c/code\u003e并调用\u003ccode\u003ePrincipal.getName()\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e默认情况下，如果\u003ccode\u003eKeyResolver\u003c/code\u003e没有找到一个密钥，请求将被拒绝。你可以通过设置\u003ccode\u003espring.cloud.gateway.filter.request-rate-limiter.deny-empty-key\u003c/code\u003e（\u003ccode\u003etrue\u003c/code\u003e或\u003ccode\u003efalse\u003c/code\u003e）和\u003ccode\u003espring.cloud.gateway.filter.request-rate-limiter.empty-key-status-code\u003c/code\u003e属性调整这种行为。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eRequestRateLimiter\u003c/code\u003e 不能用 \u0026ldquo;快捷方式\u0026rdquo; 符号来配置。下面的例子是无效的\u003c/p\u003e\n\u003cp\u003eExample 31. application.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e# INVALID SHORTCUT CONFIGURATION\nspring.cloud.gateway.routes[0].filters[0]=RequestRateLimiter=2, 2, #{@userkeyresolver}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"6101-redis-ratelimiter\"\u003e6.10.1. Redis RateLimiter\u003c/h4\u003e\n\u003cp\u003eRedis的实现是基于\u003ca href=\"https://stripe.com/blog/rate-limiters\"\u003eStripe\u003c/a\u003e的工作。它需要使用\u003ccode\u003espring-boot-starter-data-redis-reactive\u003c/code\u003e Spring Boot启动器。\u003c/p\u003e\n\u003cp\u003e使用的算法是\u003ca href=\"https://en.wikipedia.org/wiki/Token_bucket\"\u003eToken Bucket Algorithm\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eredis-rate-limiter.replenishRate\u003c/code\u003e属性是你希望用户每秒可以做多少个请求，而不允许有任何放弃的请求。这就是代币桶被填充的速度。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eredis-rate-limiter.burstCapacity\u003c/code\u003e属性是允许一个用户在一秒钟内完成的最大请求数。这是代币桶可以容纳的代币数量。将此值设置为零，可以阻止所有请求。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eredis-rate-limiter.requestedTokens\u003c/code\u003e属性是一个请求需要花费多少代币。这是每次请求时从桶中取出的代币数量，默认为\u003ccode\u003e1\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e稳定的速率是通过在\u003ccode\u003ereplenishRate\u003c/code\u003e和\u003ccode\u003eburstCapacity\u003c/code\u003e中设置相同的值来完成的。通过设置\u003ccode\u003eburstCapacity'高于\u003c/code\u003ereplenishRate'，可以允许临时的突发。在这种情况下，速率限制器需要在突发之间允许一些时间（根据\u003ccode\u003ereplenishRate\u003c/code\u003e），因为连续两次突发将导致请求被放弃（\u003ccode\u003eHTTP 429 - Too Many Requests\u003c/code\u003e）。下面的列表配置了一个\u003ccode\u003eredis-rate-limiter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e通过设置 \u003ccode\u003ereplenishRate\u003c/code\u003e 为想要的请求数，\u003ccode\u003erequestedTokens\u003c/code\u003e 为秒数，\u003ccode\u003eburstCapacity\u003c/code\u003e 为 \u003ccode\u003ereplenishRate\u003c/code\u003e 和 \u003ccode\u003erequestedTokens\u003c/code\u003e 的乘积，来实现低于 \u003ccode\u003e1 request/s\u003c/code\u003e 的速率限制，例如，设置 \u003ccode\u003ereplenishRate=1\u003c/code\u003e，\u003ccode\u003erequestedTokens=60\u003c/code\u003e 和 \u003ccode\u003eburstCapacity=60\u003c/code\u003e 将导致限制为 \u003ccode\u003e1 request/min\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 32. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erequestratelimiter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRequestRateLimiter\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis-rate-limiter.replenishRate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis-rate-limiter.burstCapacity\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis-rate-limiter.requestedTokens\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子在Java中配置了一个KeyResolver。\u003c/p\u003e\n\u003cp\u003eExample 33. Config.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eKeyResolver\u003c/span\u003e \u003cspan class=\"nf\"\u003euserKeyResolver\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParams\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetFirst\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这定义了每个用户的请求率限制为10。爆发20次是允许的，但是，在下一秒，只有10个请求可以使用。\u003ccode\u003eKeyResolver\u003c/code\u003e 是一个简单的，获得 \u003ccode\u003euser\u003c/code\u003e 请求参数（注意，不建议在生产中这样做）。\u003c/p\u003e\n\u003cp\u003e你也可以把速率限制器定义为一个实现\u003ccode\u003eRateLimiter\u003c/code\u003e接口的bean。在配置中，你可以用SpEL来引用bean的名字。\u003ccode\u003e#{@myRateLimiter}\u003c/code\u003e是一个SpEL表达式，引用一个名为\u003ccode\u003emyRateLimiter\u003c/code\u003e的bean。下面的列表定义了一个速率限制器，它使用了前面列表中定义的\u003ccode\u003eKeyResolver\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 34. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erequestratelimiter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRequestRateLimiter\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003erate-limiter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;#{@myRateLimiter}\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-resolver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;#{@userKeyResolver}\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"611-the-redirectto-gatewayfilter-factory\"\u003e6.11. The RedirectTo GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRedirectTo\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂需要两个参数，\u003ccode\u003estatus\u003c/code\u003e和\u003ccode\u003eurl\u003c/code\u003e。\u003ccode\u003estatus\u003c/code\u003e参数应该是一个300系列的重定向HTTP代码，如301。\u003ccode\u003eurl\u003c/code\u003e参数应该是一个有效的URL。这是\u003ccode\u003eLocation\u003c/code\u003e头的值。对于相对重定向，你应该使用\u003ccode\u003euri: no://op\u003c/code\u003e作为路由定义的URI。下面的列表配置了一个\u003ccode\u003eRedirectTo\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 35. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eprefixpath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRedirectTo=302, https://acme.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将发送一个带有\u003ccode\u003eLocation:https://acme.org\u003c/code\u003e头的状态302来执行重定向。\u003c/p\u003e\n\u003ch3 id=\"612-the-removerequestheader-gatewayfilter-factory\"\u003e6.12. The RemoveRequestHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRemoveRequestHeader GatewayFilter工厂需要一个name参数。它是要删除的头的名称。下面的列表配置了一个RemoveRequestHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 36. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eremoverequestheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRemoveRequestHeader=X-Request-Foo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这在向下游发送之前删除了\u003ccode\u003eX-Request-Foo\u003c/code\u003e标头。\u003c/p\u003e\n\u003ch3 id=\"613-removeresponseheader-gatewayfilter-factory\"\u003e6.13. RemoveResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRemoveResponseHeader GatewayFilter工厂需要一个name参数。它是要删除的头的名称。下面的列表配置了一个RemoveResponseHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 37. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eremoveresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRemoveResponseHeader=X-Response-Foo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e他将在响应返回到网关客户端之前从响应中删除\u003ccode\u003eX-Response-Foo\u003c/code\u003e头。\u003c/p\u003e\n\u003cp\u003e要删除任何种类的敏感头，你应该为任何你可能想这样做的路由配置这个过滤器。此外，你可以通过使用\u003ccode\u003espring.cloud.gateway.default-filters\u003c/code\u003e来配置一次这个过滤器，并让它应用于所有路由。\u003c/p\u003e\n\u003ch3 id=\"614-the-removerequestparameter-gatewayfilter-factory\"\u003e6.14. The RemoveRequestParameter GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRemoveRequestParameter GatewayFilter工厂需要一个名称参数。它是要删除的查询参数的名称。下面的例子配置了一个RemoveRequestParameter GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 38. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eremoverequestparameter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRemoveRequestParameter=red\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在向下游发送之前删除\u003ccode\u003ered\u003c/code\u003e参数。\u003c/p\u003e\n\u003ch3 id=\"615-the-rewritepath-gatewayfilter-factory\"\u003e6.15. The RewritePath GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRewritePath\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂接收一个路径\u003ccode\u003eregexp\u003c/code\u003e参数和一个\u003ccode\u003ereplacement\u003c/code\u003e参数。这是用Java正则表达式来重写请求路径的一种灵活方式。下面的列表配置了一个\u003ccode\u003eRewritePath\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 39. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erewritepath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/red/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRewritePath=/red/?(?\u0026lt;segment\u0026gt;.*), /$\\{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于一个\u003ccode\u003e/red/blue\u003c/code\u003e的请求路径，在进行下游请求之前将路径设置为\u003ccode\u003e/blue\u003c/code\u003e。注意，由于YAML规范，\u003ccode\u003e$\u003c/code\u003e应该被替换成\u003ccode\u003e$\\\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"616-rewritelocationresponseheader-gatewayfilter-factory\"\u003e6.16. RewriteLocationResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRewriteLocationResponseHeader GatewayFilter工厂修改Location响应头的值，通常是为了去掉后台的特定细节。它需要 \u003ccode\u003estripVersionMode\u003c/code\u003e、\u003ccode\u003elocationHeaderName\u003c/code\u003e、\u003ccode\u003ehostValue\u003c/code\u003e 和 \u003ccode\u003eprotocolsRegex\u003c/code\u003e 参数。下面的列表配置了一个RewriteLocationResponseHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 40. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erewritelocationresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRewriteLocationResponseHeader=AS_IN_REQUEST, Location, ,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e例如，对于一个\u003ccode\u003ePOST api.example.com/some/object/name\u003c/code\u003e的请求，\u003ccode\u003eLocation\u003c/code\u003e的响应头值\u003ccode\u003eobject-service.prod.example.net/v2/some/object/id\u003c/code\u003e被改写为\u003ccode\u003eapi.example.com/some/object/id\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003estripVersionMode\u003c/code\u003e参数有以下可能的值。\u003ccode\u003eNEVER_STRIP\u003c/code\u003e, \u003ccode\u003eAS_IN_REQUEST\u003c/code\u003e (默认), 和 \u003ccode\u003eALWAYS_STRIP\u003c/code\u003e 。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNEVER_STRIP\u003c/code\u003e : 即使原始请求路径不包含版本，版本也不会被剥离。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eAS_IN_REQUEST\u003c/code\u003e 只有在原始请求路径不包含版本的情况下，版本才会被剥离。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eALWAYS_STRIP\u003c/code\u003e 即使原始请求路径包含版本，版本也会被剥离。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003ehostValue\u003c/code\u003e参数，如果提供的话，用于替换响应\u003ccode\u003eLocation\u003c/code\u003e头的\u003ccode\u003ehost:port\u003c/code\u003e部分。如果没有提供，则使用\u003ccode\u003eHost\u003c/code\u003e请求头的值。\u003c/p\u003e\n\u003cp\u003e参数 \u003ccode\u003eprotocolsRegex\u003c/code\u003e 必须是一个有效的正则 \u003ccode\u003eString\u003c/code\u003e，与协议名称相匹配。如果没有匹配，过滤器不做任何事情。默认是\u003ccode\u003ehttp|https|ftp|ftps\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"617-the-rewriteresponseheader-gatewayfilter-factory\"\u003e6.17. The RewriteResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRewriteResponseHeader GatewayFilter工厂接受名称、regexp和替换参数。它使用Java正则表达式，以一种灵活的方式重写响应头的值。下面的例子配置了一个RewriteResponseHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 41. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erewriteresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRewriteResponseHeader=X-Response-Red, , password=[^\u0026amp;]+, password=***\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于一个头值为\u003ccode\u003e/42?user=ford\u0026amp;password=omg!what\u0026amp;flag=true\u003c/code\u003e，它在发出下游请求后被设置为\u003ccode\u003e/42?user=ford\u0026amp;password=***\u0026amp;flag=true\u003c/code\u003e。由于YAML的规范，你必须用\u003ccode\u003e$\\\u003c/code\u003e来表示\u003ccode\u003e$\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"618-the-savesession-gatewayfilter-factory\"\u003e6.18. The SaveSession GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSaveSession GatewayFilter工厂在转发下游调用之前强制进行\u003ccode\u003eWebSession::save\u003c/code\u003e操作。这在使用类似\u003ccode\u003eSpring Session\u003c/code\u003e的懒惰数据存储时特别有用，因为你需要确保在进行转发调用之前已经保存了会话状态。下面的例子配置了一个SaveSession GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 42. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esave_session\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/foo/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSaveSession\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你将\u003ca href=\"https://projects.spring.io/spring-security/\"\u003eSpring Security\u003c/a\u003e与Spring Session集成，并希望确保安全细节已被转发给远程进程，这一点至关重要。\u003c/p\u003e\n\u003ch3 id=\"619-the-secureheaders-gatewayfilter-factory\"\u003e6.19. The SecureHeaders GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSecureHeaders\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂根据\u003ca href=\"https://blog.appcanary.com/2017/http-security-headers.html\"\u003e本博文\u003c/a\u003e的建议，在响应中添加了一些头信息。\u003c/p\u003e\n\u003cp\u003e添加了以下标题（显示的是其默认值）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eX-Xss-Protection:1 (mode=block\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eStrict-Transport-Security (max-age=631138519\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX-Frame-Options (DENY)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX-Content-Type-Options (nosniff)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eReferrer-Policy (no-referrer)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eContent-Security-Policy (default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src https:; style-src 'self' https: 'unsafe-inline)'\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX-Download-Options (noopen)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX-Permitted-Cross-Domain-Policies (none)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e要改变默认值，请在\u003ccode\u003espring.cloud.gateway.filter.secure-headers\u003c/code\u003e命名空间中设置相应的属性。以下属性是可用的。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003exss-protection-header\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estrict-transport-security\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex-frame-options\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex-content-type-options\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereferrer-policy\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econtent-security-policy\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex-download-options\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex-permitted-cross-domain-policies\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e要禁用默认值，请用逗号分隔的值设置\u003ccode\u003espring.cloud.gateway.filter.secure-headers.disable\u003c/code\u003e属性。下面的例子显示了如何做到这一点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.gateway.filter.secure-headers.disable=x-frame-options,strict-transport-security\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e需要使用安全头的小写全名来禁用它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"620-the-setpath-gatewayfilter-factory\"\u003e6.20. The SetPath GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSetPath GatewayFilter工厂接受一个路径模板参数。它提供了一种简单的方法，通过允许模板化的路径段来操作请求路径。这使用了Spring Framework的URI模板。允许多个匹配段。下面的例子配置了一个SetPath GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 43. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetpath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/red/{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetPath=/{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于请求路径为\u003ccode\u003e/red/blue\u003c/code\u003e的情况，在进行下游请求前将路径设置为\u003ccode\u003e/blue\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"621-the-setrequestheader-gatewayfilter-factory\"\u003e6.21. The SetRequestHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSetRequestHeader GatewayFilter工厂接受name和value参数。下面的列表配置了一个SetRequestHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 44. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetrequestheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetRequestHeader=X-Request-Red, Blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个\u003ccode\u003eGatewayFilter\u003c/code\u003e替换（而不是添加）所有给定名称的头信息。因此，如果下游服务器响应的是\u003ccode\u003eX-Request-Red:1234\u003c/code\u003e，这将被替换为\u003ccode\u003eX-Request-Red:Blue\u003c/code\u003e，这就是下游服务将收到的内容。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSetRequestHeader\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并在运行时被扩展。下面的例子配置了一个使用变量的\u003ccode\u003eSetRequestHeader``GatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 45. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetrequestheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e{\u003cspan class=\"l\"\u003esegment}.myhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetRequestHeader=foo, bar-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"622-the-setresponseheader-gatewayfilter-factory\"\u003e6.22. The SetResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSetResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂接受\u003ccode\u003ename\u003c/code\u003e和\u003ccode\u003evalue\u003c/code\u003e参数。下面的列表配置了一个\u003ccode\u003eSetResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 46. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetResponseHeader=X-Response-Red, Blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个GatewayFilter会替换（而不是添加）所有给定名称的头信息。因此，如果下游服务器响应的是\u003ccode\u003eX-Response-Red:1234\u003c/code\u003e，这将被替换为\u003ccode\u003eX-Response-Red:Blue\u003c/code\u003e，这就是网关客户端将收到的内容。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSetResponseHeader\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并将在运行时被扩展。下面的例子配置了一个\u003ccode\u003eSetResponseHeader``GatewayFilter\u003c/code\u003e，使用了一个变量。\u003c/p\u003e\n\u003cp\u003eExample 47. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e{\u003cspan class=\"l\"\u003esegment}.myhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetResponseHeader=foo, bar-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"623-the-setstatus-gatewayfilter-factory\"\u003e6.23. The SetStatus GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSetStatus GatewayFilter工厂只接受一个参数，即status。它必须是一个有效的Spring HttpStatus。它可以是\u003ccode\u003e404\u003c/code\u003e的整数值或枚举的字符串表示。\u003ccode\u003eNOT_FOUND\u003c/code\u003e。下面的列表配置了一个SetStatus GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 48. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetstatusstring_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetStatus=BAD_REQUEST\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetstatusint_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetStatus=401\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这两种情况下，响应的HTTP状态被设置为401。\u003c/p\u003e\n\u003cp\u003e你可以配置\u003ccode\u003eSetStatus\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e，在响应中的一个头中返回代理请求的原始HTTP状态代码。如果配置了以下属性，该头会被添加到响应中。\u003c/p\u003e\n\u003cp\u003eExample 49. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eset-status\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eoriginal-status-header-name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eoriginal-http-status\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"624-the-stripprefix-gatewayfilter-factory\"\u003e6.24. The StripPrefix GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eStripPrefix GatewayFilter工厂需要一个参数，即parts。parts参数表示在向下游发送请求之前要从路径中剥离的部分的数量。下面的列表配置了一个StripPrefix GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 50. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enameRoot\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://nameservice\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/name/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eStripPrefix=2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当通过网关向\u003ccode\u003e/name/blue/red\u003c/code\u003e发出请求时，向\u003ccode\u003enameservice\u003c/code\u003e发出的请求看起来像\u003ccode\u003enameservice/red\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"625-the-retry-gatewayfilter-factory\"\u003e6.25. The Retry GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRetry\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂支持以下参数。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eretries\u003c/code\u003e : 应该尝试的重试次数。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estatuses\u003c/code\u003e : 应该重试的HTTP状态代码，用\u003ccode\u003eorg.springframework.http.HttpStatus\u003c/code\u003e表示。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emethods\u003c/code\u003e：应该重试的HTTP方法，用\u003ccode\u003eorg.springframework.http.HttpMethod\u003c/code\u003e表示。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eseries\u003c/code\u003e：要重试的状态代码系列，用\u003ccode\u003eorg.springframework.http.HttpStatus.Series\u003c/code\u003e表示。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eexceptions\u003c/code\u003e : 抛出的异常列表，应该被重新尝试。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebackoff\u003c/code\u003e：为重试配置的指数后验。重试的时间间隔为\u003ccode\u003efirstBackoff * (factor ^ n)\u003c/code\u003e，其中\u003ccode\u003en\u003c/code\u003e是迭代次数。如果配置了 \u0026ldquo;maxBackoff\u0026rdquo;，应用的最大后退时间限制为 \u003ccode\u003emaxBackoff\u003c/code\u003e。如果\u003ccode\u003ebasedOnPreviousValue\u003c/code\u003e为真，后退是通过\u003ccode\u003eprevBackoff * factor\u003c/code\u003e计算的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果启用了 \u003ccode\u003eRetry\u003c/code\u003e 过滤器，下列默认值被配置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eretries\u003c/code\u003e : Three times\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eseries\u003c/code\u003e : 5XX series\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emethods\u003c/code\u003e : GET method\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eexceptions\u003c/code\u003e : \u003ccode\u003eIOException\u003c/code\u003e and \u003ccode\u003eTimeoutException\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebackoff\u003c/code\u003e : disabled\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e下面的列表配置了一个重试的\u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 51. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eretry_test\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:8080/flakey\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eHost=*.retry.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRetry\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eretries\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003estatuses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBAD_GATEWAY\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emethods\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eGET,POST\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackoff\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003efirstBackoff\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e10ms\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003emaxBackoff\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e50ms\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003efactor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ebasedOnPreviousValue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e当使用带有\u003ccode\u003eforward:\u003c/code\u003e前缀的URL的重试过滤器时，应仔细编写目标端点，以便在出现错误时，它不会做任何可能导致响应被发送到客户端并提交的事情。例如，如果目标端点是一个有注释的控制器，目标控制器方法不应该返回\u003ccode\u003eResponseEntity\u003c/code\u003e，并带有错误状态代码。相反，它应该抛出一个\u003ccode\u003eException\u003c/code\u003e或发出一个错误信号（例如，通过\u003ccode\u003eMono.error(ex)\u003c/code\u003e返回值），重试过滤器可以被配置为通过重试来处理。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当对任何带有请求体的HTTP方法使用重试过滤器时，请求体将被缓存，网关将变得内存有限。请求体被缓存在一个由\u003ccode\u003eServerWebExchangeUtils.CACHED_REQUEST_BODY_ATTR\u003c/code\u003e定义的请求属性中。该对象的类型是\u003ccode\u003eorg.springframework.core.io.buffer.DataBuffer\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"626-the-requestsize-gatewayfilter-factory\"\u003e6.26. The RequestSize GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e当请求的大小超过允许的限制时，\u003ccode\u003eRequestSize\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂可以限制请求到达下游服务。该过滤器需要一个\u003ccode\u003emaxSize\u003c/code\u003e参数。\u003ccode\u003emaxSize\u003c/code\u003e是一个\u003ccode\u003eDataSize\u003c/code\u003e类型，所以值可以定义为一个数字，后面有一个可选的\u003ccode\u003eDataUnit\u003c/code\u003e后缀，如\u003ccode\u003eKB\u003c/code\u003e或\u003ccode\u003eMB\u003c/code\u003e。默认值是\u003ccode\u003eB\u003c/code\u003e，表示字节数。它是以字节为单位定义的请求的可允许的大小限制。下面的列表配置了一个\u003ccode\u003eRequestSize\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 52. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erequest_size_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:8080/upload\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/upload\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRequestSize\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emaxSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRequestSize GatewayFilter工厂将响应状态设置为413 Payload Too Large，当请求由于大小而被拒绝时，会有一个额外的头 errorMessage。下面的例子显示了这样一个errorMessage。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eerrorMessage` : `Request size is larger than permissible limit. Request size is 6.0 MB where permissible limit is 5.0 MB\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果在路由定义中没有提供过滤参数，默认请求大小被设置为5MB。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"627-the-setrequesthostheader-gatewayfilter-factory\"\u003e6.27. The SetRequestHostHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e在某些情况下，host header可能需要被重写。在这种情况下，SetRequestHostHeader GatewayFilter工厂可以将现有的host header替换成指定的vaue。该过滤器需要一个\u003ccode\u003ehost\u003c/code\u003e参数。下面的列表配置了一个SetRequestHostHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 53. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eset_request_host_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:8080/headers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/headers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSetRequestHostHeader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eexample.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eSetRequestHostHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂将主机头的值替换为\u003ccode\u003eexample.org\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"628-modify-a-request-body-gatewayfilter-factory\"\u003e6.28. Modify a Request Body GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e你可以使用ModifyRequestBody过滤器，在网关向下游发送请求体之前对其进行修改。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这个过滤器只能通过使用Java DSL来配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下面的列表显示了如何修改一个请求体GatewayFilter。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;rewrite_request_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*.rewriterequestobj.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprefixPath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/httpbin\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emodifyRequestBody\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eHello\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMediaType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eAPPLICATION_JSON_VALUE\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eHello\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e())))).\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHello\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eHello\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eHello\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esetMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果请求没有正文，\u003ccode\u003eRewriteFilter\u003c/code\u003e将被传递为空。应该返回\u003ccode\u003eMono.empty()\u003c/code\u003e来指定请求中缺少的主体。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"629-modify-a-response-body-gatewayfilter-factory\"\u003e6.29. Modify a Response Body GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e你可以使用ModifyResponseBody过滤器来修改响应体，然后再把它送回给客户端。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这个过滤器只能通过使用Java DSL来配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下面的列表显示了如何修改一个响应体GatewayFilter。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;rewrite_response_upper\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*.rewriteresponseupper.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprefixPath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/httpbin\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emodifyResponseBody\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e()))).\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果响应没有正文，\u003ccode\u003eRewriteFilter\u003c/code\u003e将被传递为空。应该返回\u003ccode\u003eMono.empty()\u003c/code\u003e来指定响应中缺少的主体。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"630-token-relay-gatewayfilter-factory\"\u003e6.30. Token Relay GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eToken Relay是指OAuth2消费者作为客户端，将传入的令牌转发给传出的资源请求。消费者可以是一个纯粹的客户端（如SSO应用程序）或一个资源服务器。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Gateway可以将OAuth2访问令牌转发到它所代理的服务的下游。要在网关中添加这个功能，你需要像这样添加TokenRelayGatewayFilterFactory。\u003c/p\u003e\n\u003cp\u003eApp.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomRouteLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;resource\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/resource\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etokenRelay\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://localhost:9000\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者这样\u003c/p\u003e\n\u003cp\u003eapplication.yaml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eresource\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:9000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/resource\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eTokenRelay=\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它将（除了登录用户和抓取令牌外）把认证令牌传递给下游的服务（在这里是\u003ccode\u003e/resource\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e要为Spring Cloud Gateway启用这个功能，需要添加以下依赖项\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.boot:spring-boot-starter-oauth2-client\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e它是如何工作的？{githubmaster}/src/main/java/org/springframework/cloud/gateway/security/TokenRelayGatewayFilterFactory.java[filter]从当前认证的用户中提取访问令牌，并将其放入下游请求的请求头。\u003c/p\u003e\n\u003cp\u003e完整的工作样本见\u003ca href=\"https://github.com/spring-cloud-samples/sample-gateway-oauth2login\"\u003e该项目\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e只有当适当的\u003ccode\u003espring.security.oauth2.client.*\u003c/code\u003e属性被设置时，TokenRelayGatewayFilterFactory Bean才会被创建，这将触发\u003ccode\u003eReactiveClientRegistrationRepository\u003c/code\u003e Bean的创建。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eTokenRelayGatewayFilterFactory\u003c/code\u003e使用的\u003ccode\u003eReactiveOAuth2AuthorizedClientService\u003c/code\u003e的默认实现使用了一个内存数据存储。如果你需要一个更强大的解决方案，你将需要提供你自己的实现\u003ccode\u003eReactiveOAuth2AuthorizedClientService\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"631-default-filters\"\u003e6.31. Default Filters\u003c/h3\u003e\n\u003cp\u003e要添加一个过滤器并将其应用于所有路由，可以使用 \u003ccode\u003espring.cloud.gateway.default-filters\u003c/code\u003e。这个属性需要一个过滤器的列表。下面的列表定义了一组默认过滤器。\u003c/p\u003e\n\u003cp\u003eExample 54. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefault-filters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddResponseHeader=X-Response-Default-Red, Default-Blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003ePrefixPath=/httpbin\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"7-global-filters\"\u003e7. Global Filters\u003c/h2\u003e\n\u003cp\u003eGlobalFilter接口的签名与GatewayFilter相同。这些是特殊的过滤器，有条件地应用于所有路由。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这个接口和它的用法在未来的里程碑版本中可能会有变化。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"71-combined-global-filter-and-gatewayfilter-ordering\"\u003e7.1. Combined Global Filter and GatewayFilter Ordering\u003c/h3\u003e\n\u003cp\u003e当一个请求与路由匹配时，过滤网络处理器将\u003ccode\u003eGlobalFilter\u003c/code\u003e的所有实例和\u003ccode\u003eGatewayFilter\u003c/code\u003e的所有路由特定实例添加到一个过滤链中。这个组合的过滤器链由\u003ccode\u003eorg.springframework.core.Ordered\u003c/code\u003e接口进行排序，你可以通过实现\u003ccode\u003egetOrder()\u003c/code\u003e方法来设置这个接口。\u003c/p\u003e\n\u003cp\u003e由于Spring Cloud Gateway区分了过滤器逻辑执行的 \u0026ldquo;pre\u0026quot;和 \u0026ldquo;post\u0026quot;阶段（见如何工作），优先级最高的过滤器在 \u0026ldquo;pre\u0026quot;阶段是第一个，在 \u0026ldquo;post\u0026quot;阶段是最后一个。\u003c/p\u003e\n\u003cp\u003e下面的列表配置了一个过滤器链。\u003c/p\u003e\n\u003cp\u003eExample 55. ExampleConfiguration.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGlobalFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomGlobalFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomGlobalFilter\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eGlobalFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eVoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eServerWebExchange\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eGatewayFilterChain\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;custom global filter\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003egetOrder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"72-forward-routing-filter\"\u003e7.2. Forward Routing Filter\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eForwardRoutingFilter\u003c/code\u003e在exchange attribute \u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e中寻找一个URI。如果URL有一个\u003ccode\u003eforward\u003c/code\u003e方案（如\u003ccode\u003eforward:///localendpoint\u003c/code\u003e），它将使用Spring的\u003ccode\u003eDispatcherHandler\u003c/code\u003e来处理请求。请求URL的路径部分被转发URL中的路径所覆盖。未修改的原始URL被附加到\u003ccode\u003eServerWebExchangeUtils.GATEWAY_ORIGINAL_REQUEST_URL_ATTR\u003c/code\u003e属性的列表中。\u003c/p\u003e\n\u003ch3 id=\"73-the-reactiveloadbalancerclientfilter\"\u003e7.3. The ReactiveLoadBalancerClientFilter\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eReactiveLoadBalancerClientFilter\u003c/code\u003e在名为\u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e的交换属性中寻找一个URI。如果URL有一个\u003ccode\u003elb\u003c/code\u003e方案（如\u003ccode\u003elb://myservice\u003c/code\u003e），它使用Spring Cloud的\u003ccode\u003eReactorLoadBalancer\u003c/code\u003e将名称（本例中的\u003ccode\u003emyservice\u003c/code\u003e）解析为实际的主机和端口，并替换同一属性中的URI。未修改的原始URL被追加到\u003ccode\u003eServerWebExchangeUtils.GATEWAY_ORIGINAL_REQUEST_URL_ATTR\u003c/code\u003e属性的列表中。过滤器也会查看\u003ccode\u003eServerWebExchangeUtils.GATEWAY_SCHEME_PREFIX_ATTR\u003c/code\u003e属性，看它是否等于\u003ccode\u003elb\u003c/code\u003e。如果是的话，同样的规则也适用。下面的列表配置了一个\u003ccode\u003eReactiveLoadBalancerClientFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 56. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyRoute\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://service\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/service/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e默认情况下，当服务实例不能被\u003ccode\u003eReactorLoadBalancer\u003c/code\u003e找到时，会返回\u003ccode\u003e503\u003c/code\u003e。你可以通过设置\u003ccode\u003espring.cloud.gateway.loadbalancer.use404=true\u003c/code\u003e将网关配置为返回\u003ccode\u003e404\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e从\u003ccode\u003eReactiveLoadBalancerClientFilter\u003c/code\u003e返回的\u003ccode\u003eServiceInstance\u003c/code\u003e的\u003ccode\u003eisSecure\u003c/code\u003e值覆盖了向网关发出的请求中指定的方案。例如，如果请求通过HTTPS进入Gateway，但\u003ccode\u003eServiceInstance\u003c/code\u003e表明它不安全，那么下游请求将通过HTTP进行。相反的情况也可以适用。然而，如果在网关配置中为路由指定了 \u003ccode\u003eGATEWAY_SCHEME_PREFIX_ATTR\u003c/code\u003e，那么前缀将被剥离，来自路由 URL 的结果方案将覆盖 \u003ccode\u003eServiceInstance\u003c/code\u003e 的配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGateway支持所有的LoadBalancer功能。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer\"\u003eSpring Cloud Commons documentation\u003c/a\u003e中阅读更多关于它们的信息。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"74-the-netty-routing-filter\"\u003e7.4. The Netty Routing Filter\u003c/h3\u003e\n\u003cp\u003e如果位于\u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e exchange attribute 中的URL有一个http或https方案，Netty路由过滤器就会运行。它使用Netty HttpClient来进行下游代理请求。响应被放在\u003ccode\u003eServerWebExchangeUtils.CLIENT_RESPONSE_ATTR\u003c/code\u003e exchange attribute中，供以后的过滤器使用。(还有一个实验性的WebClientHttpRoutingFilter，执行同样的功能，但不需要Netty。)\u003c/p\u003e\n\u003ch3 id=\"75-the-netty-write-response-filter\"\u003e7.5. The Netty Write Response Filter\u003c/h3\u003e\n\u003cp\u003e如果在\u003ccode\u003eServerWebExchangeUtils.CLIENT_RESPONSE_ATTR\u003c/code\u003e exchange attribute中有一个Netty HttpClientResponse，NettyWriteResponseFilter就会运行。它在所有其他过滤器完成后运行，并将代理响应写回网关客户端响应。(还有一个实验性的WebClientWriteResponseFilter，执行同样的功能，但不需要Netty。)\u003c/p\u003e\n\u003ch3 id=\"76-the-routetorequesturl-filter\"\u003e7.6. The RouteToRequestUrl Filter\u003c/h3\u003e\n\u003cp\u003e如果在\u003ccode\u003eServerWebExchangeUtils.GATEWAY_ROUTE_ATTR\u003c/code\u003e exchange attribute中有一个Route对象，RouteToRequestUrlFilter会运行。它创建了一个新的URI，基于请求URI，但用路由对象的URI属性进行更新。新的URI被放置在\u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e exchange attribute`中。\u003c/p\u003e\n\u003cp\u003e如果URI有一个方案前缀，如\u003ccode\u003elb:ws://serviceid\u003c/code\u003e，lb方案将从URI中剥离，并放在\u003ccode\u003eServerWebExchangeUtils.GATEWAY_SCHEME_PREFIX_ATTR\u003c/code\u003e中，以便以后在过滤器链中使用。\u003c/p\u003e\n\u003ch3 id=\"77-the-websocket-routing-filter\"\u003e7.7. The Websocket Routing Filter\u003c/h3\u003e\n\u003cp\u003e如果位于\u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e exchange attribute中的URL有ws或wss方案，则运行websocket路由过滤器。它使用Spring WebSocket基础设施来转发下游的websocket请求。\u003c/p\u003e\n\u003cp\u003e你可以通过在URI前加上lb，如\u003ccode\u003elb:ws://serviceid\u003c/code\u003e，来平衡websocket的负载。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ca href=\"https://github.com/sockjs\"\u003eSockJS\u003c/a\u003e作为普通HTTP的后备方案，你应该配置一个普通的HTTP路由以及websocket路由。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下面的列表配置了一个websocket路由过滤器。\u003c/p\u003e\n\u003cp\u003eExample 57. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"c\"\u003e# SockJS route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ewebsocket_sockjs_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:3001\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/websocket/info/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"c\"\u003e# Normal Websocket route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ewebsocket_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ews://localhost:3001\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/websocket/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"78-the-gateway-metrics-filter\"\u003e7.8. The Gateway Metrics Filter\u003c/h3\u003e\n\u003cp\u003e要启用网关指标，请添加\u003ccode\u003espring-boot-starter-actuator\u003c/code\u003e作为项目依赖。然后，默认情况下，只要属性\u003ccode\u003espring.cloud.gateway.metrics.enabled\u003c/code\u003e没有设置为\u003ccode\u003efalse\u003c/code\u003e，网关指标过滤器就会运行。这个过滤器添加了一个名为\u003ccode\u003egateway.requests\u003c/code\u003e的定时器指标，标签如下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erouteId\u003c/code\u003e : 路径ID。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erouteUri\u003c/code\u003e : API被路由到的URI。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eoutcome\u003c/code\u003e : 结果，由\u003ca href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/HttpStatus.Series.html\"\u003eHttpStatus.Series\u003c/a\u003e分类。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estatus\u003c/code\u003e : 返回给客户端的请求的HTTP状态。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehttpStatusCode\u003c/code\u003e : 返回给客户端的请求的HTTP状态。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehttpMethod\u003c/code\u003e : 请求使用的HTTP方法。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这些指标可以从\u003ccode\u003e/actuator/metrics/gateway.requests\u003c/code\u003e中获取，并可以很容易地与Prometheus集成，创建一个\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/images/gateway-grafana-dashboard.jpeg\"\u003eGrafana\u003c/a\u003e \u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/gateway-grafana-dashboard.json\"\u003e仪表盘\u003c/a\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e要启用Prometheus端点，请添加\u003ccode\u003emicrometer-registry-prometheus\u003c/code\u003e作为项目依赖。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"79-marking-an-exchange-as-routed\"\u003e7.9. Marking An Exchange As Routed\u003c/h3\u003e\n\u003cp\u003e在网关路由了一个\u003ccode\u003eServerWeb Exchange\u003c/code\u003e后，它通过在exchange attributes中添加\u003ccode\u003egatewayAlreadyRouted\u003c/code\u003e来标记该交换为 \u0026ldquo;routed\u0026rdquo;。一旦一个请求被标记为已路由，其他的路由过滤器将不再对该请求进行路由，基本上是跳过该过滤器。有一些方便的方法，你可以用来标记一个交换为路由，或者检查一个交换是否已经被路由。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eServerWebExchangeUtils.isAlreadyRouted\u003c/code\u003e接收一个\u003ccode\u003eServerWebExchange\u003c/code\u003e对象并检查它是否已经被 \u0026ldquo;routed\u0026rdquo;。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eServerWebExchangeUtils.setAlreadyRouted\u003c/code\u003e接收一个\u003ccode\u003eServerWebExchange\u003c/code\u003e对象并将其标记为 \u0026ldquo;routed\u0026rdquo;。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"8-httpheadersfilters\"\u003e8. HttpHeadersFilters\u003c/h2\u003e\n\u003cp\u003eHttpHeadersFilters在向下游发送请求之前被应用于请求，例如在NettyRoutingFilter。\u003c/p\u003e\n\u003ch3 id=\"81-forwarded-headers-filter\"\u003e8.1. Forwarded Headers Filter\u003c/h3\u003e\n\u003cp\u003eForwarded Headers Filter创建一个Forwarded header来发送给下游的服务。它将当前请求的主机头、方案和端口添加到任何现有的转发头中。\u003c/p\u003e\n\u003ch3 id=\"82-removehopbyhop-headers-filter\"\u003e8.2. RemoveHopByHop Headers Filter\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRemoveHopByHop Headers Filter\u003c/code\u003e 从转发的请求中删除头信息。被移除的默认头信息列表来自\u003ca href=\"https://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging-14#section-7.1.3\"\u003eIETF\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e默认删除的header是:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eConnection\u003c/li\u003e\n\u003cli\u003eKeep-Alive\u003c/li\u003e\n\u003cli\u003eProxy-Authenticate\u003c/li\u003e\n\u003cli\u003eProxy-Authorization\u003c/li\u003e\n\u003cli\u003eTE\u003c/li\u003e\n\u003cli\u003eTrailer\u003c/li\u003e\n\u003cli\u003eTransfer-Encoding\u003c/li\u003e\n\u003cli\u003eUpgrade\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e要改变这一点，请将\u003ccode\u003espring.cloud.gateway.filter.remove-hop-by-hop.headers\u003c/code\u003e属性设置为要删除的头名称列表。\u003c/p\u003e\n\u003ch3 id=\"83-xforwarded-headers-filter\"\u003e8.3. XForwarded Headers Filter\u003c/h3\u003e\n\u003cp\u003eXForwarded Headers Filter创建各种\u003ccode\u003eX-Forwarded-*\u003c/code\u003e头，以发送到下游服务。它使用当前请求的Host头、方案、端口和路径来创建各种头。\u003c/p\u003e\n\u003cp\u003e创建各个头信息可以由以下布尔属性控制（默认为true）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.for-enabled\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.host-enabled\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.port-enabled\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.proto-enabled\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.prefix-enabled\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e附加多个header可以由以下布尔属性控制（默认为真）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.for-append\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.host-append\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.port-append\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.proto-append\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.prefix-append\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"9-tls-and-ssl\"\u003e9. TLS and SSL\u003c/h2\u003e\n\u003cp\u003e网关可以通过遵循通常的Spring服务器配置来监听HTTPS请求。下面的例子显示了如何做到这一点。\u003c/p\u003e\n\u003cp\u003eExample 58. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-alias\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003escg\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003escg1234\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eclasspath:scg-keystore.p12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以将网关路由到HTTP和HTTPS后端。如果你要路由到HTTPS后端，你可以通过以下配置将网关配置为信任所有下游的证书。\u003c/p\u003e\n\u003cp\u003eExample 59. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euseInsecureTrustManager\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用不安全的信任管理器不适合于生产。对于生产部署，你可以用一组已知的证书来配置网关，它可以通过以下配置来信任。\u003c/p\u003e\n\u003cp\u003eExample 60. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etrustedX509Certificates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"l\"\u003ecert1.pem\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"l\"\u003ecert2.pem\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果Spring Cloud Gateway没有配置受信任的证书，就会使用默认的信任存储（你可以通过设置\u003ccode\u003ejavax.net.ssl.trustStore\u003c/code\u003e系统属性来覆盖它）。\u003c/p\u003e\n\u003ch3 id=\"91-tls-handshake\"\u003e9.1. TLS Handshake\u003c/h3\u003e\n\u003cp\u003e网关维护着一个客户端池，它用来路由到后端。当通过HTTPS进行通信时，客户端发起了一个TLS握手。一些超时与这个握手相关。你可以对这些超时进行配置（默认值显示），如下。\u003c/p\u003e\n\u003cp\u003eExample 61. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ehandshake-timeout-millis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eclose-notify-flush-timeout-millis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e3000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eclose-notify-read-timeout-millis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"10-configuration\"\u003e10. Configuration\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Gateway的配置是由\u003ccode\u003eRouteDefinitionLocator\u003c/code\u003e实例的集合驱动的。下面的列表显示了\u003ccode\u003eRouteDefinitionLocator\u003c/code\u003e接口的定义。\u003c/p\u003e\n\u003cp\u003eExample 62. RouteDefinitionLocator.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eRouteDefinitionLocator\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteDefinition\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetRouteDefinitions\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认情况下，\u003ccode\u003ePropertiesRouteDefinitionLocator\u003c/code\u003e通过使用Spring Boot的\u003ccode\u003e@ConfigurationProperties\u003c/code\u003e机制加载属性。\u003c/p\u003e\n\u003cp\u003e前面的配置例子都使用了一种快捷的符号，即使用位置参数而不是命名参数。下面的两个例子是等价的。\u003c/p\u003e\n\u003cp\u003eExample 63. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetstatus_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSetStatus\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e401\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetstatusshortcut_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetStatus=401\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于网关的某些用途来说，属性已经足够了，但一些生产用例会从外部来源（如数据库）加载配置中受益。未来的里程碑版本将有基于Spring数据存储库的\u003ccode\u003eRouteDefinitionLocator\u003c/code\u003e实现，如\u003ccode\u003eRedis\u003c/code\u003e、\u003ccode\u003eMongoDB\u003c/code\u003e和\u003ccode\u003eCassandra\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"11-route-metadata-configuration\"\u003e11. Route Metadata Configuration\u003c/h2\u003e\n\u003cp\u003e你可以通过使用元数据为每个途径配置额外的参数，如下所示。\u003c/p\u003e\n\u003cp\u003eExample 64. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eroute_with_metadata\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eoptionName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;OptionValue\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ecompositeObject\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eiAmNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以从一个exchange所获取所有的元数据属性，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRoute\u003c/span\u003e \u003cspan class=\"n\"\u003eroute\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetAttribute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eGATEWAY_ROUTE_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// get all metadata properties\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetMetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// get a single metadata property\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetMetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esomeKey\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"12-http-timeouts-configuration\"\u003e12. Http timeouts configuration\u003c/h2\u003e\n\u003cp\u003e可以为所有路由配置Http超时（响应和连接），也可以为每个特定的路由重写。\u003c/p\u003e\n\u003ch3 id=\"121-全局超时\"\u003e12.1. 全局超时\u003c/h3\u003e\n\u003cp\u003e要配置全局http超时。\n\u003ccode\u003econnect-timeout\u003c/code\u003e 必须以毫秒为单位指定。\n\u003ccode\u003eresponse-timeout\u003c/code\u003e 必须以\u003ccode\u003ejava.time.Duration\u003c/code\u003e的形式指定。\u003c/p\u003e\n\u003cp\u003e全局超时\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003econnect-timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eresponse-timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e5s\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"122-每个路由的超时\"\u003e12.2. 每个路由的超时\u003c/h3\u003e\n\u003cp\u003e要配置每个路由的超时。\n\u003ccode\u003econnect-timeout\u003c/code\u003e必须以毫秒为单位指定。\n\u003ccode\u003eresponse-timeout\u003c/code\u003e 必须以毫秒为单位指定。\u003c/p\u003e\n\u003cp\u003e通过yaml配置每个路由的超时\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-YAML\" data-lang=\"YAML\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eper_route_timeouts\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePath\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/delay/{timeout}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eresponse-timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e200\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003econnect-timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e200\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用Java DSL配置每个路由的超时\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003eimport static\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.cloud.gateway.support.RouteMetadataUtils.CONNECT_TIMEOUT_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport static\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.cloud.gateway.support.RouteMetadataUtils.RESPONSE_TIMEOUT_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n      \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomRouteLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003erouteBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e){\u003c/span\u003e\n         \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erouteBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n               \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*.somehost.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eand\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/somepath\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddRequestHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;header1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;header-value-1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://someuri\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRESPONSE_TIMEOUT_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCONNECT_TIMEOUT_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n               \u003cspan class=\"o\"\u003e})\u003c/span\u003e\n               \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"123-fluent-java-routes-api\"\u003e12.3. Fluent Java Routes API\u003c/h3\u003e\n\u003cp\u003e为了允许在Java中进行简单的配置，RouteLocatorBuilder Bean包括一个fluent的API。下面的列表显示了它是如何工作的。\u003c/p\u003e\n\u003cp\u003eExample 65. GatewaySampleApplication.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// static imports from GatewayFilters and RoutePredicates\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomRouteLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eThrottleGatewayFilterFactory\u003c/span\u003e \u003cspan class=\"n\"\u003ethrottle\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;**.abc.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eand\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/image/png\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddResponseHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;X-TestHeader\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;foobar\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://httpbin.org:80\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/image/webp\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddResponseHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;X-AnotherHeader\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;baz\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://httpbin.org:80\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eorder\u003c/span\u003e\u003cspan class=\"o\"\u003e(-\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;**.throttle.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eand\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/get\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethrottle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003eTimeUnit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSECONDS\u003c/span\u003e\u003cspan class=\"o\"\u003e)))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://httpbin.org:80\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这种风格也允许更多的自定义谓词断言。由\u003ccode\u003eRouteDefinitionLocator\u003c/code\u003e Bean定义的谓词使用逻辑上的和来组合。通过使用流畅的Java API，你可以在\u003ccode\u003ePredicate\u003c/code\u003e类上使用\u003ccode\u003eand()\u003c/code\u003e、\u003ccode\u003eor()\u003c/code\u003e和\u003ccode\u003enegate()\u003c/code\u003e操作符。\u003c/p\u003e\n\u003ch3 id=\"124-the-discoveryclient-route-definition-locator\"\u003e12.4. The DiscoveryClient Route Definition Locator\u003c/h3\u003e\n\u003cp\u003e你可以将网关配置为基于在\u003ccode\u003eDiscoveryClient\u003c/code\u003e兼容的服务注册中心注册的服务来创建路由。\u003c/p\u003e\n\u003cp\u003e要启用这一点，请设置\u003ccode\u003espring.cloud.gateway.discovery.locator.enabled=true\u003c/code\u003e，并确保\u003ccode\u003eDiscoveryClien\u003c/code\u003et`实现（如Netflix Eureka、Consul或Zookeeper）位于classpath上并已启用。\u003c/p\u003e\n\u003ch4 id=\"1241-为discoveryclient路由配置谓词和过滤器\"\u003e12.4.1. 为DiscoveryClient路由配置谓词和过滤器\u003c/h4\u003e\n\u003cp\u003e默认情况下，网关为用\u003ccode\u003eDiscoveryClient\u003c/code\u003e创建的路由定义了一个谓词和过滤器。\u003c/p\u003e\n\u003cp\u003e默认谓词是用\u003ccode\u003e/serviceId/**\u003c/code\u003e模式定义的路径谓词，其中\u003ccode\u003eserviceId\u003c/code\u003e是来自\u003ccode\u003eDiscoveryClient\u003c/code\u003e的服务的ID。\u003c/p\u003e\n\u003cp\u003e默认过滤器是一个重写路径过滤器，采用重写词\u003ccode\u003e/serviceId/?(?\u0026lt;remaining\u0026gt;.*)\u003c/code\u003e和替换词\u003ccode\u003e/${remaining}\u003c/code\u003e。在请求被发送到下游之前，这将从路径中剥离服务ID。\u003c/p\u003e\n\u003cp\u003e如果你想自定义\u003ccode\u003eDiscoveryClient\u003c/code\u003e路由使用的谓词或过滤器，请设置\u003ccode\u003espring.cloud.gateway.discovery.locator.predicates[x]\u003c/code\u003e 和 \u003ccode\u003espring.cloud.gateway.discovery.locator.filters[y]\u003c/code\u003e。这样做时，如果你想保留该功能，你需要确保包括前面显示的默认谓词和过滤器。下面的例子显示了这是什么样子。\u003c/p\u003e\n\u003cp\u003eExample 66. application.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.gateway.discovery.locator.predicates[0].name: Path\nspring.cloud.gateway.discovery.locator.predicates[0].args[pattern]: \u0026#34;\u0026#39;/\u0026#39;+serviceId+\u0026#39;/**\u0026#39;\u0026#34;\nspring.cloud.gateway.discovery.locator.predicates[1].name: Host\nspring.cloud.gateway.discovery.locator.predicates[1].args[pattern]: \u0026#34;\u0026#39;**.foo.com\u0026#39;\u0026#34;\nspring.cloud.gateway.discovery.locator.filters[0].name: CircuitBreaker\nspring.cloud.gateway.discovery.locator.filters[0].args[name]: serviceId\nspring.cloud.gateway.discovery.locator.filters[1].name: RewritePath\nspring.cloud.gateway.discovery.locator.filters[1].args[regexp]: \u0026#34;\u0026#39;/\u0026#39; + serviceId + \u0026#39;/?(?\u0026lt;remaining\u0026gt;.*)\u0026#39;\u0026#34;\nspring.cloud.gateway.discovery.locator.filters[1].args[replacement]: \u0026#34;\u0026#39;/${remaining}\u0026#39;\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"13-reactor-netty-访问日志\"\u003e13. Reactor Netty 访问日志\u003c/h2\u003e\n\u003cp\u003e要启用 Reactor Netty 访问日志，设置 \u003ccode\u003e-Dreactor.netty.http.server.accessLogEnabled=true\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e它必须是一个Java系统属性，而不是一个Spring Boot属性。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你可以配置日志系统，使其有一个单独的访问日志文件。下面的例子创建了一个Logback配置。\u003c/p\u003e\n\u003cp\u003eExample 67. logback.xml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;accessLog\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.FileAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;file\u0026gt;\u003c/span\u003eaccess_log.log\u003cspan class=\"nt\"\u003e\u0026lt;/file\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;encoder\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e%msg%n\u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/encoder\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;async\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.classic.AsyncAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;appender-ref\u003c/span\u003e \u003cspan class=\"na\"\u003eref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;accessLog\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"nt\"\u003e\u0026lt;logger\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;reactor.netty.http.server.AccessLog\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003elevel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;INFO\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eadditivity=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;false\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;appender-ref\u003c/span\u003e \u003cspan class=\"na\"\u003eref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;async\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/logger\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"14-cors-跨域配置\"\u003e14. CORS 跨域配置\u003c/h2\u003e\n\u003cp\u003e你可以配置网关来控制CORS行为。全局CORS配置是URL模式与\u003ca href=\"https://docs.spring.io/spring/docs/5.0.x/javadoc-api/org/springframework/web/cors/CorsConfiguration.html\"\u003eSpring Framework \u003ccode\u003eCorsConfiguration\u003c/code\u003e\u003c/a\u003e的映射。下面的例子配置了CORS。\u003c/p\u003e\n\u003cp\u003eExample 68. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eglobalcors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecors-configurations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#39;[/**]\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eallowedOrigins\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://docs.spring.io\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eallowedMethods\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"l\"\u003eGET\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的例子中，对于所有 GET 请求路径，允许来自 \u003ccode\u003edocs.spring.io\u003c/code\u003e 的请求的 CORS 请求。\u003c/p\u003e\n\u003cp\u003e要为未被某些网关路由谓词处理的请求提供相同的 CORS 配置，请将 s\u003ccode\u003epring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping\u003c/code\u003e 属性设置为 \u003ccode\u003etrue\u003c/code\u003e。当你试图支持 CORS 预检请求，而你的路由谓词因为 HTTP 方法是选项而不能评估为 true 时，这很有用。\u003c/p\u003e\n\u003ch2 id=\"15-actuator-api\"\u003e15. Actuator API\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003e/gateway\u003c/code\u003e执行器端点可以让你监控并与Spring Cloud Gateway应用互动。要进行远程访问，端点必须在应用程序属性中\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-endpoints-enabling-endpoints\"\u003e启用\u003c/a\u003e和\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-endpoints-exposing-endpoints\"\u003e通过HTTP或JMX暴露\u003c/a\u003e。下面的列表显示了如何做到这一点。\u003c/p\u003e\n\u003cp\u003eExample 69. application.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003emanagement.endpoint.gateway.enabled=true # default value\nmanagement.endpoints.web.exposure.include=gateway\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"151-verbose-actuator-format\"\u003e15.1. Verbose Actuator Format\u003c/h3\u003e\n\u003cp\u003e在Spring Cloud Gateway中增加了一种新的、更粗略的格式。它为每个路由添加了更多细节，让你查看与每个路由相关的谓词和过滤器，以及任何可用的配置。下面的例子配置了\u003ccode\u003e/actuator/gateway/routes\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;predicate\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;(Hosts: [**.addrequestheader.org] \u0026amp;\u0026amp; Paths: [/headers], match trailing slash: true)\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;route_id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;add_request_header_test\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;filters\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;[[AddResponseHeader X-Response-Default-Foo = \u0026#39;Default-Bar\u0026#39;], order = 1]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;[[AddRequestHeader X-Request-Foo = \u0026#39;Bar\u0026#39;], order = 1]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;[[PrefixPath prefix = \u0026#39;/httpbin\u0026#39;], order = 2]\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;uri\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;lb://testservice\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;order\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个功能默认是启用的。要禁用它，请设置以下属性。\u003c/p\u003e\n\u003cp\u003eExample 70. application.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.gateway.actuator.verbose.enabled=false\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在未来的版本中，这将默认为\u003ccode\u003etrue\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"152-retrieving-route-filters\"\u003e15.2. Retrieving Route Filters\u003c/h3\u003e\n\u003cp\u003e本节详细介绍了如何检索路由过滤器，包括。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-global-filters\"\u003eGlobal Filters\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-route-filters\"\u003e[gateway-route-filters]\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"1521-global-filters\"\u003e15.2.1. Global Filters\u003c/h4\u003e\n\u003cp\u003e要检索应用于所有路由的\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#global-filters\"\u003e全局过滤器\u003c/a\u003e，向\u003ccode\u003e/actuator/gateway/globalfilters\u003c/code\u003e发出\u003ccode\u003eGET\u003c/code\u003e请求。得到的响应类似于以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@77856cc5\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e10100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@4f6fd101\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@32d22650\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e-1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.ForwardRoutingFilter@106459d9\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2147483647\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.NettyRoutingFilter@1fbd5e0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2147483647\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.ForwardPathFilter@33a71d23\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@135064ea\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2147483637\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@23c05889\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2147483646\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e响应包含全局过滤器的细节，这些过滤器已经到位。对于每个全局过滤器，有一个过滤器对象的字符串表示（例如，\u003ccode\u003eorg.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@77856cc5\u003c/code\u003e）和过滤器链中相应的\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-combined-global-filter-and-gatewayfilter-ordering\"\u003eorder\u003c/a\u003e。 }。\u003c/p\u003e\n\u003ch4 id=\"1522-route-filters\"\u003e15.2.2. Route Filters\u003c/h4\u003e\n\u003cp\u003e要检索应用于路由的\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e工厂\u003c/a\u003e，向\u003ccode\u003e/actuator/gateway/routefilters\u003c/code\u003e发出\u003ccode\u003eGET\u003c/code\u003e请求。得到的响应类似于以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;[AddRequestHeaderGatewayFilterFactory@570ed9c configClass = AbstractNameValueGatewayFilterFactory.NameValueConfig]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;[SecureHeadersGatewayFilterFactory@fceab5d configClass = Object]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;[SaveSessionGatewayFilterFactory@4449b273 configClass = Object]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e响应包含应用于任何特定路由的\u003ccode\u003eGatewayFilter\u003c/code\u003e工厂的细节。对于每个工厂，有一个相应对象的字符串表示（例如，\u003ccode\u003e[SecureHeadersGatewayFilterFactory@fceab5d configClass = Object]\u003c/code\u003e）。请注意，\u003ccode\u003enull\u003c/code\u003e 是由于端点控制器的不完整实现，因为它试图设置过滤器链中的对象的顺序，这不适用于\u003ccode\u003eGatewayFilter\u003c/code\u003e工厂对象。\u003c/p\u003e\n\u003ch3 id=\"153-刷新路由缓存\"\u003e15.3. 刷新路由缓存\u003c/h3\u003e\n\u003cp\u003e要清除路由缓存，请向\u003ccode\u003e/actuator/gateway/refresh\u003c/code\u003e发出一个\u003ccode\u003ePOST\u003c/code\u003e请求。该请求返回一个200，没有响应体。\u003c/p\u003e\n\u003ch3 id=\"154-检索网关中定义的路由\"\u003e15.4. 检索网关中定义的路由\u003c/h3\u003e\n\u003cp\u003e要检索网关中定义的路由，请向\u003ccode\u003e/actuator/gateway/routes\u003c/code\u003e发出\u003ccode\u003eGET\u003c/code\u003e请求。得到的响应类似于以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e[{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;route_id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;first_route\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;route_object\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;predicate\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory$$Lambda$432/1736826640@1e9d7e7d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;filters\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;OrderedGatewayFilter{delegate=org.springframework.cloud.gateway.filter.factory.PreserveHostHeaderGatewayFilterFactory$$Lambda$436/674480275@6631ef72, order=0}\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;order\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;route_id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;second_route\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;route_object\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;predicate\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory$$Lambda$432/1736826640@cd8d298\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;filters\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;order\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e响应包含网关中定义的所有路由的详细信息。下表描述了响应中每个元素的结构（每个都是一个路由）。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroute_id\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eString\u003c/td\u003e\n\u003ctd\u003e路由ID\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroute_object.predicate\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eObject\u003c/td\u003e\n\u003ctd\u003e路由 predicate\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroute_object.filters\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eArray\u003c/td\u003e\n\u003ctd\u003e应用于路由的\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e工厂\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eorder\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumber\u003c/td\u003e\n\u003ctd\u003e路由 order\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"155-检索指定路由的信息\"\u003e15.5. 检索指定路由的信息\u003c/h3\u003e\n\u003cp\u003e要检索一条路由的信息，请向\u003ccode\u003e/actuator/gateway/routes/{id}\u003c/code\u003e发出一个GET请求。(例如，\u003ccode\u003e/actuator/gateway/routes/first_route)\u003c/code\u003e。得到的响应类似于下面的内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;first_route\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;predicates\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Path\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;args\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#34;_genkey_0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/first\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}],\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;filters\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;uri\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://www.uri-destination.org\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;order\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下表描述了响应的结构。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eString\u003c/td\u003e\n\u003ctd\u003e路由ID\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003epredicates\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eArray\u003c/td\u003e\n\u003ctd\u003e路由谓词的集合。每一项都定义了一个给定谓词的名称和参数。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003efilters\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eArray\u003c/td\u003e\n\u003ctd\u003e应用于路由的过滤器集合。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eString\u003c/td\u003e\n\u003ctd\u003e路由的目的地URI。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eorder\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumber\u003c/td\u003e\n\u003ctd\u003e路由的顺序\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"156-创建和删除一个指定的路由\"\u003e15.6. 创建和删除一个指定的路由\u003c/h3\u003e\n\u003cp\u003e要创建一个路由，请向\u003ccode\u003e/gateway/routes/{id_route_to_create}\u003c/code\u003e发出\u003ccode\u003ePOST\u003c/code\u003e请求，并以JSON为主体指定路由的字段（见\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-retrieving-information-about-a-particular-route\"\u003e检索特定路由的信息\u003c/a\u003e）。\u003c/p\u003e\n\u003cp\u003e要删除一个路由，请向\u003ccode\u003e/gateway/routes/{id_route_to_delete}\u003c/code\u003e发出\u003ccode\u003eDELETE\u003c/code\u003e请求。\u003c/p\u003e\n\u003ch3 id=\"157-总结所有端点的清单\"\u003e15.7. 总结：所有端点的清单\u003c/h3\u003e\n\u003cp\u003e下面的表格总结了Spring Cloud Gateway的执行器端点（注意，每个端点都有\u003ccode\u003e/actuator/gateway\u003c/code\u003e作为基本路径）。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eID\u003c/th\u003e\n\u003cth\u003eHTTP Method\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eglobalfilters\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e显示应用于路由的全局过滤器的列表。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutefilters\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e显示应用于特定路由的 \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂的列表。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003erefresh\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e清楚路由缓存\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutes\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003eD显示网关中定义的路由列表\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutes/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e显示指定路由的详细信息\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutes/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e添加一个新的路由到网关\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutes/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e从网关删除一个路由\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"16-故障排除\"\u003e16. 故障排除\u003c/h2\u003e\n\u003cp\u003e本节涵盖了你在使用Spring Cloud Gateway时可能出现的常见问题。\u003c/p\u003e\n\u003ch3 id=\"161-日志级别\"\u003e16.1. 日志级别\u003c/h3\u003e\n\u003cp\u003e在\u003ccode\u003eDEBUG\u003c/code\u003e和\u003ccode\u003eTRACE\u003c/code\u003e级别，以下记录器可能包含有价值的故障排除信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud.gateway\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.http.server.reactive\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.web.reactive\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.boot.autoconfigure.web\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereactor.netty\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eredisratelimiter\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"162-wiretap\"\u003e16.2. Wiretap\u003c/h3\u003e\n\u003cp\u003eReactor Netty的HttpClient和HttpServer可以启用wiretap。当与 reactor.netty 日志级别设置为 DEBUG 或 TRACE 相结合时，它能够记录信息，例如通过线路发送和接收的头信息和正文。要启用 wiretap，请分别为 HttpServer 和 HttpClient 设置 \u003ccode\u003espring.cloud.gateway.httpserver.wiretap=true\u003c/code\u003e 或 \u003ccode\u003espring.cloud.gateway.httpclient.wiretap=true\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"17-开发者指南\"\u003e17. 开发者指南\u003c/h2\u003e\n\u003cp\u003e这些是编写网关的一些自定义组件的基本指南。\u003c/p\u003e\n\u003ch3 id=\"171-编写自定义路由谓语工厂\"\u003e17.1. 编写自定义路由谓语工厂\u003c/h3\u003e\n\u003cp\u003e为了编写一个Route Predicate，你将需要实现\u003ccode\u003eRoutePredicateFactory\u003c/code\u003e。有一个抽象的类叫做\u003ccode\u003eAbstractRoutePredicateFactory\u003c/code\u003e，你可以扩展它。\u003c/p\u003e\n\u003cp\u003eMyRoutePredicateFactory.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyRoutePredicateFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eAbstractRoutePredicateFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eHeaderRoutePredicateFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eMyRoutePredicateFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003ePredicate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eServerWebExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// grab configuration from Config object\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//grab the request\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003eServerHttpRequest\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//take information from the request to see if it\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"c1\"\u003e//matches configuration.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ematches\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//Put the configuration properties for your filter here\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"172-编写自定义gatewayfilter工厂\"\u003e17.2. 编写自定义GatewayFilter工厂\u003c/h3\u003e\n\u003cp\u003e要写一个\u003ccode\u003eGatewayFilter\u003c/code\u003e，你必须实现\u003ccode\u003eGatewayFilterFactory\u003c/code\u003e。你可以扩展一个名为\u003ccode\u003eAbstractGatewayFilterFactory\u003c/code\u003e的抽象类。下面的例子展示了如何做到这一点。\u003c/p\u003e\n\u003cp\u003eExample 71. PreGatewayFilterFactory.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePreGatewayFilterFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eAbstractGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ePreGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003ePreGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGatewayFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// grab configuration from Config object\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//If you want to build a \u0026#34;pre\u0026#34; filter you need to manipulate the\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"c1\"\u003e//request before calling chain.filter\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003eServerHttpRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003emutate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//use builder to manipulate the request\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emutate\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e()).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//Put the configuration properties for your filter here\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePostGatewayFilterFactory.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePostGatewayFilterFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eAbstractGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ePostGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003ePostGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGatewayFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// grab configuration from Config object\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ethen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efromRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eServerHttpResponse\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e//Manipulate the response in some way\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"o\"\u003e}));\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//Put the configuration properties for your filter here\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"1721-在配置中命名自定义过滤器和引用\"\u003e17.2.1. 在配置中命名自定义过滤器和引用\u003c/h4\u003e\n\u003cp\u003e自定义过滤器的类名应该以\u003ccode\u003eGatewayFilterFactory\u003c/code\u003e结尾。\u003c/p\u003e\n\u003cp\u003e例如，要在配置文件中引用一个名为\u003ccode\u003eSomething\u003c/code\u003e的过滤器，该过滤器必须在一个名为\u003ccode\u003eSomethingGatewayFilterFactory\u003c/code\u003e的类中。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e可以创建一个没有\u003ccode\u003eGatewayFilterFactory\u003c/code\u003e后缀的网关过滤器，如\u003ccode\u003eAnotherThing\u003c/code\u003e类。这个过滤器可以在配置文件中被引用为\u003ccode\u003eAnotherThing\u003c/code\u003e。这不是一个被支持的命名惯例，这种语法可能在未来的版本中被删除。请更新过滤器的名称，使其符合要求。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"173-writing-custom-global-filters\"\u003e17.3. Writing Custom Global Filters\u003c/h3\u003e\n\u003cp\u003e要编写一个自定义的全局过滤器，你必须实现\u003ccode\u003eGlobalFilter\u003c/code\u003e接口。这将过滤器应用于所有的请求。\u003c/p\u003e\n\u003cp\u003e下面的例子分别展示了如何设置全局前置和后置过滤器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGlobalFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomGlobalFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetPrincipal\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePrincipal\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egetName\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edefaultIfEmpty\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Default User\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euserName\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e//adds header to proxied request\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003emutate\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eheader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;CUSTOM-REQUEST-HEADER\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euserName\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e})\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eflatMap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGlobalFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomGlobalPostFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserverWebExchange\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e//adds header to response\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"n\"\u003eserverWebExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetHeaders\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;CUSTOM-RESPONSE-HEADER\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n              \u003cspan class=\"n\"\u003eHttpStatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eOK\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserverWebExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetStatusCode\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;It worked\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;It did not work\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eserverWebExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e})\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethen\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"18-通过使用spring-mvc或webflux构建一个简单的网关\"\u003e18. 通过使用Spring MVC或Webflux构建一个简单的网关\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e下面描述的是另一种风格的网关。之前的文档都不适用于下面的内容。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSpring Cloud Gateway提供了一个名为\u003ccode\u003eProxyExchange\u003c/code\u003e的实用对象。你可以在常规的Spring网络处理程序中作为一个方法参数使用它。它通过反映HTTP动词的方法支持基本的下游HTTP交换。在MVC中，它还支持通过\u003ccode\u003eforward()\u003c/code\u003e方法转发到本地处理程序。要使用\u003ccode\u003eProxyExchange\u003c/code\u003e，在你的classpath中包含正确的模块（\u003ccode\u003espring-cloud-gateway-mvc或spring-cloud-gateway-webflux\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e下面的MVC例子将一个到/test的请求代理到一个远程服务器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eGatewaySampleApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Value\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${remote.home}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eURI\u003c/span\u003e \u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/image/png\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子用Webflux做同样的事情。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eGatewaySampleApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Value\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${remote.home}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eURI\u003c/span\u003e \u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/image/png\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eProxyExchange\u003c/code\u003e上的便利方法使处理方法能够发现并增强传入请求的URI路径。例如，你可能想提取路径的尾部元素，将它们传递到下游。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/proxy/path/**\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxyPath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/proxy/path/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/foos/\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSpring MVC和Webflux的所有功能都可用于网关处理方法。因此，你可以注入请求头和查询参数，例如，你可以通过映射注解中的声明来限制传入的请求。关于这些功能的更多细节，请参见Spring MVC中\u003ccode\u003e@RequestMapping\u003c/code\u003e的文档。\u003c/p\u003e\n\u003cp\u003e你可以通过使用\u003ccode\u003eProxyExchange\u003c/code\u003e上的\u003ccode\u003eheader()\u003c/code\u003e方法向下游响应添加头信息。\u003c/p\u003e\n\u003cp\u003e你也可以通过给\u003ccode\u003eget()\u003c/code\u003e方法（和其他方法）添加一个映射器来操作响应头（以及响应中你喜欢的其他东西）。映射器是一个 \u0026ldquo;函数\u0026rdquo;，它接收传入的 \u0026ldquo;ResponseEntity \u0026ldquo;并将其转换为传出的。\u003c/p\u003e\n\u003cp\u003e对 \u0026ldquo;敏感 \u0026ldquo;头信息（默认情况下，\u003ccode\u003ecookie\u003c/code\u003e和\u003ccode\u003eauthorization\u003c/code\u003e）提供一流的支持，这些头信息不会向下游传递，对 \u0026ldquo;代理\u0026rdquo;（\u003ccode\u003ex-forwarded-*\u003c/code\u003e）头信息也是如此。\u003c/p\u003e\n\u003ch2 id=\"19-配置属性\"\u003e19. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有与Spring Cloud Gateway相关的配置属性列表，请参见\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/appendix.html\"\u003e附录\u003c/a\u003e。\u003c/p\u003e\n"
      },
    {
        id: 6,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-kubernetes/",
        title: "Spring Cloud Kubernetes",
        description: "Spring Cloud Kubernetes提供了众所周知的Spring Cloud接口的实现，允许开发者在Kubernetes上构建和运行Spring Cloud应用。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：2.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月24日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-projects/spring-cloud\"\u003ehttps://github.com/spring-projects/spring-cloud\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1-为什么需要spring-cloud-kubernetes\"\u003e1. 为什么需要Spring Cloud Kubernetes？\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Kubernetes提供了众所周知的Spring Cloud接口的实现，允许开发者在Kubernetes上构建和运行Spring Cloud应用。虽然这个项目在构建云原生应用时可能对你有用，但它也不是在Kubernetes上部署Spring Boot应用的必要条件。如果你刚刚开始在Kubernetes上运行你的Spring Boot应用，你只需要一个基本的Spring Boot应用和Kubernetes本身就可以完成很多事情。要想了解更多，你可以通过阅读\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#cloud-deployment-kubernetes\"\u003eSpring Boot部署到Kubernetes的参考文档\u003c/a\u003e，以及通过研讨会材料\u003ca href=\"https://hackmd.io/@ryanjbaxter/spring-on-k8s-workshop\"\u003eSpring和Kubernetes\u003c/a\u003e来开始。\u003c/p\u003e\n\u003ch2 id=\"2-starters\"\u003e2. Starters\u003c/h2\u003e\n\u003cp\u003eStarters是方便的依赖性描述符，你可以在你的应用程序中包含它。包括一个starter，以获得功能集的依赖性和Spring Boot自动配置。以\u003ccode\u003espring-cloud-starter-kubernetes-fabric8\u003c/code\u003e开头的启动器提供了使用\u003ca href=\"https://github.com/fabric8io/kubernetes-client\"\u003eFabric8 Kubernetes Java Client\u003c/a\u003e的实现。以\u003ccode\u003espring-cloud-starter-kubernetes-client\u003c/code\u003e开头的启动器提供了使用\u003ca href=\"https://github.com/kubernetes-client/java\"\u003eKubernetes Java Client\u003c/a\u003e的实现。\u003c/p\u003e\n\u003ch3 id=\"21-服务发实\"\u003e2.1. 服务发实\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-client\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#discoveryclient-for-kubernetes\"\u003eDiscovery Client\u003c/a\u003e实现，将服务名称解析为Kubernetes服务。\u003c/p\u003e\n\u003ch3 id=\"22-配置中心\"\u003e2.2. 配置中心\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-client-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从Kubernetes\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#configmap-propertysource\"\u003eConfigMaps\u003c/a\u003e和\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#secrets-propertysource\"\u003eSecrets\u003c/a\u003e加载应用属性。当ConfigMap或Secret发生变化时，\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#propertysource-reload\"\u003e重新加载\u003c/a\u003e应用程序属性。\u003c/p\u003e\n\u003ch3 id=\"23-所有spring-cloud-kubernetes功能\"\u003e2.3. 所有Spring Cloud Kubernetes功能。\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8-all\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-client-all\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-用于kubernetes的discoveryclient\"\u003e3. 用于Kubernetes的DiscoveryClient\u003c/h2\u003e\n\u003cp\u003e该项目为\u003ca href=\"https://kubernetes.io/\"\u003eKubernetes\u003c/a\u003e提供了\u003ca href=\"https://github.com/spring-cloud/spring-cloud-commons/blob/master/spring-cloud-commons/src/main/java/org/springframework/cloud/client/discovery/DiscoveryClient.java\"\u003eDiscovery Client\u003c/a\u003e的实现。这个客户端可以让你按名称查询Kubernetes端点（见\u003ca href=\"https://kubernetes.io/docs/user-guide/services/\"\u003eservices\u003c/a\u003e）。服务通常由Kubernetes API服务器公开，作为代表 \u003ccode\u003ehttp\u003c/code\u003e 和 \u003ccode\u003ehttps\u003c/code\u003e 地址的端点的集合，客户端可以从作为pod运行的Spring Boot应用程序中访问。\u003c/p\u003e\n\u003cp\u003e通过在你的项目中添加以下依赖关系，你可以免费获得这个东西。\u003c/p\u003e\n\u003cp\u003eFabric8 Kubernetes Client\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eKubernetes Java Client\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003edependency\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003egroupId\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eorg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espringframework\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecloud\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003egroupId\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eartifactId\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ecloud\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003estarter\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ekubernetes\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003eartifactId\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003edependency\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要启用\u003ccode\u003eDiscoveryClient\u003c/code\u003e的加载，请将\u003ccode\u003e@EnableDiscoveryClient\u003c/code\u003e添加到相应的配置或应用类中，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableDiscoveryClient\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如下面的例子所示，你可以简单地通过自装配将客户端注入你的代码中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eDiscoveryClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过在\u003ccode\u003eapplication.properties\u003c/code\u003e中设置以下属性来选择从所有命名空间启用\u003ccode\u003eDiscoveryClient\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.discovery.all-namespaces=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要发现未被kubernetes api服务器标记为 \u0026ldquo;ready\u0026rdquo; 的服务端点地址，可以在\u003ccode\u003eapplication.properties\u003c/code\u003e中设置以下属性（默认：\u003ccode\u003efalse\u003c/code\u003e）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.discovery.include-not-ready-addresses=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e这在为监控目的而发现服务时可能很有用，并能检查未准备好的服务实例的\u003ccode\u003e/health\u003c/code\u003e端点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你的服务暴露了多个端口，你将需要指定\u003ccode\u003eDiscoveryClient\u003c/code\u003e应该使用哪个端口。\u003ccode\u003eDiscoveryClient\u003c/code\u003e将使用以下逻辑选择端口。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e如果服务有一个标签\u003ccode\u003eprimary-port-name\u003c/code\u003e，它将使用标签值中指定名称的端口。\u003c/li\u003e\n\u003cli\u003e如果没有标签，那么将使用\u003ccode\u003espring.cloud.kubernetes.discovery.primary-port-name\u003c/code\u003e中指定的端口名称。\u003c/li\u003e\n\u003cli\u003e如果以上两者都没有指定，它将使用名为 \u003ccode\u003ehttps\u003c/code\u003e 的端口。\u003c/li\u003e\n\u003cli\u003e如果上述条件都不满足，它将使用名为 \u003ccode\u003ehttp\u003c/code\u003e 的端口。\u003c/li\u003e\n\u003cli\u003e作为最后手段，它将选择端口列表中的第一个端口。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003e最后一个选项可能会导致非确定性的行为。请确保对你的服务和/或应用程序进行相应的配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e默认情况下，所有的端口及其名称将被添加到\u003ccode\u003eServiceInstance\u003c/code\u003e的元数据中。\u003c/p\u003e\n\u003cp\u003e如果出于任何原因，你需要禁用\u003ccode\u003eDiscoveryClient\u003c/code\u003e，你可以在\u003ccode\u003eapplication.properties\u003c/code\u003e中设置以下属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.discovery.enabled=false\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一些Spring Cloud组件使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e，以获取本地服务实例的信息。要做到这一点，你需要将Kubernetes服务名称与\u003ccode\u003espring.application.name\u003c/code\u003e属性对齐。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003espring.application.name\u003c/code\u003e对于在Kubernetes中为应用程序注册的名称没有影响。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSpring Cloud Kubernetes还可以观察Kubernetes服务目录的变化，并相应地更新\u003ccode\u003eDiscoveryClient\u003c/code\u003e实现。为了启用这一功能，你需要在你的应用程序中的配置类上添加\u003ccode\u003e@EnableScheduling\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"4-kubernetes本地服务发现\"\u003e4. Kubernetes本地服务发现\u003c/h2\u003e\n\u003cp\u003eKubernetes本身能够进行（服务器端）服务发现（参见：\u003ca href=\"https://kubernetes.io/docs/concepts/services-networking/service/#discovering-services\"\u003ekubernetes.io/docs/concepts/services-networking/service/#discovering-services\u003c/a\u003e）。使用原生的kubernetes服务发现可以确保与其他工具的兼容性，例如Istio（\u003ca href=\"https://istio.io/\"\u003eistio.io\u003c/a\u003e），一个能够实现负载均衡、断路器、故障转移等功能的服务网。\u003c/p\u003e\n\u003cp\u003e然后，调用者服务只需要引用特定Kubernetes集群中可解析的名称。一个简单的实现可以使用一个指向完全合格域名（FQDN）的spring \u003ccode\u003eRestTemplate\u003c/code\u003e，例如\u003ccode\u003e{service-name}.{namespace}.svc.{cluster}.local:{service-port}\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e此外，你可以使用Hystrix进行熔断。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e通过在spring boot应用类中注解\u003ccode\u003e@EnableCircuitBreaker\u003c/code\u003e，在调用方实现熔断器。\u003c/li\u003e\n\u003cli\u003eFallback 功能，通过用\u003ccode\u003e@HystrixCommand(fallbackMethod=\u003c/code\u003e) 注释相应的方法。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"5-kubernetes-propertysource的实现\"\u003e5. Kubernetes PropertySource的实现\u003c/h2\u003e\n\u003cp\u003e配置Spring Boot应用程序的最常见方法是创建\u003ccode\u003eapplication.properties\u003c/code\u003e或\u003ccode\u003eapplication.yaml\u003c/code\u003e或\u003ccode\u003eapplication-profile.properties\u003c/code\u003e或\u003ccode\u003eapplication-profile.yaml\u003c/code\u003e文件，其中包含为应用程序或Spring Boot启动器提供定制值的键值对。你可以通过指定系统属性或环境变量来覆盖这些属性。\u003c/p\u003e\n\u003ch3 id=\"51-使用configmap-propertysource\"\u003e5.1. 使用ConfigMap PropertySource\u003c/h3\u003e\n\u003cp\u003eKubernetes提供了一个名为\u003ca href=\"https://kubernetes.io/docs/user-guide/configmap/\"\u003e\u003ccode\u003eConfigMap\u003c/code\u003e\u003c/a\u003e的资源，以键值对或嵌入的\u003ccode\u003eapplication.properties\u003c/code\u003e或\u003ccode\u003eapplication.yaml\u003c/code\u003e文件的形式将参数外化，传递给你的应用程序。\u003ca href=\"https://github.com/spring-cloud/spring-cloud-kubernetes/tree/master/spring-cloud-kubernetes-fabric8-config\"\u003eSpring Cloud Kubernetes Config\u003c/a\u003e项目使Kubernetes的\u003ccode\u003eConfigMap\u003c/code\u003e实例在应用启动过程中可用，并在发现观察到的\u003ccode\u003eConfigMap\u003c/code\u003e实例发生变化时，触发Bean或Spring上下文的热重载。\u003c/p\u003e\n\u003cp\u003e默认行为是基于Kubernete的\u003ccode\u003eConfigMap\u003c/code\u003e创建\u003ccode\u003eFabric8ConfigMapPropertySource\u003c/code\u003e，其\u003ccode\u003emetadata.name\u003c/code\u003e值为Spring应用程序的名称（由其\u003ccode\u003espring.application.name\u003c/code\u003e属性定义）或在\u003ccode\u003ebootstrap.properties\u003c/code\u003e文件中定义的自定义名称，键为：\u003ccode\u003espring.cloud.kubernetes.config.name\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e然而，更高级的配置是可能的，你可以使用多个\u003ccode\u003eConfigMap\u003c/code\u003e实例。\u003ccode\u003espring.cloud.kubernetes.config.sources\u003c/code\u003e列表使这成为可能。例如，你可以定义以下\u003ccode\u003eConfigMap\u003c/code\u003e实例。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecloud-k8s-app\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekubernetes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault-namespace\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003esources\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a ConfigMap named c1 in namespace default-namespace\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ec1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a ConfigMap named default-name in whatever namespace n2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003en2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a ConfigMap named c3 in namespace n3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003en3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e           \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ec3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的例子中，如果没有设置\u003ccode\u003espring.cloud.kubernetes.config.namespace\u003c/code\u003e，名为\u003ccode\u003ec1\u003c/code\u003e的\u003ccode\u003eConfigMap\u003c/code\u003e将在应用程序运行的命名空间中被查找。\u003c/p\u003e\n\u003cp\u003e找到的任何匹配的\u003ccode\u003eConfigMap\u003c/code\u003e将被处理如下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e应用单个配置属性。\u003c/li\u003e\n\u003cli\u003e将任何名为\u003ccode\u003eapplication.yaml\u003c/code\u003e的属性内容作为\u003ccode\u003eyaml\u003c/code\u003e应用。\u003c/li\u003e\n\u003cli\u003e将任何名为\u003ccode\u003eapplication.properties\u003c/code\u003e的属性内容作为一个属性文件应用。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e上述流程的唯一例外是，当\u003ccode\u003eConfigMap\u003c/code\u003e包含一个表明文件是YAML或属性文件的\u003cstrong\u003esingle\u003c/strong\u003e key时。在这种情况下，键的名称不必是\u003ccode\u003eapplication.yaml\u003c/code\u003e或\u003ccode\u003eapplication.properties\u003c/code\u003e（它可以是任何东西），并且属性的值被正确处理。这一特点有助于通过使用类似以下内容来创建\u003ccode\u003eConfigMap\u003c/code\u003e的用例。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl create configmap game-config --from-file\u003cspan class=\"o\"\u003e=\u003c/span\u003e/path/to/app-config.yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e假设我们有一个名为\u003ccode\u003edemo\u003c/code\u003e的Spring Boot应用程序，它使用以下属性来读取其线程池配置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e`pool.size.core\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epool.size.maximum\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这可以外化为\u003ccode\u003eyaml\u003c/code\u003e格式的config map，如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epool.size.core\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epool.size.max\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e16\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e单独的属性在大多数情况下都能正常工作。然而，有时，嵌入\u003ccode\u003eyaml\u003c/code\u003e更方便。在这种情况下，我们使用一个名为\u003ccode\u003eapplication.yaml\u003c/code\u003e的单一属性来嵌入我们的\u003ccode\u003eyaml\u003c/code\u003e，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yaml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    pool:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      size:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e        core: 1\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e        max:16\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子也可以。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecustom-name.yaml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    pool:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      size:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e        core: 1\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e        max:16\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你也可以根据读取\u003ccode\u003eConfigMap\u003c/code\u003e时合并在一起的活动配置文件，以不同方式配置Spring Boot应用程序。你可以通过使用\u003ccode\u003eapplication.properties\u003c/code\u003e或\u003ccode\u003eapplication.yaml\u003c/code\u003e属性，为不同的profile提供不同的属性值，指定特定的profile值，每个都在自己的文档中（用\u003ccode\u003e---\u003c/code\u003e序列表示），如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the World\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    ---\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    spring:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      profiles: development\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the Developers\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye to the Developers\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    ---\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    spring:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      profiles: production\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the Ops\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的案例中，通过开发配置文件加载到你的Spring应用程序的配置是这样的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSay Hello to the Developers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003efarewell\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSay Goodbye to the Developers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然而，如果\u003ccode\u003eproduction\u003c/code\u003e配置文件处于\u003ccode\u003eactive\u003c/code\u003e状态，配置就会变成。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSay Hello to the Ops\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003efarewell\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSay Goodbye\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果两个配置文件都处于活动状态，在\u003ccode\u003eConfigMap\u003c/code\u003e中最后出现的属性将覆盖前面的任何值。\u003c/p\u003e\n\u003cp\u003e另一个选择是为每个配置文件创建一个不同的配置map，spring boot会根据活动的配置文件自动获取它\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the World\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo-development\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    spring:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      profiles: development\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the Developers\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye to the Developers\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo-production\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    spring:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      profiles: production\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the Ops\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要告诉Spring Boot在启动时应该启用哪个配置文件，你可以通过\u003ccode\u003eSPRING_PROFILES_ACTIVE\u003c/code\u003e环境变量。要做到这一点，你可以用环境变量启动你的Spring Boot应用程序，你可以在容器规范的\u003ccode\u003ePodSpec\u003c/code\u003e中定义它。部署资源文件，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eapps/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDeployment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edeployment-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edeployment-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ereplicas\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edeployment-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etemplate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edeployment-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econtainer-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eyour-image\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSPRING_PROFILES_ACTIVE\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;development\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e你应该检查安全配置部分。要从pod内部访问配置maps，你需要有正确的Kubernetes服务账户、角色和角色绑定。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e使用\u003ccode\u003eConfigMap\u003c/code\u003e实例的另一个选择是通过运行Spring Cloud Kubernetes应用程序并让Spring Cloud Kubernetes从文件系统中读取它们，将它们挂载到Pod中。这种行为是由\u003ccode\u003espring.cloud.kubernetes.config.paths\u003c/code\u003e属性控制的。你可以使用它来补充或替代前面描述的机制。你可以在\u003ccode\u003espring.cloud.kubernetes.config.paths\u003c/code\u003e中使用\u003ccode\u003e,\u003c/code\u003e分隔符来指定多个（精确）文件路径。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你必须提供每个属性文件的完整准确路径，因为目录没有被递归解析。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ccode\u003espring.cloud.kubernetes.config.paths\u003c/code\u003e或\u003ccode\u003espring.cloud.kubernetes.secrets.path\u003c/code\u003e，自动重载功能将不起作用。你将需要向\u003ccode\u003e/actuator/refresh\u003c/code\u003e端点发出\u003ccode\u003ePOST\u003c/code\u003e请求，或者重新启动/重新部署应用程序。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTable 1. Properties:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDefault\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.enabled\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用ConfigMaps \u003ccode\u003ePropertySource\u003c/code\u003e。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.name\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e${spring.application.name}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置 \u003ccode\u003eConfigMap\u003c/code\u003e 的名称以进行查询。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.namespace\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eClient namespace\u003c/td\u003e\n\u003ctd\u003e设置查询的Kubernetes命名空间\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.paths\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eList\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置 \u003ccode\u003eConfigMap\u003c/code\u003e 实例的挂载路径。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.enableApi\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用或禁用通过API消费\u003ccode\u003eConfigMap\u003c/code\u003e实例的功能\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"52-secrets-propertysource\"\u003e5.2. Secrets PropertySource\u003c/h3\u003e\n\u003cp\u003eKubernetes有\u003ca href=\"https://kubernetes.io/docs/concepts/configuration/secret/\"\u003eSecrets\u003c/a\u003e的概念，用于存储敏感数据，如密码、OAuth令牌等。这个项目提供了与 \u0026ldquo;秘密 \u0026ldquo;的集成，使秘密可以被Spring Boot应用程序访问。你可以通过设置\u003ccode\u003espring.cloud.kubernetes.secrets.enabled\u003c/code\u003e属性明确地启用或禁用该功能。\u003c/p\u003e\n\u003cp\u003e启用后，\u003ccode\u003eFabric8SecretsPropertySource\u003c/code\u003e从以下来源查找Kubernetes的\u003ccode\u003eSecrets\u003c/code\u003e。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e递归地从secrets挂载中读取\u003c/li\u003e\n\u003cli\u003e2.以应用程序命名（由\u003ccode\u003espring.application.name\u003c/code\u003e定义）。\u003c/li\u003e\n\u003cli\u003e匹配一些标签\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e注意\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e默认情况下，由于安全原因，通过API消费Secrets（上面第2和第3点）\u003cstrong\u003e不启用\u003c/strong\u003e。Secrets上的权限 \u0026ldquo;list\u0026quot;允许客户端检查指定命名空间中的secrets值。此外，我们建议容器通过加载的卷来共享秘密。\u003c/p\u003e\n\u003cp\u003e如果你通过API启用消耗秘密，我们建议你通过使用授权策略来限制对秘密的访问，例如RBAC。关于通过API消费Secrets时的风险和最佳做法的更多信息，请参考\u003ca href=\"https://kubernetes.io/docs/concepts/configuration/secret/#best-practices\"\u003e本文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e如果发现了秘密，它们的数据就会被提供给应用程序。\u003c/p\u003e\n\u003cp\u003e假设我们有一个名为 \u003ccode\u003edemo\u003c/code\u003e 的spring boot应用程序，它使用属性来读取其数据库配置。我们可以通过使用以下命令创建一个Kubernetes secret。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl create secret generic db-secret --from-literal\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003euser --from-literal\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ep455w0rd\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的命令将创建以下secret（你可以通过使用\u003ccode\u003ekubectl get secrets db-secret -o yaml\u003c/code\u003e查看）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecDQ1NXcwcmQ=\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edXNlcg==\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecreationTimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"ld\"\u003e2017-07-04T09:15:57Z\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edb-secret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eresourceVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;357496\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eselfLink\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/api/v1/namespaces/default/secrets/db-secret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003euid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e63c89263-6099-11e7-b3da-76d6186905a8\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eOpaque\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意，该数据包含由创建命令提供的字面意思的Base64编码版本。\u003c/p\u003e\n\u003cp\u003e然后，你的应用程序可以使用这个 \u003ccode\u003esecret\u003c/code\u003e - 例如，通过导出\u003ccode\u003esecret\u003c/code\u003e的值作为环境变量。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDeployment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${project.artifactId}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"nt\"\u003etemplate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDB_USERNAME\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003evalueFrom\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                 \u003c/span\u003e\u003cspan class=\"nt\"\u003esecretKeyRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                   \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edb-secret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                   \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eusername\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDB_PASSWORD\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003evalueFrom\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                 \u003c/span\u003e\u003cspan class=\"nt\"\u003esecretKeyRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                   \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edb-secret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                   \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epassword\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过多种方式选择要消费的\u003ccode\u003esecret\u003c/code\u003e。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e通过列出\u003ccode\u003esecret\u003c/code\u003e被映射的目录\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e-Dspring.cloud.kubernetes.secrets.paths\u003cspan class=\"o\"\u003e=\u003c/span\u003e/etc/secrets/db-secret,etc/secrets/postgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你把所有的\u003ccode\u003esecret\u003c/code\u003e都映射到一个共同的根上，你可以像这样设置它们。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e-Dspring.cloud.kubernetes.secrets.paths\u003cspan class=\"o\"\u003e=\u003c/span\u003e/etc/secrets\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e通过设置一个命名的\u003ccode\u003esecret\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e-Dspring.cloud.kubernetes.secrets.name\u003cspan class=\"o\"\u003e=\u003c/span\u003edb-secret\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e通过定义一个标签列表\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e-Dspring.cloud.kubernetes.secrets.labels.broker\u003cspan class=\"o\"\u003e=\u003c/span\u003eactivemq\n-Dspring.cloud.kubernetes.secrets.labels.db\u003cspan class=\"o\"\u003e=\u003c/span\u003epostgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e如同 \u003ccode\u003eConfigMap\u003c/code\u003e 的情况，更高级的配置也是可能的，你可以使用多个 \u003ccode\u003esecret\u003c/code\u003e 实例。\u003ccode\u003espring.cloud.kubernetes.secrets.sources\u003c/code\u003e列表使这成为可能。例如，你可以定义以下\u003ccode\u003eSecret\u003c/code\u003e实例。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecloud-k8s-app\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekubernetes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003esecrets\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault-namespace\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003esources\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a Secret named s1 in namespace default-namespace\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003es1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a Secret named default-name in whatever namespace n2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003en2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a Secret named s3 in namespace n3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003en3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e           \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003es3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的例子中，如果没有设置\u003ccode\u003espring.cloud.kubernetes.secrets.namespace\u003c/code\u003e，命名为\u003ccode\u003es1\u003c/code\u003e的\u003ccode\u003eSecret\u003c/code\u003e将在应用程序运行的命名空间中被查找到。\u003c/p\u003e\n\u003cp\u003eTable 2. Properties:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDefault\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.enabled\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用 Secrets \u003ccode\u003ePropertySource\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.name\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e${spring.application.name}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置要查询的\u003ccode\u003eSecrets\u003c/code\u003e的名称\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.namespace\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eClient namespace\u003c/td\u003e\n\u003ctd\u003e设置Kubernetes的命名空间，用于查询\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.labels\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eMap\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置用于查询\u003ccode\u003eSecrets\u003c/code\u003e的标签\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.paths\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eList\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置安装\u003ccode\u003eSecrets\u003c/code\u003e的路径（例子1）。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.enableApi\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用或禁用通过API消费\u003ccode\u003eSecrets\u003c/code\u003e的功能（例子2和3）。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e注意事项\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.labels\u003c/code\u003e属性的行为与\u003ca href=\"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Configuration-Binding#map-based-binding\"\u003eMap-based binding.\u003c/a\u003e所定义的一致。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.paths\u003c/code\u003e属性的行为与\u003ca href=\"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Configuration-Binding#collection-based-binding\"\u003eCollection-based binding.\u003c/a\u003e所定义的一样。\u003c/li\u003e\n\u003cli\u003e出于安全原因，通过API访问秘密可能受到限制。首选的方法是将秘密挂载到Pod上。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e你可以在\u003ca href=\"https://github.com/fabric8-quickstarts/spring-boot-camel-config\"\u003espring-boot-camel-config\u003c/a\u003e找到一个使用secrets的应用实例（尽管它还没有被更新到使用新的\u003ccode\u003espring-cloud-kubernetes\u003c/code\u003e项目）。\u003c/p\u003e\n\u003ch3 id=\"53-propertysource-reload\"\u003e5.3. PropertySource Reload\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这一功能在2020.0版本中已被弃用。请参阅\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#spring-cloud-kubernetes-configuration-watcher\"\u003eSpring Cloud Kubernetes Configuration Watcher\u003c/a\u003e控制器，以获取实现相同功能的替代方法。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e一些应用程序可能需要检测外部属性源上的变化，并更新其内部状态以反映新的配置。Spring Cloud Kubernetes的重载功能能够在相关的\u003ccode\u003eConfigMap\u003c/code\u003e或\u003ccode\u003eSecret\u003c/code\u003e发生变化时触发应用重载。\u003c/p\u003e\n\u003cp\u003e默认情况下，这个功能是禁用的。你可以通过使用\u003ccode\u003espring.cloud.kubernetes.reload.enabled=true\u003c/code\u003e配置属性来启用它（例如，在\u003ccode\u003eapplication.properties\u003c/code\u003e文件中）。\u003c/p\u003e\n\u003cp\u003e支持以下级别的重载（通过设置\u003ccode\u003espring.cloud.kubernetes.reload.strategy\u003c/code\u003e属性）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erefresh\u003c/code\u003e（默认）。只有用\u003ccode\u003e@ConfigurationProperties\u003c/code\u003e或\u003ccode\u003e@RefreshScope\u003c/code\u003e注释的配置豆被重新加载。这个重载级别利用了Spring Cloud Context的刷新功能。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erestart_context\u003c/code\u003e：整个Spring\u003ccode\u003eApplicationContext\u003c/code\u003e被优雅地重新启动。豆类以新的配置重新创建。为了使重启上下文功能正常工作，你必须启用并公开重启执行器端点\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003emanagement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eendpoint\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003erestart\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eendpoints\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eexposure\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erestart\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eshutdown\u003c/code\u003e：Spring \u003ccode\u003eApplicationContext\u003c/code\u003e被关闭以激活容器的重新启动。当你使用这个级别时，请确保所有非daemon线程的生命周期被绑定到ApplicationContext，并且复制控制器或复制集被配置为重启pod。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e假设在默认设置下启用了重载功能（刷新模式），当config map发生变化时，会刷新以下bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@ConfigurationProperties\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprefix\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;bean\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;a message that can be changed live\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// getter and setters\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了看到变化的有效发生，你可以创建另一个Bean，定期打印消息，如下所示\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyBean\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Scheduled\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efixedDelay\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e5000\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ehello\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;The message is: \u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过使用\u003ccode\u003eConfigMap\u003c/code\u003e来改变应用程序打印的信息，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ereload-example\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.properties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    \u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"l\"\u003ebean.message=Hello World!\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e与pod相关的\u003ccode\u003eConfigMap'中名为\u003c/code\u003ebean.message\u0026rsquo;的属性的任何变化都会反映在输出中。更一般地说，与以\u003ccode\u003e@ConfigurationProperties\u003c/code\u003e注解的\u003ccode\u003eprefix\u003c/code\u003e字段定义的值为前缀的属性相关的变化会被检测并反映在应用程序中。本章前面解释了\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#configmap-propertysource\"\u003e将\u003ccode\u003eConfigMap\u003c/code\u003e与pod相关联\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e完整的例子见\u003ca href=\"https://github.com/spring-cloud/spring-cloud-kubernetes/tree/main/spring-cloud-kubernetes-examples/kubernetes-reload-example\"\u003e\u003ccode\u003espring-cloud-kubernetes-reload-example\u003c/code\u003e\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e重载功能支持两种操作模式:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eevent\u003c/code\u003e（默认）。通过使用Kubernetes API（网络套接字）来观察配置图或秘密的变化。任何事件都会产生对配置的重新检查，如果有变化，则重新加载。为了监听配置图的变化，需要服务账户上的\u003ccode\u003eview\u003c/code\u003e角色。秘密需要一个更高级别的角色（如\u003ccode\u003e编辑\u003c/code\u003e）（默认情况下，秘密不被监控）。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003epolling\u003c/code\u003e。定期从配置图和秘密中重新创建配置，看它是否有变化。你可以通过使用\u003ccode\u003espring.cloud.kubernetes.reload.period\u003c/code\u003e属性来配置轮询周期，默认为15秒。它要求与被监控的属性源的角色相同。这意味着，例如，在文件挂载的秘密源上使用轮询不需要特别的权限。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTable 3. Properties:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDefault\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.enabled\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用对配置资源的监控和配置重载\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.monitoring-config-maps\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e允许监控 \u003ccode\u003econfig maps\u003c/code\u003e 的变化\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.monitoring-secrets\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e允许监控 \u003ccode\u003esecrets\u003c/code\u003e的变化\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.strategy\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eEnum\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003erefresh\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e触发重载时使用的策略 ( \u003ccode\u003erefresh\u003c/code\u003e , \u003ccode\u003erestart_context\u003c/code\u003e , or \u003ccode\u003eshutdown\u003c/code\u003e )\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.mode\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eEnum\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eevent\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e指定如何监听属性源的变化（\u003ccode\u003eevent\u003c/code\u003e或\u003ccode\u003epolling\u003c/code\u003e）。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.period\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eDuration\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e15s\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e使用 \u003ccode\u003epolling\u003c/code\u003e 策略时，验证变化的周期\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e注意事项\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e你不应该在\u003ccode\u003econfig maps\u003c/code\u003e或\u003ccode\u003esecrets\u003c/code\u003e中使用\u003ccode\u003espring.cloud.kubernetes.reload\u003c/code\u003e下的属性。在运行时改变这些属性可能会导致意外的结果。\u003c/li\u003e\n\u003cli\u003e当你使用\u003ccode\u003erefresh\u003c/code\u003e级别时，删除一个属性或整个配置图不会恢复bean的原始状态。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"6-kubernetes生态系统意识\"\u003e6. Kubernetes生态系统意识\u003c/h2\u003e\n\u003cp\u003e无论你的应用程序是否在Kubernetes内运行，本指南前面描述的所有功能都同样有效。这对开发和故障排除真的很有帮助。从开发的角度来看，这可以让你启动你的Spring Boot应用，并调试这个项目中的一个模块。你不需要在Kubernetes中部署它，因为项目的代码依赖于\u003ca href=\"https://github.com/fabric8io/kubernetes-client\"\u003eFabric8 Kubernetes Java客户端\u003c/a\u003e，它是一个流畅的DSL，可以通过使用\u003ccode\u003ehttp\u003c/code\u003e协议与Kubernetes服务器的REST API进行通信。\u003c/p\u003e\n\u003cp\u003e要禁用与Kubernetes的集成，你可以将\u003ccode\u003espring.cloud.kubernetes.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。请注意，当\u003ccode\u003espring-cloud-kubernetes-config\u003c/code\u003e在classpath上时，\u003ccode\u003espring.cloud.kubernetes.enabled\u003c/code\u003e应该设置在\u003ccode\u003ebootstrap.{properties|yml}\u003c/code\u003e（或特定的配置文件），否则应该在\u003ccode\u003eapplication.{properties|yml}\u003c/code\u003e（或特定的配置文件）。还要注意这些属性。\u003ccode\u003espring.cloud.kubernetes.config.enabled\u003c/code\u003e和\u003ccode\u003espring.cloud.kubernetes.secrets.enabled\u003c/code\u003e只有在\u003ccode\u003ebootstrap.{properties|yml}\u003c/code\u003e中设置才会生效。\u003c/p\u003e\n\u003ch3 id=\"61-kubernetes配置文件自动配置\"\u003e6.1 Kubernetes配置文件自动配置\u003c/h3\u003e\n\u003cp\u003e当应用程序在Kubernetes内以\u003ccode\u003epod\u003c/code\u003e形式运行时，一个名为kubernetes的Spring配置文件会自动被激活。这让你可以定制配置，定义Spring Boot应用在Kubernetes平台上部署时应用的bean（例如，不同的开发和生产配置）。\u003c/p\u003e\n\u003ch3 id=\"62-istio意识\"\u003e6.2. Istio意识\u003c/h3\u003e\n\u003cp\u003e当你在应用程序的classpath中包含\u003ccode\u003espring-cloud-kubernetes-fabric8-istio\u003c/code\u003e模块时，一个新的配置文件被添加到应用程序中，前提是该应用程序在安装了\u003ca href=\"https://istio.io/\"\u003eIstio\u003c/a\u003e的Kubernetes集群中运行。然后你可以在你的Bean和\u003ccode\u003e@Configuration\u003c/code\u003e类中使用spring \u003ccode\u003e@Profile(\u0026quot;istio\u0026quot;)\u003c/code\u003e注释。\u003c/p\u003e\n\u003cp\u003eIstio意识模块使用\u003ccode\u003eme.snowdrop:istio-client\u003c/code\u003e与Istio API交互，让我们发现流量规则、断路器等，使我们的Spring Boot应用程序能够轻松地消费这些数据，根据环境动态地配置自己。\u003c/p\u003e\n\u003ch2 id=\"7-pod-健康指标\"\u003e7. Pod 健康指标\u003c/h2\u003e\n\u003cp\u003eSpring Boot使用\u003ca href=\"https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthEndpoint.java\"\u003e\u003ccode\u003eHealthIndicator\u003c/code\u003e\u003c/a\u003e来暴露应用程序的健康信息。这使得它在向用户公开健康相关信息方面非常有用，并使它很适合作为\u003ca href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/\"\u003e准备就绪探针\u003c/a\u003e使用。\u003c/p\u003e\n\u003cp\u003eKubernetes健康指标（是核心模块的一部分）暴露了以下信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePod名称、IP地址、命名空间、服务账户、节点名称及其IP地址。\u003c/li\u003e\n\u003cli\u003e指示Spring Boot应用程序是在Kubernetes内部还是外部的一个标志。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"8-信息贡献者\"\u003e8. 信息贡献者\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Kubernetes包括一个\u003ccode\u003eInfoContributor\u003c/code\u003e，它将Pod信息添加到Spring Boot的\u003ccode\u003e/info\u003c/code\u003e Acturator 端点。\u003c/p\u003e\n\u003cp\u003e你可以通过在\u003ccode\u003ebootstrap.[properties | yaml]\u003c/code\u003e中设置\u003ccode\u003emanagement.info.kubernetes.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来禁用这个\u003ccode\u003eInfoContributor\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"9-leader选举\"\u003e9. Leader选举\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Kubernetes领导者选举机制使用Kubernetes ConfigMap实现了Spring Integration的领导者选举API。\u003c/p\u003e\n\u003cp\u003e多个应用实例竞争领导权，但领导权只授予一个。当被授予领导权时，领导者应用会收到一个带有领导权\u003ccode\u003eContext\u003c/code\u003e的\u003ccode\u003eOnGrantedEvent\u003c/code\u003e应用事件。应用程序会定期尝试获得领导权，并将领导权授予第一个调用者。一个领导者将一直是一个领导者，直到它被从集群中移除，或者它放弃了它的领导权。当领导权被移除时，前一个领导者会收到\u003ccode\u003eOnRevokedEvent\u003c/code\u003e应用事件。移除后，集群中的任何实例都可以成为新的领导者，包括旧的领导者。\u003c/p\u003e\n\u003cp\u003e要在你的项目中包含它，请添加以下依赖关系。\u003c/p\u003e\n\u003cp\u003eFabric8 Leader Implementation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-kubernetes-fabric8-leader\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要指定用于Leader选举的configmap的名称，请使用以下property。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.leader.config-map-name=leader\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"10-用于kubernetes的负载均衡器\"\u003e10. 用于Kubernetes的负载均衡器。\u003c/h2\u003e\n\u003cp\u003e这个项目包括Spring Cloud Load Balancer，用于基于Kubernetes Endpoints的负载平衡，并提供了基于Kubernetes Service的负载平衡器的实现。要将其纳入你的项目，请添加以下依赖关系。\u003c/p\u003e\n\u003cp\u003eFabric8 Implementation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8-loadbalancer\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eKubernetes Java Client Implementation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-client-loadbalancer\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要启用基于Kubernetes服务名称的负载均衡，请使用以下属性。然后负载均衡器将尝试使用地址调用应用程序，例如\u003ccode\u003eservice-a.default.svc.cluster.local\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.loadbalancer.mode=SERVICE\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要启用所有命名空间的负载均衡，请使用以下属性。尊重\u003ccode\u003espring-cloud-kubernetes-discovery\u003c/code\u003e模块的属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.discovery.all-namespaces=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"11-kubernetes内部的安全配置\"\u003e11. Kubernetes内部的安全配置\u003c/h2\u003e\n\u003ch3 id=\"111-namespace\"\u003e11.1. Namespace\u003c/h3\u003e\n\u003cp\u003e本项目中提供的大多数组件都需要知道命名空间。对于Kubernetes（1.3以上），命名空间作为服务账户\u003ccode\u003esecret\u003c/code\u003e的一部分提供给pod，并由客户端自动检测。对于早期版本，它需要作为环境变量指定给pod。做到这一点的快速方法如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;KUBERNETES_NAMESPACE\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003evalueFrom\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003efieldRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efieldPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;metadata.namespace\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"112-服务账户\"\u003e11.2. 服务账户\u003c/h3\u003e\n\u003cp\u003e或支持集群内更精细的基于角色的访问的Kubernetes发行版，你需要确保使用\u003ccode\u003espring-cloud-kubernetes\u003c/code\u003e运行的pod可以访问Kubernetes API。对于你分配给部署或pod的任何服务账户，你需要确保他们有正确的角色。\u003c/p\u003e\n\u003cp\u003e根据要求，你需要在以下资源上有\u003ccode\u003eget\u003c/code\u003e、\u003ccode\u003elist\u003c/code\u003e和\u003ccode\u003ewatch\u003c/code\u003e的权限。\u003c/p\u003e\n\u003cp\u003eTable 4. Kubernetes Resource Permissions\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eDependency\u003c/th\u003e\n\u003cth\u003eResources\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003espring-cloud-starter-kubernetes-fabric8\u003c/td\u003e\n\u003ctd\u003epods, services, endpoints\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003espring-cloud-starter-kubernetes-fabric8-config\u003c/td\u003e\n\u003ctd\u003econfigmaps, secrets\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003espring-cloud-starter-kubernetes-client\u003c/td\u003e\n\u003ctd\u003epods, services, endpoints\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003espring-cloud-starter-kubernetes-client-config\u003c/td\u003e\n\u003ctd\u003econfigmaps, secrets\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e为了开发的目的，你可以给你的 \u003ccode\u003edefault\u003c/code\u003e 服务账户增加 \u003ccode\u003ecluster-reader\u003c/code\u003e 的权限。在生产系统中，你可能想提供更细的权限。\u003c/p\u003e\n\u003cp\u003e下面的Role和RoleBinding是一个为\u003ccode\u003edefault\u003c/code\u003e账户命名的权限的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRole\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYOUR-NAME-SPACE\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003erules\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;extensions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;apps\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eresources\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;configmaps\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;pods\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;services\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;endpoints\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;secrets\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003everbs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;get\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;list\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;watch\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRoleBinding\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader-binding\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYOUR-NAME-SPACE\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003esubjects\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eServiceAccount\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRole\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"12-服务注册的实施\"\u003e12. 服务注册的实施\u003c/h2\u003e\n\u003cp\u003e在Kubernetes中，服务注册由平台控制，应用程序本身并不像其他平台那样控制注册。因此，使用\u003ccode\u003espring.cloud.service-registry.auto-registration.enabled\u003c/code\u003e或设置\u003ccode\u003e@EnableDiscoveryClient(autoRegister=false)\u003c/code\u003e在Spring Cloud Kubernetes中没有效果。\u003c/p\u003e\n\u003ch2 id=\"13-spring-cloud-kubernetes配置watcher\"\u003e13. Spring Cloud Kubernetes配置Watcher\u003c/h2\u003e\n\u003cp\u003eKubernetes提供了在应用程序的容器中\u003ca href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#add-configmap-data-to-a-volume\"\u003e将ConfigMap或Secret作为卷装载\u003c/a\u003e的能力。当ConfigMap或Secret的内容发生变化时，\u003ca href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#mounted-configmaps-are-updated-automatically\"\u003e挂载的卷就会根据这些变化进行更新\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e然而，除非你重新启动应用程序，否则Spring Boot不会自动更新这些变化。Spring Cloud提供了刷新应用程序上下文的能力，无需重启应用程序，方法是点击执行器端点\u003ccode\u003e/refresh\u003c/code\u003e或通过使用Spring Cloud Bus发布\u003ccode\u003eRefreshRemoteApplicationEvent\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e为了实现在Kubernetes上运行的Spring Cloud应用程序的配置刷新，你可以将Spring Cloud Kubernetes配置观察者控制器部署到你的Kubernetes集群。\u003c/p\u003e\n\u003cp\u003e该应用以容器形式发布，可在\u003ca href=\"https://hub.docker.com/repository/docker/springcloud/spring-cloud-kubernetes-configuration-watcher\"\u003eDocker Hub\u003c/a\u003e上使用。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Kubernetes Configuration Watcher可以通过两种方式向应用程序发送刷新通知。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e通过HTTP，在这种情况下，被通知的应用程序必须有\u0026rdquo;/refresh \u0026ldquo;执行器端点暴露，并可从集群内访问。\u003c/li\u003e\n\u003cli\u003e2.使用Spring Cloud Bus，在这种情况下，你将需要一个部署在你的托管中心的消息代理，以便应用程序使用。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"131-deployment-yaml\"\u003e13.1. Deployment YAML\u003c/h3\u003e\n\u003cp\u003e下面是一个部署YAML的样本，你可以用来将Kubernetes配置观察器部署到Kubernetes。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eList\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eService\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etargetPort\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eClusterIP\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eServiceAccount\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRoleBinding\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher:view\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRole\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esubjects\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eServiceAccount\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRole\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003erules\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;extensions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;apps\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eresources\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;configmaps\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;pods\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;services\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;endpoints\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;secrets\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003everbs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;get\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;list\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;watch\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eapps/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDeployment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher-deployment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etemplate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceAccount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espringcloud/spring-cloud-kubernetes-configuration-watcher:2.0.1-SNAPSHOT\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eimagePullPolicy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eIfNotPresent\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ereadinessProbe\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpGet\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/actuator/health/readiness\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003elivenessProbe\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpGet\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/actuator/health/liveness\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"nt\"\u003econtainerPort\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e服务账户和相关的角色绑定对于Spring Cloud Kubernetes配置的正常工作非常重要。控制器需要读取Kubernetes集群中的ConfigMaps、Pod、服务、端点和Secrets数据的权限。\u003c/p\u003e\n\u003ch3 id=\"132-监控-configmaps-和-secrets\"\u003e13.2. 监控 ConfigMaps 和 Secrets\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Kubernetes Configuration Watcher将对标签为\u003ccode\u003espring.cloud.kubernetes.config\u003c/code\u003e且值为\u003ccode\u003etrue\u003c/code\u003e的ConfigMaps或标签为\u003ccode\u003espring.cloud.kubernetes.secret\u003c/code\u003e且值为\u003ccode\u003etrue\u003c/code\u003e的任何Secret中的变化做出反应。如果ConfigMap或Secret没有这些标签，或者这些标签的值不是\u003ccode\u003etrue\u003c/code\u003e，那么任何改变都会被忽略。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Kubernetes Configuration Watcher在ConfigMaps和Secrets上寻找的标签可以分别通过设置\u003ccode\u003espring.cloud.kubernetes.config.watcher.configLabel\u003c/code\u003e和\u003ccode\u003espring.cloud.kubernetes.config.watcher.secretLabel\u003c/code\u003e来改变。\u003c/p\u003e\n\u003cp\u003e如果对具有有效标签的ConfigMap或Secret进行了更改，那么Spring Cloud Kubernetes Configuration Watcher将采用ConfigMap或Secret的名称，并以该名称向应用程序发送通知。\u003c/p\u003e\n\u003ch3 id=\"133-http的实现\"\u003e13.3. HTTP的实现\u003c/h3\u003e\n\u003cp\u003eHTTP实现是默认使用的。当使用该实现时，Spring Cloud Kubernetes Configuration Watcher和ConfigMap或Secret发生变化，那么HTTP实现将使用Spring Cloud Kubernetes Discovery Client来获取与ConfigMap或Secret名称匹配的所有应用程序实例，并向应用程序的actuator\u003ccode\u003e/refresh\u003c/code\u003e端点发送HTTP POST请求。默认情况下，它将使用发现客户端中注册的端口向\u003ccode\u003e/actuator/refresh\u003c/code\u003e发送post请求。\u003c/p\u003e\n\u003ch4 id=\"1331-非默认的管理端口和执行器路径\"\u003e13.3.1. 非默认的管理端口和执行器路径\u003c/h4\u003e\n\u003cp\u003e如果应用程序使用非默认的执行器路径和/或为管理端点使用不同的端口，应用程序的Kubernetes服务可以添加一个名为\u003ccode\u003eboot.spring.io/actuator\u003c/code\u003e的注解，并将其值设置为应用程序使用的路径和端口。例如\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eService\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfig-map-demo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfig-map-demo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eannotations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eboot.spring.io/actuator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://:9090/myactuator/home\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8080\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etargetPort\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8080\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfig-map-demo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以选择配置执行器路径和/或管理端口的另一种方式是设置\u003ccode\u003espring.cloud.kubernetes.configuration.watcher.actuatorPath\u003c/code\u003e和\u003ccode\u003espring.cloud.kubernetes.configuration.watcher.actuatorPort\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"134-messaging-implementation\"\u003e13.4. Messaging Implementation\u003c/h3\u003e\n\u003cp\u003e当Spring Cloud Kubernetes配置观察者应用程序部署到Kubernetes时，可以通过将配置文件设置为\u003ccode\u003ebus-amqp\u003c/code\u003e（RabbitMQ）或\u003ccode\u003ebus-kafka\u003c/code\u003e（Kafka）来启用消息传递实现。\u003c/p\u003e\n\u003ch3 id=\"135-rabbitmq-配置\"\u003e13.5. RabbitMQ 配置\u003c/h3\u003e\n\u003cp\u003e当启用 \u003ccode\u003ebus-amqp\u003c/code\u003e 配置文件时，您将需要配置 Spring RabbitMQ 以将其指向您希望使用的 RabbitMQ 实例的位置，以及任何必要的验证凭证。这可以通过设置标准 Spring RabbitMQ 属性来完成，例如\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003erabbitmq\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epassword\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erabbitmq\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"136-kafka-配置\"\u003e13.6. Kafka 配置\u003c/h3\u003e\n\u003cp\u003e启用\u003ccode\u003ebus-kafka\u003c/code\u003e配置文件后，你需要配置Spring Kafka，将其指向你想使用的Kafka Broker实例的位置。这可以通过设置标准的Spring Kafka属性来完成，例如\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ekafka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eproducer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ebootstrap-servers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocalhost:9092\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"14-examples\"\u003e14. Examples\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Kubernetes试图通过遵循Spring Cloud的接口，使你的应用程序在消费Kubernetes原生服务时变得透明。\u003c/p\u003e\n\u003cp\u003e在你的应用程序中，你需要在classpath中添加\u003ccode\u003espring-cloud-kubernetes-discovery\u003c/code\u003e依赖项，并删除任何包含\u003ccode\u003eDiscoveryClient\u003c/code\u003e实现（即Eureka发现客户端）的其他依赖项。这同样适用于 \u003ccode\u003ePropertySourceLocator\u003c/code\u003e，你需要在classpath中添加 \u003ccode\u003espring-cloud-kubernetes-config\u003c/code\u003e，并删除任何包含 \u003ccode\u003ePropertySourceLocator\u003c/code\u003e 实现（即配置服务器客户端）的其他依赖。\u003c/p\u003e\n\u003cp\u003e以下项目强调了这些依赖关系的用法，并演示了你如何从任何Spring Boot应用程序中使用这些库。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/sring-cloud/spring-cloud-kubernetes/tree/master/spring-cloud-kubernetes-examples\"\u003eSpring Cloud Kubernetes Examples\u003c/a\u003e：位于这个资源库里面的。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSpring Cloud Kubernetes完整示例。Minions和Boss\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/salaboy/spring-cloud-k8s-minion\"\u003eMinion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/salaboy/spring-cloud-k8s-boss\"\u003eBoss\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSpring Cloud Kubernetes完整示例：\u003ca href=\"https://github.com/salaboy/s1p_docs\"\u003eSpringOne Platform Tickets Service\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/salaboy/s1p_gateway\"\u003eSpring Cloud Gateway with Spring Cloud Kubernetes Discovery and Config\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/salaboy/showcase-admin-tool\"\u003eSpring Boot Admin with Spring Cloud Kubernetes Discovery and Config\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"15-其他资源\"\u003e15. 其他资源\u003c/h2\u003e\n\u003cp\u003e本节列出了其他资源，如关于Spring Cloud Kubernetes的演讲（slides）和视频。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://salaboy.com/2018/09/27/the-s1p-experience/\"\u003eS1P Spring Cloud on PKS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://salaboy.com/2018/07/18/ljc-july-18-spring-cloud-docker-k8s/\"\u003eSpring Cloud, Docker, Kubernetes → London Java Community July 2018\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e请随时通 pull requests 向\u003ca href=\"https://github.com/spring-cloud/spring-cloud-kubernetes\"\u003e本仓库\u003c/a\u003e提交其他资源。\u003c/p\u003e\n\u003ch2 id=\"16-配置属性\"\u003e16. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有与Kubernetes相关的配置属性列表，请查看\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      },
    {
        id: 7,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-netflix/",
        title: "Spring Cloud Netflix",
        description: "Spring Cloud Netflix通过自动配置和绑定到Spring环境和其他Spring编程模型习语，为Spring Boot应用提供了Netflix OSS集成。通过一些简单的注释，您可以在应用程序中快速启用和配置通用模式，并使用经过实战考验的Netflix组件构建大型分布式系统。提供的模式包括服务发现(Eureka)、断路器(Hystrix)、智能路由(Zuul)和客户端负载均衡(Ribbon)。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月22日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix\"\u003ehttps://github.com/spring-cloud/spring-cloud-netflix\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Netflix通过自动配置和绑定到Spring环境和其他Spring编程模型习语，为Spring Boot应用提供了Netflix OSS集成。通过一些简单的注释，您可以在应用程序中快速启用和配置通用模式，并使用经过实战考验的Netflix组件构建大型分布式系统。提供的模式包括服务发现(Eureka)、断路器(Hystrix)、智能路由(Zuul)和客户端负载均衡(Ribbon)。\u003c/p\u003e\n\u003ch2 id=\"1-服务发现eureka-clinet\"\u003e1. 服务发现：Eureka Clinet\u003c/h2\u003e\n\u003cp\u003e服务发现是基于微服务的体系结构的关键原则之一。尝试手动配置每个客户端或某种形式的约定可能很困难，而且可能易挂。Netflix的服务发现器和客户端Eureka，可以将服务器配置和部署为高可用性，每个服务器都可以将已注册服务的状态复制给其他服务器。\u003c/p\u003e\n\u003ch3 id=\"11-如何引入eureka-client\"\u003e1.1. 如何引入Eureka Client\u003c/h3\u003e\n\u003cp\u003e要在项目中包含Eureaka Client，请使用start中gruop ID为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和artifact ID为\u003ccode\u003espring-cloud-starter-netflix-eureka-client\u003c/code\u003e的包，有关使用Spring cloud设置构建系统的详细信息，请参阅\u003ca href=\"https://spring.io/projects/spring-cloud\"\u003eSpring Cloud Project\u003c/a\u003e\n页面。\u003c/p\u003e\n\u003ch3 id=\"12-向eureka注册服务\"\u003e1.2. 向Eureka注册服务\u003c/h3\u003e\n\u003cp\u003e当客户端向Eureka注册时，它会提供关于自身的元数据，例如主机、端口、健康状态URl、主页和其他详细信息。Eureka接收来自属于某个服务的每个实例的心跳消息。如果在可配置的时间内检测心跳失败，实例客户端通常会从注册中心删除。\u003c/p\u003e\n\u003cp\u003e下面的例子展示了一个最小的Eureka客户端应用程序:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello world\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpringApplicationBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eweb\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意，上面的示例只是一个普通的Spring Boot应用程序。通过包管理文件引入\u003ccode\u003espring-cloud-starter-netflix-Eureka-client\u003c/code\u003e依赖，你的应用程序将自动注册到Eureka Server。定位 Eureka服务器需要配置，如下面的例子所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:8761/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的示例中，\u003ccode\u003edefaultZone\u003c/code\u003e 是一个缺省字符串回调值，它为任何不填写注册中心地址的客户端提供一个默认值。(换句话说：不填此项，eureka使用http://localhost:8761/eureka/作为默认地址)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e📍 这个\u003ccode\u003edefaultZone\u003c/code\u003e属性是区分大小写的，并且需要驼峰命令法，因为\u003ccode\u003eserviceUrl\u003c/code\u003e属性是\u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e。因此，\u003ccode\u003edefaultZone\u003c/code\u003e属性不遵循常规Spring Boot蛇形命名法约定。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e默认的应用程序名称(即服务 ID)、虚拟主机和非安全端口(取自环境)分别为\u003ccode\u003e${ spring.application.name }\u003c/code\u003e、\u003ccode\u003e${ spring.application.name }\u003c/code\u003e和\u003ccode\u003e${ server.port }\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e在包管理工具中引入\u003ccode\u003espring-cloud-starter-netflix-Eureka-client\u003c/code\u003e,使得应用程序既成为Eureka示例，也成为客户端（它可以查询注册中心定位其他服务）。实例行为是由\u003ccode\u003eeuraka.instance.*\u003c/code\u003e配置驱动的，但是你要确保你的应用程序配置\u003ccode\u003espring.application.name\u003c/code\u003e值。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e有关可配置选项的更多详细信息，请参阅\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix/tree/main/spring-cloud-netflix-eureka-client/src/main/java/org/springframework/cloud/netflix/eureka/EurekaInstanceConfigBean.java\"\u003eEurekaInstanceConfigBean\u003c/a\u003e和\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix/tree/main/spring-cloud-netflix-eureka-client/src/main/java/org/springframework/cloud/netflix/eureka/EurekaClientConfigBean.java\"\u003eEurekaClientConfigBean\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要禁用Eureka发现客户端，你可以将\u003ccode\u003eEureka.Client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。当 \u003ccode\u003espring.cloud.Discovery.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e时，Eureka发现客户端也将被禁用。\u003c/p\u003e\n\u003ch3 id=\"13-在eureka-server上验证\"\u003e1.3 在Eureka server上验证\u003c/h3\u003e\n\u003cp\u003e如果\u003ccode\u003eeureka.client.serviceur.defaultzone\u003c/code\u003e的Url中嵌入了凭据(curl样式的，示例：user: password@localhost: 8761/eureka)，HTTP的基本身份验证将自动添加到Eureka客户机中。对于更负载的需求，你可以创建类型为：\u003ccode\u003eDiscoveryClientOptionalArgs\u003c/code\u003e 的\u003ccode\u003e@bean\u003c/code\u003e，并将\u003ccode\u003eClientFilter\u003c/code\u003e实例插入其中，所有这些都应用于从客户机到服务器的调用。\u003c/p\u003e\n\u003cp\u003e当Eureka服务器需要客户端证书进行身份验证时，客户端证书和信任存储可以通过属性进行配置，如下例所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003etls\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;path-of-key-store\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;key-store-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;key-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;path-of-trust-store\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;trust-store-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e启用\u003ccode\u003eEureka.client.TLS.enabled \u003c/code\u003e要为true才能启用Eureka客户端的TLS。当省略\u003ccode\u003eeurea.client.tls.trust-store\u003c/code\u003e时，将使用JVM默认信任存储。\u003ccode\u003eEureka.client.tls.key-store-type\u003c/code\u003e和\u003ccode\u003eeureka.client.tls.trust-store-type\u003c/code\u003e的默认值是 PKCS12。如果省略密码属性，则假定为空密码。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e由于 Eureka 中的限制，不可能支持每个服务器的基本授权凭证，因此只使用找到的第一组凭证。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你想定制Eureka HTTP客户端使用的\u003ccode\u003eRestTemplate\u003c/code\u003e，你可以创建一个 \u003ccode\u003eEurekaClientHttpRequestFactorySupplier\u003c/code\u003e，并编写自己的逻辑来生成\u003ccode\u003eClientHttpRequestFactory\u003c/code\u003e实例。\u003c/p\u003e\n\u003ch3 id=\"14-状态页和健康指示器\"\u003e1.4 状态页和健康指示器\u003c/h3\u003e\n\u003cp\u003eEureka 实例的状态页面和健康状态指示器分别默认为\u003ccode\u003e/info\u003c/code\u003e 和\u003ccode\u003e/health\u003c/code\u003e，这是Spring Boot Actuator应用程序中有用的端点默认位置。如果使用非默认的上下文路径或servlet路径(比如 server.servletPath =/custom) ，那么即使对于实现的应用程序也需要修改这些路径。下面的示例显示了这两个设置的默认值:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003estatusPageUrlPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${server.servletPath}/info\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthCheckUrlPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${server.servletPath}/health\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这些链接显示在客户端使用的元数据中，并且在某些场景中用于决定是否向应用程序发送请求，因此如果这些请求是准确的，就很有帮助。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在Dalston(版本名字)中，当更改管理上下文路径时，还需要设置状态和运行状况检查url。这个要求从Edgware开始就被删除了\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"15-注册安全的应用程序\"\u003e1.5 注册安全的应用程序\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序希望通过 HTTPS 进行联系，可以在EurekaInstanceConfigBean 中设置两个属性:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eEureka.instance.[nonsecurtenabled]=[false]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eEureka.instance.[securePortEnabled]=[true]\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这样做使Eureka发布的实例信息显示了对安全通信的明确偏好。Spring Cloud \u003ccode\u003eDiscoveryClient\u003c/code\u003e 总是返回一个以 https开头的 URI，用于以这种方式配置的服务。类似地，当以这种方式配置服务时，Eureka (本机)实例信息具有一个安全的健康检查 URL。\u003c/p\u003e\n\u003cp\u003e由于Eureka内部的工作方式，它仍然为状态和主页发布一个不安全的URL，除非你也显式地覆盖这些内容。你可以使用占位符来配置eureka实例 url，如下面的例子所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003estatusPageUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://${eureka.hostname}/info\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthCheckUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://${eureka.hostname}/health\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehomePageUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://${eureka.hostname}/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(注意 \u003ccode\u003e${Eureka.hostname}\u003c/code\u003e是一个本机占位符，只能在 Eureka 的后续版本中使用。对于Spring占位符也可以实现同样的功能ーー例如，使用 \u003ccode\u003e${eureka.instance.hostname}\u003c/code\u003e.)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你的应用程序运行在代理之后，并且SSL终止在代理中(例如，如果你作为服务运行在Cloud Foundry或其他平台上) ，然后，你需要确保“转发”的代理头被应用程序拦截和处理。如果在Spring Boot应用程序中嵌入的Tomcat容器对\u0026rsquo;X-Forwarded-* \u0026lsquo;头有显式配置，这将自动生效。应用程序呈现给自身的链接是错误的(错误的主机、端口或协议)，这是配置错误的标志。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"16-eureka的健康检查\"\u003e1.6 Eureka的健康检查\u003c/h3\u003e\n\u003cp\u003e默认情况下，Eureka使用客户端心跳来确定客户端是否启动。除非另行指定，否则发现客户端不会根据Spring Boot执行器传播应用程序的当前运行状况检查状态。因此，在成功注册后，Eureka总是宣布应用程序处于\u003ccode\u003eUP\u003c/code\u003e状态。可以通过启用Eureka运行状况检查来更改此行为，这将导致将应用程序状态传播到Eureka。因此，每个其他应用程序不会向处于\u003ccode\u003eUP\u003c/code\u003e状态以外的应用程序发送流量。下面的示例显示如何为客户端启用运行状况检查。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthcheck\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eeureka.client.healthcheck.enabled=true\u003c/code\u003e应该只在\u003ccode\u003eapplication.yml\u003c/code\u003e中设置。在\u003ccode\u003ebootstrap.yml\u003c/code\u003e中设置这个值会引起不好的副作用。例如在Eureka以\u003ccode\u003eUNKNOWN\u003c/code\u003e状态注册。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你需要对运行状况检查进行更多的控制，可以考虑实现自己的检查\u003ccode\u003ecom.netflix.appinfo.HealthCheckHandler\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"17-eureka-client和实例的元数据\"\u003e1.7 Eureka client和实例的元数据\u003c/h3\u003e\n\u003cp\u003e花点时间了解Eureka元数据是如何工作的是值得的，这样您就可以在您的平台上以一种有意义的方式使用它。对于主机名、IP地址、端口号、状态页和健康检查等信息，有标准的元数据。这些信息发布在服务注册中心中，客户端使用它们以一种简单的方式联系服务。附加的元数据可以添加到实例注册的\u003ccode\u003eeureka.instance.metadataMap\u003c/code\u003e中，该元数据可以在远程客户机中访问。一般来说，附加的元数据不会改变客户机的行为，除非客户机知道元数据的含义。在一些特殊情况下，Spring Cloud已经为元数据映射赋予了意义，本文稍后将对此进行描述。\u003c/p\u003e\n\u003ch4 id=\"171-在cloud-foundry上使用eureka\"\u003e1.7.1 在Cloud Foundry上使用Eureka\u003c/h4\u003e\n\u003cp\u003eCloud Foundry有一个全局路由器，这样同一个应用的所有实例都有相同的主机名(其他具有类似架构的PaaS解决方案也有相同的安排)。这并不一定是使用Eureka的障碍。但是，如果你使用路由器(建议或强制使用，这取决于平台的设置方式)，则需要显式设置主机名和端口号(安全或不安全)，以便它们使用路由器。你可能还希望使用实例元数据，以便能够区分客户机上的实例(例如，在自定义负载平衡器中)。默认情况下，\u003ccode\u003eeureka.instance.instanceId\u003c/code\u003e是\u003ccode\u003evcap.application.Instance_id\u003c/code\u003e，示例如下:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${vcap.application.uris[0]}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003enonSecurePort\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e80\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据在Cloud Foundry实例中设置安全规则的方式，您能够注册并使用主机VM的IP地址来进行直接的服务到服务调用。这个特性在关键的Web服务(PWS)上还不可用。\u003c/p\u003e\n\u003ch4 id=\"172-在aws上使用eureka\"\u003e1.7.2 在AWS上使用Eureka\u003c/h4\u003e\n\u003cp\u003e如果计划将应用部署到AWS云，则必须将Eureka实例配置为AWS感知。你可以通过如下方式定制\u003ccode\u003eEurekaInstanceConfigBean\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@Profile\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;!default\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eEurekaInstanceConfigBean\u003c/span\u003e \u003cspan class=\"nf\"\u003eeurekaInstanceConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eInetUtils\u003c/span\u003e \u003cspan class=\"n\"\u003einetUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eEurekaInstanceConfigBean\u003c/span\u003e \u003cspan class=\"n\"\u003ebean\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eEurekaInstanceConfigBean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einetUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eAmazonInfo\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eAmazonInfo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eautoBuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;eureka\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebean\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetDataCenterInfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebean\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"173-修改eureka的实例id\"\u003e1.7.3 修改Eureka的实例ID\u003c/h4\u003e\n\u003cp\u003e一个普通的Netflix Eureka实例是用一个与它的主机名相等的ID注册的(也就是说，每个主机只有一个服务)。Spring Cloud Eureka提供了一个合理的默认值，定义如下:\n\u003ccode\u003e${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e一个例子是：\u003ccode\u003emyhost:myappname:8080\u003c/code\u003e。\n通过使用Spring Cloud，您可以通过在\u003ccode\u003eeureka.instance.instanceId\u003c/code\u003e中提供唯一的标识符来覆盖这个值。，如下例所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003einstanceId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用前面示例中显示的元数据和部署在localhost上的多个服务实例，将插入随机值以使实例唯一。在Cloud Foundry中，\u003ccode\u003evcap.application.instance_id\u003c/code\u003e是在Spring Boot应用程序中自动填充的，因此不需要这个随机值。\u003c/p\u003e\n\u003ch3 id=\"18-使用eurekaclient\"\u003e1.8 使用EurekaClient\u003c/h3\u003e\n\u003cp\u003e一旦你拥有了一个作为发现客户端的应用程序，您就可以使用它从\u003ccode\u003eEureka Server\u003c/code\u003e发现服务实例。一种方法是使用本机\u003ccode\u003ecom.netflix.discovery.EurekaClient\u003c/code\u003e(与Spring Cloud DiscoveryClient相反)，如下面的示例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eEurekaClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eInstanceInfo\u003c/span\u003e \u003cspan class=\"n\"\u003einstance\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetNextServerFromEureka\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;STORES\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einstance\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetHomePageUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e不要在\u003ccode\u003e@PostConstruct\u003c/code\u003e方法或\u003ccode\u003e@Scheduled\u003c/code\u003e方法中使用\u003ccode\u003eeurekclient\u003c/code\u003e(或在\u003ccode\u003eApplicationContext\u003c/code\u003e可能还没有启动的任何地方)。它是在\u003ccode\u003eSmartLifecycle\u003c/code\u003e中初始化的(\u003ccode\u003ephase=0\u003c/code\u003e)，所以你最早可以依赖它是在另一个具有更高阶段的\u003ccode\u003eSmartLifecycle\u003c/code\u003e中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"181-eurekacliet没有jersey\"\u003e1.8.1 EurekaCliet没有Jersey\u003c/h4\u003e\n\u003cp\u003e默认情况下，eurekclient使用Spring的\u003ccode\u003eRestTemplate\u003c/code\u003e进行HTTP通信。如果您希望使用Jersey，则需要将Jersey依赖项添加到类路径中。下面的例子显示了你需要添加的包管理文件中:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u0026lt;dependency\u0026gt;\n    \u0026lt;groupId\u0026gt;com.sun.jersey\u0026lt;/groupId\u0026gt;\n    \u0026lt;artifactId\u0026gt;jersey-client\u0026lt;/artifactId\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\u0026lt;dependency\u0026gt;\n    \u0026lt;groupId\u0026gt;com.sun.jersey\u0026lt;/groupId\u0026gt;\n    \u0026lt;artifactId\u0026gt;jersey-core\u0026lt;/artifactId\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\u0026lt;dependency\u0026gt;\n    \u0026lt;groupId\u0026gt;com.sun.jersey.contribs\u0026lt;/groupId\u0026gt;\n    \u0026lt;artifactId\u0026gt;jersey-apache-client4\u0026lt;/artifactId\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"19-替代原生netflix-eurakaclient\"\u003e1.9 替代原生Netflix EurakaClient\u003c/h3\u003e\n\u003cp\u003e你不需要使用原始的\u003ccode\u003eNetflix eurekclient\u003c/code\u003e。在某种封装后面使用它通常更方便。Spring Cloud通过逻辑的Eureka服务标识符(VIPs)而不是物理url支持\u003ccode\u003eFeign\u003c/code\u003e(一个REST客户端构建器)和\u003ccode\u003eSpring RestTemplate\u003c/code\u003e的远程调用。你还可以使用\u003ccode\u003eorg.springframework.cloud.client.discovery.DiscoveryClient\u003c/code\u003e它为发现客户端提供了一个简单的API(不特定于Netflix)，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eDiscoveryClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstances\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;STORES\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003egetUri\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"110-为什么注册服务如此缓慢\"\u003e1.10 为什么注册服务如此缓慢\u003c/h3\u003e\n\u003cp\u003e作为一个实例还涉及到到注册中心的周期性心跳(通过客户机的serviceUrl)，默认持续时间为30秒。在实例、服务器和客户端本地缓存中都有相同的元数据之前，客户端无法发现服务(因此可能需要3次心跳)。可以通过设置\u003ccode\u003eeureka.instance.leaseRenewalIntervalInSeconds\u003c/code\u003e来修改周期。将其设置为小于30的值将加快使客户端连接到其他服务的过程。在生产中，使用默认值可能更好，因为服务器中的内部计算会对租期续期做出假设。\u003c/p\u003e\n\u003ch3 id=\"111-zones\"\u003e1.11 Zones\u003c/h3\u003e\n\u003cp\u003e如果您已经将Eureka客户端部署到多个区域，您可能希望这些客户端在尝试其他区域中的服务之前先使用相同区域中的服务。要进行设置，需要正确配置Eureka客户端。\n首先，您需要确保将Eureka服务器部署到每个区域，并且它们彼此是对等的。有关更多信息，请参阅区域和地区一节。\u003c/p\u003e\n\u003cp\u003e接下来，你需要告诉Eureka你的服务在哪个区域。可以通过使用\u003ccode\u003emetadatmap\u003c/code\u003e属性来实现。例如，service 1同时部署在zone 1和zone 2，则需要在service 1中设置如下Eureka属性:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eService 1 in Zone 1\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"l\"\u003eeureka.instance.metadataMap.zone = zone1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"l\"\u003eeureka.client.preferSameZoneEureka = true\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eService 1 in Zone 2\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"l\"\u003eeureka.instance.metadataMap.zone = zone2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"l\"\u003eeureka.client.preferSameZoneEureka = true\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"112-刷新eureka-client\"\u003e1.12 刷新Eureka client\u003c/h3\u003e\n\u003cp\u003e默认情况下，\u003ccode\u003eEurekaClient bean\u003c/code\u003e是可刷新的，这意味着可以更改和刷新Eureka客户机属性。当刷新发生时，客户端将从Eureka服务器注销，并且可能有一段短暂的时间内给定服务的所有实例都不可用。消除这种情况的一种方法是禁用刷新Eureka客户机的功能。设置\u003ccode\u003eeureka.client.refresh.enable=false\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"113-使用springcloud负载均衡的eureka\"\u003e1.13 使用SpringCloud负载均衡的Eureka\u003c/h3\u003e\n\u003cp\u003e我们提供对\u003ccode\u003eSpring CLoud LoadBalancer ZonePreferenceServiceInstanceListSupplier\u003c/code\u003e的支持。Eureka实例元数据(Eureka.instance. metadatmap zone)中的zone值用于设置spring-cloud-loadbalancer-zone属性的值，该属性用于按zone过滤服务实例。\u003c/p\u003e\n\u003cp\u003e如果没有这个属性，并且\u003ccode\u003espring.cloud.loadbalancer.eureka.approximateZoneFromHostname\u003c/code\u003e标志被设置为true，那么它可以使用服务器主机名中的域名作为区域的代理。\u003c/p\u003e\n\u003cp\u003e如果没有其他区域数据来源，则基于客户端配置（而不是实例配置）进行猜测。 我们采取\u003ccode\u003eeureka.client.availabilityZones\u003c/code\u003e，它是从区域名称到区域列表的地图，并释放了实例自己的区域的第一个区域（即\u003ccode\u003eeureka.client.region\u003c/code\u003e，默认为\u003ccode\u003eus-east-1\u003c/code\u003e，用于与本机Netflix的兼容性）。\u003c/p\u003e\n\u003ch2 id=\"2-服务发现eureka-server\"\u003e2. 服务发现：Eureka Server\u003c/h2\u003e\n\u003cp\u003e介绍搭建Eureka服务器的操作步骤。\u003c/p\u003e\n\u003ch3 id=\"21-如何包含eureka-server\"\u003e2.1 如何包含Eureka Server\u003c/h3\u003e\n\u003cp\u003e要将\u003ccode\u003eEureka Server\u003c/code\u003e包含到您的项目中，使用gourp ID为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和 artifact ID为\u003ccode\u003espring-cloud-start-netflix- Eureka-Server\u003c/code\u003e的启动器。有关使用当前\u003ccode\u003eSpring Cloud Release Train\u003c/code\u003e设置构建系统的详细信息，请参阅Spring Cloud Project页面。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果您的项目已经使用\u003ccode\u003eThymeleaf\u003c/code\u003e作为模板引擎，Eureka服务器的\u003ccode\u003eFreemarker\u003c/code\u003e模板可能无法正确加载。在这种情况下，有必要手动配置模板加载器:\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003efreemarker\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003etemplate-loader-path\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eclasspath:/templates/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eprefer-file-system-access\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"22-如何运行eureka-server\"\u003e2.2 如何运行Eureka Server\u003c/h3\u003e\n\u003cp\u003e下面的例子展示了一个最小的Eureka服务器:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableEurekaServer\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpringApplicationBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eweb\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e服务器具有主页，其中包含UI界面和HTTP API端点，作用与/eureka/*。\u003c/p\u003e\n\u003cp\u003e以下链接有一些Eureka背景知识，\u003ca href=\"https://github.com/cfregly/fluxcapacitor/wiki/NetflixOSS-FAQ#eureka-service-discovery-load-balancer\"\u003eflux capacitor\u003c/a\u003e and \u003ca href=\"https://groups.google.com/forum/?fromgroups#!topic/eureka_netflix/g3p2r7gHnN0\"\u003egoogle group discussion\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e由于Gradle的依赖解析规则和缺少父bom特性，依赖\u003ccode\u003espring-cloud-start-netflix-eureka-server\u003c/code\u003e可能会导致应用启动失败。为了解决这个问题，添加\u003ccode\u003eSpring Boot Gradle\u003c/code\u003e插件，并导入Spring云启动器的父bom如下:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ebuild.gradle\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-gradle\" data-lang=\"gradle\"\u003e\u003cspan class=\"n\"\u003ebuildscript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edependencies\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eclasspath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.boot:spring-boot-gradle-plugin:{spring-boot-docs-version}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eapply\u003c/span\u003e \u003cspan class=\"nl\"\u003eplugin:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spring-boot\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edependencyManagement\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimports\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emavenBom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud:spring-cloud-dependencies:{spring-cloud-version}\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"23-高可用zones-和-regions\"\u003e2.3 高可用，Zones 和 Regions\u003c/h3\u003e\n\u003cp\u003eEureka服务器没有后端存储，但是注册中心中的服务实例都必须发送心跳以保持其状态的更新(所以这可以在内存中完成)。客户端也有一个Eureka注册的内存缓存(所以他们不必为每个服务请求都去注册中心)。\n默认情况下，每个Eureka服务器也是一个Eureka客户端，并且需要(至少一个)服务URL来定位对等点。如果你不提供它，服务也会运行并工作，但它会用许多关于无法注册进对等注册中心的信息记录填充你的日志。\u003c/p\u003e\n\u003ch3 id=\"24-独立模式\"\u003e2.4 独立模式\u003c/h3\u003e\n\u003cp\u003e两个缓存(客户端和服务器)和心跳的结合使独立的Eureka服务器在故障时相当有弹性，只要有某种监控或弹性运行时(如Cloud Foundry)保持它的活力。在独立模式下，你可能更希望关闭客户端行为，这样它就不会一直尝试访问其他节点而失败。下面的例子展示了如何关闭客户端行为:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml (独立的Eureka服务器)\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8761\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocalhost\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eregisterWithEureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003efetchRegistry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://${eureka.instance.hostname}:${server.port}/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意\u003ccode\u003eserviceUrl\u003c/code\u003e指向与本地实例相同的主机。\u003c/p\u003e\n\u003ch3 id=\"25-对等模式\"\u003e2.5 对等模式\u003c/h3\u003e\n\u003cp\u003e通过运行多个实例并要求它们相互注册，Eureka可以变得更加灵活和可用。事实上，这是默认的行为，所以你只需要向对等体添加一个有效的serviceUrl，如下面的例子所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml (两个对等的Eureka服务器)\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://peer2/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://peer1/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在上面的示例中，我们有一个YAML文件，可以通过在不同的Spring文件中配置运行它来在两台主机(peer1和peer2)上运行相同的服务器。通过操作\u003ccode\u003e/etc/hosts\u003c/code\u003e解析主机名，您可以使用此配置在单个主机上测试对等感知(在生产中这样做没有多大价值)。事实上，如果运行在知道自己主机名的机器上(默认情况下，使用\u003ccode\u003ejava.net.InetAddress\u003c/code\u003e查找)，就不需要\u003ccode\u003eeureka.instance.hostname\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你可以在一个系统中添加多个对等体，只要它们彼此至少有一个连接，它们就会同步自己的注册。如果对等点在物理上是分离的(在一个数据中心内或多个数据中心之间)，那么系统原则上可以承受\u003ccode\u003esplit-brain\u003c/code\u003e类型的故障。你可以在一个系统中添加多个对等体，只要它们都是直接连接的，它们就会在自己之间同步注册。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml (三个对等的eureka服务器)\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://peer1/eureka/,http://peer2/eureka/,http://peer3/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"26-何时选择ip地址\"\u003e2.6 何时选择IP地址\u003c/h3\u003e\n\u003cp\u003e在某些情况下，Eureka最好发布服务的IP地址而不是主机名。设置\u003ccode\u003eeureka.instance.preferipaddress=true\u003c/code\u003e，当应用程序向eureka注册时，它使用它的IP地址而不是它的主机名。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果主机名不能由Java确定，则将IP地址发送给Eureka。设置主机名的唯一方法是设置eureka.instance.hostname属性。你可以在运行时使用环境变量设置主机名—例如：\u003ccode\u003eeureka.instance.hostname=${HOST_NAME}\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"27-保护eureka-server\"\u003e2.7 保护Eureka Server\u003c/h3\u003e\n\u003cp\u003e只需通过\u003ccode\u003eSpring-boot-starter-Security\u003c/code\u003e将\u003ccode\u003eSpring Security\u003c/code\u003e添加到服务器的包管理文件中，就可以保护Eureka服务器。默认情况下，当Spring Security在包管理文件中，它将要求一个有效的CSRF令牌被发送到应用程序。Eureka客户端通常不会拥有一个有效的跨站请求伪造(CSRF)令牌，你需要为\u003ccode\u003e/Eureka/**\u003c/code\u003e端点禁用这个要求。例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@EnableWebSecurity\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eWebSecurityConfig\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eWebSecurityConfigurerAdapter\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpSecurity\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecsrf\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eignoringAntMatchers\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/eureka/**\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有关CSRF的更多信息，请参阅\u003ca href=\"https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#csrf\"\u003eSpring Security\u003c/a\u003e文档。\n在Spring Cloud Samples \u003ca href=\"https://github.com/spring-cloud-samples/eureka/tree/Eureka-With-Security\"\u003erepo\u003c/a\u003e中可以找到一个演示Eureka Server。\u003c/p\u003e\n\u003ch3 id=\"28-jdk11支持\"\u003e2.8 JDK11支持\u003c/h3\u003e\n\u003cp\u003eJDK 11删除了Eureka服务器所依赖的JAXB模块。如果你想在运行Eureka服务器时使用JDK 11，你必须在你的POM或Gradle文件中包含这些依赖项。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u0026lt;dependency\u0026gt;\n    \u0026lt;groupId\u0026gt;org.glassfish.jaxb\u0026lt;/groupId\u0026gt;\n    \u0026lt;artifactId\u0026gt;jaxb-runtime\u0026lt;/artifactId\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-配置属性\"\u003e3. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有Spring Cloud Netflix相关配置属性的列表，请检查\u003ca href=\"https://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      },
    {
        id: 8,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-openfeign/",
        title: "Spring Cloud OpenFeign",
        description: "声明式REST客户端。Feign创建了一个用JAX-RS或Spring MVC注释装饰的接口的动态实现。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月24日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-openfeign\"\u003ehttps://github.com/spring-cloud/spring-cloud-openfeign\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e该项目通过自动配置和与Spring环境及其他Spring编程模型习语的绑定，为Spring Boot应用提供OpenFeign集成。\u003c/p\u003e\n\u003ch2 id=\"1--声明式rest客户feign\"\u003e1.  声明式REST客户：Feign\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/OpenFeign/feign\"\u003eFeign\u003c/a\u003e是一个声明式的网络服务客户端。它使编写Web服务客户端更容易。要使用Feign，需要创建一个接口并对其进行注释。它有可插拔的注解支持，包括Feign注解和JAX-RS注解。Feign还支持可插入的编码器和解码器。Spring Cloud增加了对Spring MVC注释的支持，并支持使用Spring Web中默认使用的\u003ccode\u003eHttpMessageConverters\u003c/code\u003e。Spring Cloud集成了Eureka、Spring Cloud CircuitBreaker以及Spring Cloud LoadBalancer，以便在使用Feign时提供一个负载均衡的http客户端。\u003c/p\u003e\n\u003ch3 id=\"11-如何引入-feign\"\u003e1.1. 如何引入 Feign\u003c/h3\u003e\n\u003cp\u003e要在你的项目中包含Feign，请使用group为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和artifact id为\u003ccode\u003espring-cloud-starter-openfeign\u003c/code\u003e的\u003ccode\u003estarter\u003c/code\u003e。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解关于用当前Spring Cloud发布列车设置构建系统的详细信息。\u003c/p\u003e\n\u003cp\u003eExample spring boot app\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableFeignClients\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eStoreClient.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetStores\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ePage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetStores\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePageable\u003c/span\u003e \u003cspan class=\"n\"\u003epageable\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ePOST\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores/{storeId}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econsumes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eStore\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@PathVariable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;storeId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eLong\u003c/span\u003e \u003cspan class=\"n\"\u003estoreId\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eStore\u003c/span\u003e \u003cspan class=\"n\"\u003estore\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在\u003ccode\u003e@FeignClient\u003c/code\u003e注解中，字符串值（上面的 \u0026ldquo;stores\u0026rdquo;）是一个任意的客户端名称，它被用来创建一个\u003ca href=\"https://github.com/spring-cloud/spring-cloud-commons/blob/main/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/blocking/client/BlockingLoadBalancerClient.java\"\u003eSpring Cloud LoadBalancer客户端\u003c/a\u003e。你也可以使用\u003ccode\u003eurl\u003c/code\u003e属性指定一个URL（绝对值或只是一个主机名）。应用程序上下文中的Bean名称是接口的完全限定名称。要指定你自己的别名值，你可以使用\u003ccode\u003e@FeignClient\u003c/code\u003e注解的\u003ccode\u003equalifiers\u003c/code\u003e值。\u003c/p\u003e\n\u003cp\u003e上面的负载平衡器客户端将想发现 \u0026ldquo;stores \u0026ldquo;服务的物理地址。如果你的应用程序是一个Eureka客户端，那么它将在Eureka服务注册表中解析该服务。如果你不想使用Eureka，你可以使用\u003ca href=\"https://cloud.spring.io/spring-cloud-static/spring-cloud-commons/current/reference/html/#simplediscoveryclient\"\u003e\u003ccode\u003eSimpleDiscoveryClient\u003c/code\u003e\u003c/a\u003e在你的外部配置中配置一个服务器列表。\u003c/p\u003e\n\u003cp\u003eSpring Cloud OpenFeign支持Spring Cloud LoadBalancer的阻塞模式的所有可用功能。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer\"\u003e项目文档\u003c/a\u003e中阅读更多关于它们的信息。\u003c/p\u003e\n\u003ch3 id=\"12-覆盖feign默认值\"\u003e1.2. 覆盖Feign默认值\u003c/h3\u003e\n\u003cp\u003eSpring Cloud的Feign支持中的一个核心概念是命名的客户端。每个feign客户端都是一个组件集合的一部分，这些组件一起工作，根据需要联系远程服务器，集合有一个名字，你作为应用开发者使用\u003ccode\u003e@FeignClient\u003c/code\u003e注解给它。Spring Cloud使用\u003ccode\u003eFeignClientsConfiguration\u003c/code\u003e为每个命名的客户端按需创建一个新的组合作为\u003ccode\u003eApplicationContext\u003c/code\u003e。这包括（除其他外）一个\u003ccode\u003efeign.Decoder\u003c/code\u003e，一个\u003ccode\u003efeign.Encoder\u003c/code\u003e，和一个\u003ccode\u003efeign.Contract\u003c/code\u003e。通过使用\u003ccode\u003e@FeignClient\u003c/code\u003e注解的\u003ccode\u003econtextId\u003c/code\u003e属性，可以重写该集合的名称。\u003c/p\u003e\n\u003cp\u003eSpring Cloud允许你通过使用\u003ccode\u003e@FeignClient\u003c/code\u003e声明额外的配置（在\u003ccode\u003eFeignClientsConfiguration\u003c/code\u003e之上）来完全控制feign客户端。\u003c/p\u003e\n\u003cp\u003eExample\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFooConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//..\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这种情况下，客户端由 \u003ccode\u003eFeignClientsConfiguration\u003c/code\u003e 中的组件和 \u003ccode\u003eFooConfiguration\u003c/code\u003e中的任何组件组成（后者将覆盖前者）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eFooConfiguration\u003c/code\u003e不需要用\u003ccode\u003e@Configuration\u003c/code\u003e来注释。然而，如果是这样的话，请注意将它从任何\u003ccode\u003e@ComponentScan\u003c/code\u003e中排除，否则将包括这个配置，因为它将成为\u003ccode\u003efeign.Decoder\u003c/code\u003e、\u003ccode\u003efeign.Encoder\u003c/code\u003e、\u003ccode\u003efeign.Contract\u003c/code\u003e等的默认来源。这可以通过把它放在一个单独的、与任何\u003ccode\u003e@ComponentScan\u003c/code\u003e或\u003ccode\u003e@SpringBootApplication\u003c/code\u003e不重叠的包中来避免，或者可以在\u003ccode\u003e@ComponentScan\u003c/code\u003e中明确地排除它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用\u003ccode\u003e@FeignClient\u003c/code\u003e注解的\u003ccode\u003econtextId\u003c/code\u003e属性，除了改变\u003ccode\u003eApplicationContext\u003c/code\u003e集合的名称外，它将覆盖客户端名称的别名，它将作为为该客户端创建的配置Bean名称的一部分。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e以前，使用\u003ccode\u003eurl\u003c/code\u003e属性，不需要\u003ccode\u003ename\u003c/code\u003e属性。现在使用\u003ccode\u003ename\u003c/code\u003e是必须的\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e在\u003ccode\u003ename\u003c/code\u003e和\u003ccode\u003eurl\u003c/code\u003e属性中支持占位符。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;${feign.name}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;${feign.url}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//..\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSpring Cloud OpenFeign默认为feign提供了以下bean（ \u003ccode\u003eBeanType\u003c/code\u003e beanName: \u003ccode\u003eClassName\u003c/code\u003e ）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eDecoder\u003c/code\u003e feignDecoder: \u003ccode\u003eResponseEntityDecoder\u003c/code\u003e (它包装了一个\u003ccode\u003eSpringDecoder\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eEncoder\u003c/code\u003e feignEncoder: \u003ccode\u003eSpringEncoder\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eLogger\u003c/code\u003e feignLogger: \u0026ldquo;Slf4jLogger\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMicrometerCapability\u003c/code\u003e micrometerCapability: 如果\u003ccode\u003efeign-micrometer\u003c/code\u003e在classpath上并且\u003ccode\u003eMeterRegistry\u003c/code\u003e是可用的\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eContract\u003c/code\u003e feignContract: \u003ccode\u003eSpringMvcContract\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFeign.Builder\u003c/code\u003e feignBuilder: \u0026ldquo;FeignCircuitBreaker.Builder\u0026rdquo;。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eClient\u003c/code\u003e feignClient: 如果Spring Cloud LoadBalancer在classpath上，就会使用\u003ccode\u003eFeignBlockingLoadBalancerClient\u003c/code\u003e。如果它们都不在classpath上，则使用默认的feign客户端。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003espring-cloud-starter-openfeign\u003c/code\u003e支持\u003ccode\u003espring-cloud-starter-loadbalancer\u003c/code\u003e。然而，由于它是一个可选的依赖关系，如果你想使用它，你需要确保它被添加到你的项目中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eOkHttpClient和ApacheHttpClient以及ApacheHC5 feign客户端可以通过设置\u003ccode\u003efeign.okhttp.enabled\u003c/code\u003e或\u003ccode\u003efeign.httpclient.enabled\u003c/code\u003e或\u003ccode\u003efeign.httpclient.hc5.enabled\u003c/code\u003e分别为\u003ccode\u003etrue\u003c/code\u003e，并将它们放在classpath上。你可以自定义使用的HTTP客户端，当使用Apache时提供\u003ccode\u003eorg.apache.http.impl.client.CloseableHttpClient\u003c/code\u003e，当使用OK HTTP时提供\u003ccode\u003eokhttp3.OkHttpClient\u003c/code\u003e，当使用Apache HC5时提供\u003ccode\u003eorg.apache.hc.client5.http.impl.classic.CloseableHttpClient\u003c/code\u003e的Bean。\u003c/p\u003e\n\u003cp\u003eSpring Cloud OpenFeign \u003cem\u003e不\u003c/em\u003e为feign提供以下Bean，但仍然从应用上下文中查找这些类型的Bean来创建feign客户端。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eLogger.Level\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eRetryer\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eErrorDecoder\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eRequest.Options\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCollection\u0026lt;RequestInterceptor\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSetterFactory\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eQueryMapEncoder\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCapability\u003c/code\u003e (默认提供\u003ccode\u003eMicrometerCapability\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e默认情况下，创建一个类型为\u003ccode\u003eRetryer.NEVER_RETRY\u003c/code\u003e的bean，它将禁止重试。注意这个重试行为与Feign的默认行为不同，它将自动重试IOExceptions，将其视为瞬时网络相关的异常，以及从ErrorDecoder抛出的任何RetryableException。\u003c/p\u003e\n\u003cp\u003e创建一个这些类型的Bean，并将其放置在\u003ccode\u003e@FeignClient\u003c/code\u003e配置中（如上面的\u003ccode\u003eFooConfiguration\u003c/code\u003e），允许你覆盖所述的每一个Bean。\u003c/p\u003e\n\u003cp\u003eExample\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eContract\u003c/span\u003e \u003cspan class=\"nf\"\u003efeignContract\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eContract\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicAuthRequestInterceptor\u003c/span\u003e \u003cspan class=\"nf\"\u003ebasicAuthRequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicAuthRequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;password\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这就用\u003ccode\u003efeign.Contract.Default\u003c/code\u003e替换了\u003ccode\u003eSpringMvcContract\u003c/code\u003e，并在\u003ccode\u003eRequestInterceptor\u003c/code\u003e的集合中添加了一个\u003ccode\u003eRequestInterceptor\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e@FeignClient\u003c/code\u003e也可以使用配置属性进行配置。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003efeign\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efeignName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003econnectTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ereadTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eloggerLevel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efull\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eerrorDecoder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleErrorDecoder\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eretryer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleRetryer\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultQueryParameters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"nt\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003equeryValue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultRequestHeaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"nt\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eheaderValue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003erequestInterceptors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e- \u003cspan class=\"l\"\u003ecom.example.FooRequestInterceptor\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e- \u003cspan class=\"l\"\u003ecom.example.BarRequestInterceptor\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003edecode404\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eencoder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleEncoder\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003edecoder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleDecoder\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003econtract\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleContract\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ecapabilities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e- \u003cspan class=\"l\"\u003ecom.example.FooCapability\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e- \u003cspan class=\"l\"\u003ecom.example.BarCapability\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003emetrics.enabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认配置可以在\u003ccode\u003e@EnableFeignClients\u003c/code\u003e属性\u003ccode\u003edefaultConfiguration\u003c/code\u003e中指定，其方式与上述类似。不同的是，这个配置将适用于\u003cem\u003e所有\u003c/em\u003efeign客户。\u003c/p\u003e\n\u003cp\u003e如果你喜欢使用配置属性来配置所有的\u003ccode\u003e@FeignClient\u003c/code\u003e，你可以创建带有\u003ccode\u003edefault\u003c/code\u003efeign名称的配置属性。\u003c/p\u003e\n\u003cp\u003e你可以使用\u003ccode\u003efeign.client.config.feignName.defaultQueryParameters\u003c/code\u003e和\u003ccode\u003efeign.client.config.feignName.defaultRequestHeaders\u003c/code\u003e来指定查询参数和头信息，这些参数将在每个名为\u003ccode\u003efeignName\u003c/code\u003e的客户端的请求中发送。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003efeign\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003econnectTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ereadTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eloggerLevel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebasic\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果我们同时创建了\u003ccode\u003e@Configuration\u003c/code\u003ebean和配置属性，配置属性将获胜。它将覆盖\u003ccode\u003e@Configuration\u003c/code\u003e的值。但如果你想改变优先级为\u003ccode\u003e@Configuration\u003c/code\u003e，你可以把\u003ccode\u003efeign.client.default-to-properties\u003c/code\u003e改为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果我们想创建多个具有相同名称或网址的feign客户端，使它们指向同一个服务器，但每个客户端都有不同的自定义配置，那么我们必须使用\u003ccode\u003e@FeignClient\u003c/code\u003e的\u003ccode\u003econtextId\u003c/code\u003e属性，以避免这些配置Bean的名称冲突。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtextId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fooClient\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFooConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//..\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtextId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;barClient\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBarConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eBarClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//..\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以配置FeignClient不继承父环境的bean。你可以通过重写\u003ccode\u003einheritParentConfiguration()\u003c/code\u003e在\u003ccode\u003eFeignClientConfigurer\u003c/code\u003ebean中返回\u003ccode\u003efalse\u003c/code\u003e来实现。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eFeignClientConfigurer\u003c/span\u003e \u003cspan class=\"nf\"\u003efeignClientConfigurer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eFeignClientConfigurer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n                \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n                \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003einheritParentConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e默认情况下，Feign客户端不对斜线\u003ccode\u003e/\u003c/code\u003e字符进行编码。你可以通过设置\u003ccode\u003efeign.client.decodeSlash\u003c/code\u003e的值为\u003ccode\u003efalse\u003c/code\u003e来改变这一行为。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"121-springencoder-configuration\"\u003e1.2.1. SpringEncoder configuration\u003c/h4\u003e\n\u003cp\u003e在我们提供的 \u003ccode\u003eSpringEncoder\u003c/code\u003e 中，我们为二进制内容类型设置了 \u003ccode\u003enull\u003c/code\u003e 字符集，为所有其他类型设置了 \u003ccode\u003eUTF-8\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你可以通过设置\u003ccode\u003efeign.encoder.charset-from-content-type\u003c/code\u003e的值为\u003ccode\u003etrue\u003c/code\u003e来修改这一行为，从\u003ccode\u003eContent-Type\u003c/code\u003e头的字符集中获得字符集。\u003c/p\u003e\n\u003ch3 id=\"13-超时处理\"\u003e1.3. 超时处理\u003c/h3\u003e\n\u003cp\u003e我们可以在默认客户端和命名客户端上配置超时。OpenFeign使用两个超时参数。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003econnectTimeout\u003c/code\u003e防止因服务器处理时间过长而阻塞调用者。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereadTimeout\u003c/code\u003e从连接建立时开始应用，当返回响应的时间过长时触发。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果服务器没有运行或可用，数据包的结果是\u003cem\u003econnection refused\u003c/em\u003e。通信会以错误信息或回退的方式结束。如果 \u003ccode\u003econnectTimeout\u003c/code\u003e 设置得很低，这可能会在它之前发生。执行查找和接收这种数据包所需的时间导致了这一延迟的重要部分。它可以根据涉及DNS查询的远程主机而改变。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"14-手动创建feign客户端\"\u003e1.4. 手动创建Feign客户端\u003c/h3\u003e\n\u003cp\u003e在某些情况下，可能需要对你的Feign客户进行定制，而使用上述方法是不可能的。在这种情况下，你可以使用\u003ca href=\"https://github.com/OpenFeign/feign/#basics\"\u003eFeign Builder API\u003c/a\u003e创建客户端。下面是一个例子，它创建了两个具有相同接口的Feign客户端，但每个客户端都配置了一个单独的请求拦截器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Import\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFeignClientsConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooController\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eFooClient\u003c/span\u003e \u003cspan class=\"n\"\u003efooClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eFooClient\u003c/span\u003e \u003cspan class=\"n\"\u003eadminClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eFooController\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eClient\u003c/span\u003e \u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEncoder\u003c/span\u003e \u003cspan class=\"n\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eDecoder\u003c/span\u003e \u003cspan class=\"n\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eContract\u003c/span\u003e \u003cspan class=\"n\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMicrometerCapability\u003c/span\u003e \u003cspan class=\"n\"\u003emicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efooClient\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicAuthRequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etarget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFooClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://PROD-SVC\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadminClient\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicAuthRequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;admin\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;admin\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etarget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFooClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://PROD-SVC\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e在上面的例子中，\u003ccode\u003eFeignClientsConfiguration.class\u003c/code\u003e是由Spring Cloud OpenFeign提供的默认配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ePROD-SVC\u003c/code\u003e是客户将向其发出请求的服务名称。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFeign \u003ccode\u003eContract\u003c/code\u003e对象定义了哪些注解和值对接口有效。自动连接的\u003ccode\u003eContract\u003c/code\u003ebean提供了对SpringMVC注释的支持，而不是默认的Feign本地注释。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你也可以使用\u003ccode\u003eBuilder\u003c/code\u003e来配置FeignClient不从父级上下文中继承bean。你可以通过覆盖调用\u003ccode\u003eBuilder\u003c/code\u003e上的\u003ccode\u003einheritParentContext(false)\u003c/code\u003e来做到这一点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"15-feign-spring-cloud-断路器\"\u003e1.5. Feign Spring Cloud 断路器\u003c/h3\u003e\n\u003cp\u003e如果Spring Cloud CircuitBreaker在classpath上，并且\u003ccode\u003efeign.circuitbreaker.enabled=true\u003c/code\u003e，Feign将用断路器来包装所有方法。\u003c/p\u003e\n\u003cp\u003e要在每个客户的基础上禁用Spring Cloud CircuitBreaker的支持，需要创建一个vanilla \u003ccode\u003eFeign.Builder\u003c/code\u003e，其范围为 \u003ccode\u003eprototype\u003c/code\u003e，例如。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Scope\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;prototype\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eFeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e \u003cspan class=\"nf\"\u003efeignBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eFeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e断路器的名称遵循这种模式\u003ccode\u003e\u0026lt;feignClientName\u0026gt;#\u0026lt;calledMethod\u0026gt;\u003c/code\u003e。当调用名称为 \u003ccode\u003efoo\u003c/code\u003e 的\u003ccode\u003e@FeignClient\u003c/code\u003e 时，被调用的接口方法为 \u003ccode\u003ebar\u003c/code\u003e，那么断路器的名称将是 \u003ccode\u003efoo_bar\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要启用Spring Cloud CircuitBreaker组，请设置\u003ccode\u003efeign.circuitbreaker.group.enabled\u003c/code\u003e属性为\u003ccode\u003etrue\u003c/code\u003e（默认为\u003ccode\u003efalse\u003c/code\u003e）。\u003c/p\u003e\n\u003ch3 id=\"16-feign-spring-cloud-断路器熔断\"\u003e1.6. Feign Spring Cloud 断路器熔断\u003c/h3\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker支持\u003ccode\u003efallback\u003c/code\u003e的概念：一个默认的代码路径，在电路打开或出现错误时执行。要为一个给定的\u003ccode\u003e@FeignClient\u003c/code\u003e启用回退，将\u003ccode\u003efallback\u003c/code\u003e属性设置为实现回退的类名。你还需要将你的实现声明为一个Spring Bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http://localhost:${server.port}/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efallback\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFallback\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHello\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/hellonotfound\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFallback\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eTestClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHello\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eNoFallbackAvailableException\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Boom!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRuntimeException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Fixed response\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果需要访问触发\u003ccode\u003efallback\u003c/code\u003e的原因，可以使用\u003ccode\u003e@FeignClient\u003c/code\u003e里面的\u003ccode\u003efallbackFactory\u003c/code\u003e属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;testClientWithFactory\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http://localhost:${server.port}/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efallbackFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTestFallbackFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestClientWithFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHello\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/hellonotfound\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestFallbackFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eFallbackFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eFallbackWithFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eFallbackWithFactory\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e \u003cspan class=\"n\"\u003ecause\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eFallbackWithFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFallbackWithFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eTestClientWithFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHello\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eNoFallbackAvailableException\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Boom!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRuntimeException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Fixed response\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"17-feign-和-primary\"\u003e1.7. Feign 和 @Primary\u003c/h3\u003e\n\u003cp\u003e当使用Feign与Spring Cloud CircuitBreaker回退时，\u003ccode\u003eApplicationContext\u003c/code\u003e中有多个相同类型的bean。这将导致\u003ccode\u003e@Autowired\u003c/code\u003e不工作，因为没有确切的一个bean，或一个被标记为主要的bean。为了解决这个问题，Spring Cloud OpenFeign将所有Feign实例标记为\u003ccode\u003e@Primary\u003c/code\u003e，这样Spring Framework就知道要注入哪个bean。在某些情况下，这可能是不可取的。要关闭这种行为，请将\u003ccode\u003e@FeignClient\u003c/code\u003e的\u003ccode\u003eprimary\u003c/code\u003e属性设置为false。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprimary\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eHelloClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// methods here\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"18-feign-支持继承\"\u003e1.8. Feign 支持继承\u003c/h3\u003e\n\u003cp\u003eFeign通过单继承接口支持模板式的apis。这允许将常见的操作归入方便的基础接口。\u003c/p\u003e\n\u003cp\u003eUserService.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/users/{id}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"nf\"\u003egetUser\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@PathVariable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUserResource.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserResource\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eUserService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUserClient.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003eproject.user\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;users\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserClient\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eUserService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e一般来说，在服务器和客户端之间共享一个接口是不可取的。它引入了紧耦合，而且实际上在目前的形式下也不能与Spring MVC一起工作（方法参数映射不被继承）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"19-feign-请求响应-压缩\"\u003e1.9. Feign 请求/响应 压缩\u003c/h3\u003e\n\u003cp\u003e你可以考虑为你的Feign请求启用请求或响应的GZIP压缩。你可以通过启用其中一个属性来做到这一点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.compression.request.enabled=true\nfeign.compression.response.enabled=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFeign请求压缩给你的设置与你可能为你的网络服务器设置的类似。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.compression.request.enabled=true\nfeign.compression.request.mime-types=text/xml,application/xml,application/json\nfeign.compression.request.min-request-size=2048\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这些属性允许你对压缩的媒体类型和最小请求阈值长度进行选择。\u003c/p\u003e\n\u003cp\u003e对于除OkHttpClient以外的http客户端，可以启用默认的gzip解码器，以UTF-8编码解码gzip响应。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.compression.response.enabled=true\nfeign.compression.response.useGzipDecoder=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"110-feign-日志\"\u003e1.10. Feign 日志\u003c/h3\u003e\n\u003cp\u003e每个创建的Feign客户端都会创建一个记录器。默认情况下，日志记录器的名称是用于创建Feign客户端的接口的全类名称。Feign的日志只对\u003ccode\u003eDEBUG\u003c/code\u003e级别做出响应。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003elogging.level.project.user.UserClient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDEBUG\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以为每个客户配置\u003ccode\u003eLogger.Level\u003c/code\u003e对象，告诉Feign要记录多少。选择是。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNONE\u003c/code\u003e , 不记录(\u003cstrong\u003eDEFAULT\u003c/strong\u003e)。\n\u003ccode\u003eBASIC\u003c/code\u003e , 只记录请求方法和URL以及响应状态代码和执行时间。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eHEADERS\u003c/code\u003e , 记录基本信息以及请求和响应头信息。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFULL\u003c/code\u003e , 记录请求和响应的头信息、正文和元数据。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e例如，下面将设置\u003ccode\u003eLogger.Level\u003c/code\u003e为\u003ccode\u003eFULL\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eLogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eLevel\u003c/span\u003e \u003cspan class=\"nf\"\u003efeignLoggerLevel\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eLogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eLevel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eFULL\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"111-feign-capability-支持\"\u003e1.11. Feign Capability 支持\u003c/h3\u003e\n\u003cp\u003eFeign的能力暴露了Feign的核心组件，因此这些组件可以被修改。例如，这些功能可以使用 \u003ccode\u003eClient\u003c/code\u003e，对其进行\u003cem\u003e装饰\u003c/em\u003e，并将装饰后的实例反馈给Feign。对\u003ccode\u003emetrics libraries\u003c/code\u003e的支持就是一个很好的现实例子。参见\u003ca href=\"https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/#feign-metrics\"\u003eFeign metrics\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e创建一个或多个 \u003ccode\u003eCapability\u003c/code\u003e Bean，并把它们放在\u003ccode\u003e@FeignClient\u003c/code\u003e 配置中，可以让你注册它们并修改相关客户端的行为。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eCapability\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"112-feign-metrics\"\u003e1.12. Feign metrics\u003c/h3\u003e\n\u003cp\u003e如果以下条件都是\u003ccode\u003etrue\u003c/code\u003e，一个\u003ccode\u003eMicrometerCapability\u003c/code\u003ebean就会被创建和注册，这样你的Feign客户端就会向\u003ccode\u003eMicrometer\u003c/code\u003e发布\u003ccode\u003emetrics\u003c/code\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efeign-micrometer\u003c/code\u003e在classpath上\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMeterRegistry\u003c/code\u003e bean是可用的\u003c/li\u003e\n\u003cli\u003efeign metrics properties设置为\u003ccode\u003etrue\u003c/code\u003e（默认）\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efeign.metrics.enabled=true\u003c/code\u003e (对于所有客户端)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efeign.client.config.feignName.metrics.enabled=true\u003c/code\u003e (对于单个客户端)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你的应用程序已经使用了Micrometer，启用\u003ccode\u003emetrics\u003c/code\u003e就像把\u003ccode\u003efeign-micrometer\u003c/code\u003e放到classpath上一样简单。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你也可以通过以下方式禁用该功能。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e从你的classpath中排除\u003ccode\u003efeign-micrometer\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e将feign的一个metrics properties设置为 \u0026ldquo;false\u0026rdquo;。\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efeign.metrics.enabled=false\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efeign.client.config.feignName.metrics.enabled=false\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003efeign.metrics.enabled=false\u003c/code\u003e 禁用对\u003cstrong\u003e所有\u003c/strong\u003eFeign客户端的\u003ccode\u003emetrics\u003c/code\u003e支持，而不考虑客户端级别的标志值。\u003ccode\u003efeign.client.config.feignName.metrics.enabled\u003c/code\u003e 。如果你想启用或禁用每个客户端的merics，不要设置\u003ccode\u003efeign.metrics.enabled\u003c/code\u003e，使用\u003ccode\u003efeign.client.config.feignName.metrics.enabled\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你也可以通过注册你自己的bean来定制\u003ccode\u003eMicrometerCapability\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMicrometerCapability\u003c/span\u003e \u003cspan class=\"nf\"\u003emicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMeterRegistry\u003c/span\u003e \u003cspan class=\"n\"\u003emeterRegistry\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eMicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emeterRegistry\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"113--feign-querymap-support\"\u003e1.13.  Feign @QueryMap support\u003c/h3\u003e\n\u003cp\u003eOpenFeign \u003ccode\u003e@QueryMap\u003c/code\u003e注解提供了对POJO的支持，可用作GET参数映射。不幸的是，默认的OpenFeign QueryMap注解与Spring不兼容，因为它缺少一个\u003ccode\u003evalue\u003c/code\u003e属性。\u003c/p\u003e\n\u003cp\u003eSpring Cloud OpenFeign提供了一个等价的\u003ccode\u003e@SpringQueryMap\u003c/code\u003e注解，用于注解一个POJO或Map参数作为查询参数地图。\u003c/p\u003e\n\u003cp\u003e例如，\u003ccode\u003eParams\u003c/code\u003e类定义了参数\u003ccode\u003eparam1\u003c/code\u003e和\u003ccode\u003eparam2\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// Params.java\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eParams\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eparam2\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// [Getters and setters omitted for brevity]\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的feign客户端通过使用\u003ccode\u003e@SpringQueryMap\u003c/code\u003e注解来使用\u003ccode\u003eParams\u003c/code\u003e类。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eDemoTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003edemoEndpoint\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@SpringQueryMap\u003c/span\u003e \u003cspan class=\"n\"\u003eParams\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你需要对生成的查询参数图有更多的控制，你可以实现一个自定义的\u003ccode\u003eQueryMapEncoder\u003c/code\u003ebean。\u003c/p\u003e\n\u003ch3 id=\"114-hateoas-support\"\u003e1.14. HATEOAS support\u003c/h3\u003e\n\u003cp\u003eSpring提供了一些API来创建遵循\u003ca href=\"https://en.wikipedia.org/wiki/HATEOAS\"\u003eHATEOAS\u003c/a\u003e原则的REST表示，\u003ca href=\"https://spring.io/projects/spring-hateoas\"\u003eSpring Hateoas\u003c/a\u003e和\u003ca href=\"https://spring.io/projects/spring-data-rest\"\u003eSpring Data REST\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e如果你的项目使用\u003ccode\u003eorg.springframework.boot:spring-boot-starter-hateoas\u003c/code\u003e启动器或\u003ccode\u003eorg.springframework.boot:spring-boot-starter-data-rest\u003c/code\u003e启动器，Feign HATEOAS支持默认为启用。\u003c/p\u003e\n\u003cp\u003e当HATEOAS支持被启用时，Feign客户端被允许序列化和反序列化HATEOAS表示模型。\u003ca href=\"https://docs.spring.io/spring-hateoas/docs/1.0.0.M1/apidocs/org/springframework/hateoas/EntityModel.html\"\u003eEntityModel\u003c/a\u003e, \u003ca href=\"https://docs.spring.io/spring-hateoas/docs/1.0.0.M1/apidocs/org/springframework/hateoas/CollectionModel.html\"\u003eCollectionModel\u003c/a\u003e 和 \u003ca href=\"https://docs.spring.io/spring-hateoas/docs/1.0.0.M1/apidocs/org/springframework/hateoas/PagedModel.html\"\u003ePagedModel\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eDemoTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eCollectionModel\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetStores\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"115-spring-matrixvariable-support\"\u003e1.15. Spring @MatrixVariable Support\u003c/h3\u003e\n\u003cp\u003eSpring Cloud OpenFeign提供对Spring \u003ccode\u003e@MatrixVariable\u003c/code\u003e注解的支持。\u003c/p\u003e\n\u003cp\u003e如果一个Map被作为方法参数传递，\u003ccode\u003e@MatrixVariable\u003c/code\u003e路径段是通过用\u003ccode\u003e=\u003c/code\u003e连接地图中的键值对而创建的。\u003c/p\u003e\n\u003cp\u003e如果传递的是不同的对象，那么\u003ccode\u003e@MatrixVariable\u003c/code\u003e注解中提供的\u003ccode\u003ename\u003c/code\u003e（如果定义了的话）或者注解的变量名将用`=·与提供的方法参数连接。\u003c/p\u003e\n\u003cp\u003e重要提示\u003c/p\u003e\n\u003cp\u003e即使在服务器端，Spring并不要求用户将路径段占位符的名称与矩阵变量的名称相同，因为这在客户端太模糊了，Spring Cloud OpenFeign要求你添加一个路径段占位符，其名称与\u003ccode\u003e@MatrixVariable\u003c/code\u003e注解（如果定义了）中提供的\u003ccode\u003ename\u003c/code\u003e或注释变量的名称一致。\u003c/p\u003e\n\u003cp\u003eFor example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/objects/links/{matrixVars}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetObjects\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@MatrixVariable\u003c/span\u003e \u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ematrixVars\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意，变量名和路径段占位符都被称为\u003ccode\u003ematrixVars\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eDemoTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eCollectionModel\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetStores\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"116-feign-collectionformat-support\"\u003e1.16. Feign CollectionFormat support\u003c/h3\u003e\n\u003cp\u003e我们通过提供\u003ccode\u003e@CollectionFormat\u003c/code\u003e注解来支持\u003ccode\u003efeign.CollectionFormat\u003c/code\u003e。你可以通过传递所需的\u003ccode\u003efeign.CollectionFormat\u003c/code\u003e作为注解值，用它来注解一个Feign客户端方法。\u003c/p\u003e\n\u003cp\u003e在下面的例子中，使用\u003ccode\u003eCSV\u003c/code\u003e格式而不是默认的\u003ccode\u003eEXPLODED\u003c/code\u003e来处理该方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003ePageableFeignClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@CollectionFormat\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eCollectionFormat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eCSV\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/page\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e \u003cspan class=\"nf\"\u003eperformRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePageable\u003c/span\u003e \u003cspan class=\"n\"\u003epage\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e在发送\u003ccode\u003ePageable\u003c/code\u003e作为查询参数时设置\u003ccode\u003eCSV\u003c/code\u003e格式，以便正确编码。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"117-reactive-support\"\u003e1.17. Reactive Support\u003c/h3\u003e\n\u003cp\u003e由于\u003ca href=\"https://github.com/OpenFeign/feign\"\u003eOpenFeign项目\u003c/a\u003e目前不支持Reactive客户端，如\u003ca href=\"https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/reactive/function/client/WebClient.html\"\u003eSpring WebClient\u003c/a\u003e，Spring Cloud OpenFeign也不支持。一旦核心项目中出现，我们将在此添加对它的支持。\u003c/p\u003e\n\u003cp\u003e在这之前，我们建议使用\u003ca href=\"https://github.com/Playtika/feign-reactive\"\u003efeign-reactive\u003c/a\u003e来支持Spring WebClient。\u003c/p\u003e\n\u003ch4 id=\"1171-早期初始化错误\"\u003e1.17.1. 早期初始化错误\u003c/h4\u003e\n\u003cp\u003e根据你使用Feign客户端的方式，你可能在启动应用程序时看到初始化错误。为了解决这个问题，你可以在自动连接你的客户端时使用\u003ccode\u003eObjectProvider\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"n\"\u003eObjectProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eTestFeginClient\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etestFeginClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"118-spring-data-support\"\u003e1.18. Spring Data Support\u003c/h3\u003e\n\u003cp\u003e你可以考虑为支持\u003ccode\u003eorg.springframework.data.domain.Page\u003c/code\u003e和\u003ccode\u003eorg.springframework.data.domain.Sort\u003c/code\u003e解码而启用\u003ccode\u003eJackson\u003c/code\u003e模块。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.autoconfiguration.jackson.enabled=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"119-spring-refreshscope-support\"\u003e1.19. Spring @RefreshScope Support\u003c/h3\u003e\n\u003cp\u003e如果启用了Feign client refresh，每个feign客户端都是以\u003ccode\u003efeign.Request.Options\u003c/code\u003e作为刷新范围的bean来创建的。这意味着诸如\u003ccode\u003econnectTimeout\u003c/code\u003e和\u003ccode\u003ereadTimeout\u003c/code\u003e等属性可以通过\u003ccode\u003ePOST /actuator/refresh\u003c/code\u003e对任何Feign客户端实例进行刷新。\u003c/p\u003e\n\u003cp\u003e默认情况下，Feign客户端的刷新行为是禁用的。使用以下属性来启用刷新行为。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.client.refresh-enabled=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e不要用\u003c/strong\u003e \u003ccode\u003e@RefreshScope\u003c/code\u003e 注解来注释\u003ccode\u003e@FeignClient\u003c/code\u003e接口。不要给\u003ccode\u003e@FeignClient\u003c/code\u003e接口加上\u003ccode\u003e@RefreshScope\u003c/code\u003e注解。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-配置属性\"\u003e2. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有Spring Cloud OpenFeign相关的配置属性列表，请查看\u003ca href=\"https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      },
    {
        id: 9,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-security-/",
        title: "Spring Cloud Security",
        description: "Spring Cloud Security提供了一组原语来构建安全的应用程序和服务。一个可以在外部（或中央）进行大量配置的声明性模型，适合于实现由合作的远程组件组成的大型系统，通常有一个中央身份管理服务。它在Cloud Foundry这样的服务平台上也非常容易使用。在Spring Boot和Spring Security OAuth2的基础上，我们可以快速创建系统，实现单点登录、令牌中继和令牌交换等常见模式。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：2.2.5\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月25日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-security/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-security/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-security\"\u003ehttps://github.com/spring-cloud/spring-cloud-security\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Security提供了一组原语来构建安全的应用程序和服务。一个可以在外部（或中央）进行大量配置的声明性模型，适合于实现由合作的远程组件组成的大型系统，通常有一个中央身份管理服务。它在Cloud Foundry这样的服务平台上也非常容易使用。在Spring Boot和Spring Security OAuth2的基础上，我们可以快速创建系统，实现单点登录、令牌中继和令牌交换等常见模式。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在未来的主要版本中，这个项目所包含的功能将转移到各自的项目中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud是在非限制性的Apache 2.0许可下发布的。如果你想为这部分文档做出贡献，或者发现错误，请在\u003ca href=\"https://github.com/spring-cloud/spring-cloud-security\"\u003egithub\u003c/a\u003e的项目中找到源代码和问题跟踪器。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"快速开始\"\u003e快速开始\u003c/h2\u003e\n\u003cp\u003e这里有一个Spring Cloud的 \u0026ldquo;Hello World \u0026ldquo;应用，采用HTTP Basic认证和单点用户账户。\u003c/p\u003e\n\u003ch3 id=\"oauth2-单点登陆\"\u003eOAuth2 单点登陆\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eapp.groovy\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Grab\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eboot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003estarter\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003esecurity\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@Controller\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"n\"\u003eWorld\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以用\u003ccode\u003espring run app.groovy\u003c/code\u003e运行它，观察日志中的密码（用户名是 \u0026ldquo;user\u0026rdquo;）。到目前为止，这只是Spring Boot应用的默认情况。\u003c/p\u003e\n\u003cp\u003e这是一个带有Oauth2 sso的Spring Cloud 应用程序：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapp.groovy\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Controller\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableOAuth2Sso\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"n\"\u003eWorld\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e发现区别了吗？这个应用的行为实际上与之前的应用完全一样，因为它还不知道自己的OAuth2凭证。\u003c/p\u003e\n\u003cp\u003e你可以很容易用github账号注册一个应用程序，所以如果你想在你自己的域名上生产一个应用程序，可以试试。如果你愿意在\u003ccode\u003elocalhost:8080\u003c/code\u003e上测试，那么在你的应用程序配置中设置这些属性。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003esecurity\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eclientId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebd1c0a783ccdd1c9b9e4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eclientSecret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e1a9030fbca47a5b2c28e92f19050bb77824b5ad1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eaccessTokenUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/login/oauth/access_token\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euserAuthorizationUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/login/oauth/authorize\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eclientAuthenticationScheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eform\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eresource\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euserInfoUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://api.github.com/user\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003epreferTokenInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行上面的应用程序，它将重定向到github进行授权。如果你已经登录了github，你甚至不会注意到它已经认证了。这些凭证只有在你的应用程序运行在8080端口时才会起作用。\u003c/p\u003e\n\u003cp\u003e为了限制客户端在获得访问令牌时要求的范围，你可以设置\u003ccode\u003esecurity.oauth2.client.scope\u003c/code\u003e（在YAML中逗号分隔或一个数组）。默认情况下，范围是空的，由授权服务器决定默认值，通常根据客户端注册中的设置。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e上面的例子都是Groovy脚本。如果你想用Java（或Groovy）写同样的代码，你需要在classpath中添加Spring Security OAuth2（例如，见这里的示例）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"oauth2-受保护的资源\"\u003eOAuth2 受保护的资源\u003c/h3\u003e\n\u003cp\u003e你想用OAuth2令牌来保护一个API资源？这里有一个简单的例子（与上面的客户端相配）。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapp.groovy\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Grab\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ecloud\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003estarter\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003esecurity\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableResourceServer\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"n\"\u003eWorld\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e和\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003esecurity\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eresource\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euserInfoUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://api.github.com/user\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003epreferTokenInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"更多详情\"\u003e更多详情\u003c/h2\u003e\n\u003ch3 id=\"单点登陆\"\u003e单点登陆\u003c/h3\u003e\n\u003cp\u003e所有的OAuth2 SSO和资源服务器功能都在1.3版本中转移到Spring Boot。你可以在Spring Boot\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/\"\u003e用户指南\u003c/a\u003e中找到文档。\u003c/p\u003e\n\u003ch3 id=\"token-relay\"\u003eToken Relay\u003c/h3\u003e\n\u003cp\u003eToken Relay是指OAuth2消费者作为客户端，将传入的令牌转发给传出的资源请求。消费者可以是一个纯粹的客户端（如SSO应用程序）或一个资源服务器。\u003c/p\u003e\n\u003ch4 id=\"在spring-cloud-gateway客户端中使用token-relay\"\u003e在Spring Cloud Gateway客户端中使用Token Relay\u003c/h4\u003e\n\u003cp\u003e如果你的应用程序也有一个Spring Cloud Gateway反向代理应用程序，那么你可以要求它将OAuth2访问令牌转发到它所代理的服务下游。因此，上面的SSO应用可以像这样简单地增强。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eApp.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eTokenRelayGatewayFilterFactory\u003c/span\u003e \u003cspan class=\"n\"\u003efilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomRouteLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;resource\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/resource\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://localhost:9000\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者这样\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yaml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eresource\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:9000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/resource\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eTokenRelay=\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它将（除了登录用户和抓取令牌外）把认证令牌传递给下游的服务（在这里是\u003ccode\u003e/resource\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e要为Spring Cloud Gateway启用这个功能，需要添加以下依赖项\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.boot:spring-boot-starter-oauth2-client\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-security\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e它是如何工作的？该过滤器从当前认证的用户中提取访问令牌，并将其放在下游请求的请求头中。\u003c/p\u003e\n\u003cp\u003e完整的工作样本见\u003ca href=\"https://github.com/spring-cloud-samples/sample-gateway-oauth2login\"\u003e该项目\u003c/a\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eTokenRelayGatewayFilterFactory\u003c/code\u003e使用的\u003ccode\u003eReactiveOAuth2AuthorizedClientService\u003c/code\u003e的默认实现使用了一个内存数据存储。如果你需要一个更强大的解决方案，你将需要提供你自己的实现\u003ccode\u003eReactiveOAuth2AuthorizedClientService\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"客户端-token-relay\"\u003e客户端 Token Relay\u003c/h4\u003e\n\u003cp\u003e如果你的应用程序是一个面向用户的OAuth2客户端（即已声明\u003ccode\u003e@EnableOAuth2Sso\u003c/code\u003e或\u003ccode\u003e@EnableOAuth2Client\u003c/code\u003e），那么它在Spring Boot的请求范围内有一个\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e。你可以从这个上下文和一个自动连接的\u003ccode\u003eOAuth2ProtectedResourceDetails\u003c/code\u003e中创建你自己的\u003ccode\u003eOAuth2RestTemplate\u003c/code\u003e，然后该上下文将一直向下游转发访问令牌，如果访问令牌过期，也会自动刷新。(这些都是Spring Security和Spring Boot的特性）。)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ccode\u003eclient_credentials\u003c/code\u003e令牌，Spring Boot（1.4.1）不会自动创建一个\u003ccode\u003eOAuth2ProtectedResourceDetails\u003c/code\u003e。在这种情况下，你需要创建自己的\u003ccode\u003eClientCredentialsResourceDetails\u003c/code\u003e，并用\u003ccode\u003e@ConfigurationProperties(\u0026quot;security.oauth2.client\u0026quot;)\u003c/code\u003e来配置它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"在zuul代理客户端中使用token-relay\"\u003e在zuul代理客户端中使用Token Relay\u003c/h4\u003e\n\u003cp\u003e如果你的应用程序也有一个\u003ccode\u003eSpring Cloud Zuul\u003c/code\u003e嵌入式反向代理（使用\u003ccode\u003e@EnableZuulProxy\u003c/code\u003e），那么你可以要求它将OAuth2访问令牌转发给它所代理的服务。因此，上面的SSO应用可以像这样简单地增强。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapp.groovy\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Controller\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableOAuth2Sso\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableZuulProxy\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它将（除了登录用户和获取令牌外）把认证令牌传递给下游的\u003ccode\u003e/proxy/*\u003c/code\u003e服务。如果这些服务是用\u003ccode\u003e@EnableResourceServer\u003c/code\u003e实现的，那么它们将在正确的头中得到一个有效的令牌。\u003c/p\u003e\n\u003cp\u003e它是如何工作的？\u003ccode\u003e@EnableOAuth2Sso\u003c/code\u003e注解拉入了\u003ccode\u003espring-cloud-starter-security\u003c/code\u003e（你可以在传统应用中手动完成），这反过来又触发了\u003ccode\u003eZuulFilter\u003c/code\u003e的一些自动配置，它本身被激活了，因为Zuul在classpath中（通过\u003ccode\u003e@EnableZuulProxy\u003c/code\u003e）。该过滤器只是从当前认证的用户中提取一个访问令牌，并将其放在下游请求的请求头中。\u003c/p\u003e\n\u003cp\u003eSpring Boot不会自动创建刷新令牌所需的\u003ccode\u003eOAuth2RestOperations\u003c/code\u003e。在这种情况下，你需要创建你自己的\u003ccode\u003eOAuth2RestOperations\u003c/code\u003e，以便\u003ccode\u003eOAuth2TokenRelayFilter\u003c/code\u003e在需要时可以刷新令牌。\u003c/p\u003e\n\u003ch4 id=\"资源服务器中的token-relay\"\u003e资源服务器中的Token Relay\u003c/h4\u003e\n\u003cp\u003e如果你的应用程序有\u003ccode\u003e@EnableResourceServer\u003c/code\u003e，你可能想把传入的令牌转发到下游的其他服务。如果你使用\u003ccode\u003eRestTemplate\u003c/code\u003e来联系下游服务，那么这只是一个如何用正确的上下文创建模板的问题。\u003c/p\u003e\n\u003cp\u003e如果你的服务使用\u003ccode\u003eUserInfoTokenServices\u003c/code\u003e来验证传入的令牌（即使用\u003ccode\u003esecurity.oauth2.user-info-uri\u003c/code\u003e配置），那么你可以简单地使用自动连接的\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e创建一个\u003ccode\u003eOAuth2RestTemplate\u003c/code\u003e（它将在进入后端代码之前由认证过程填充）。同样地（使用Spring Boot 1.4），你可以注入一个\u003ccode\u003eUserInfoRestTemplateFactory\u003c/code\u003e，并在配置中抓取其\u003ccode\u003eOAuth2RestTemplate\u003c/code\u003e。比如说。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMyConfiguration.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eOAuth2RestTemplate\u003c/span\u003e \u003cspan class=\"nf\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUserInfoRestTemplateFactory\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetUserInfoRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然后，此REST模板将具有身份验证过滤器使用的相同的\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e（请求范围），因此你可以使用它来发送具有相同访问令牌的请求。\u003c/p\u003e\n\u003cp\u003e如果你的应用程序没有使用\u003ccode\u003eUserInfoTokenServices\u003c/code\u003e，但仍然是一个客户端（即它声明了\u003ccode\u003e@EnableOAuth2Client\u003c/code\u003e或@\u003ccode\u003eEnableOAuth2Sso\u003c/code\u003e），那么通过Spring Security Cloud，用户从\u003ccode\u003e@Autowired OAuth2Context\u003c/code\u003e创建的任何\u003ccode\u003eOAuth2RestOperations\u003c/code\u003e也将转发令牌。这个功能默认是作为MVC处理程序拦截器实现的，所以它只在Spring MVC中工作。如果你不使用MVC，你可以使用自定义过滤器或AOP拦截器包装\u003ccode\u003eAccessTokenContextRelay\u003c/code\u003e来提供同样的功能。\u003c/p\u003e\n\u003cp\u003e这里有一个基本的例子，显示了在其他地方创建的自动连接REST模板的使用（\u0026ldquo;foo.com \u0026ldquo;是一个资源服务器，接受与周围应用程序相同的令牌）：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMyController.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eOAuth2RestOperations\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/relay\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003erelay\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetForEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://foo.com/bar\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Success! (\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetBody\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;)\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不想转发令牌（这是一个有效的选择，因为你可能想作为你自己，而不是向你发送令牌的客户端），那么你只需要创建自己的\u003ccode\u003eOAuth2Context\u003c/code\u003e，而不是自动连接默认的。\u003c/p\u003e\n\u003cp\u003e如果\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e可用的话，Feign客户端也会拾取一个使用\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e的拦截器，所以他们也应该在\u003ccode\u003eRestTemplate\u003c/code\u003e的任何地方做一个令牌中继。\u003c/p\u003e\n\u003ch2 id=\"配置zuul-proxy下游的身份验证\"\u003e配置Zuul Proxy下游的身份验证\u003c/h2\u003e\n\u003cp\u003e你可以通过\u003ccode\u003eproxy.auth.*\u003c/code\u003e设置来控制\u003ccode\u003e@EnableZuulProxy\u003c/code\u003e下游的授权行为。例子：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eproxy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eauth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003estores\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epassthru\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003erecommendations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enone\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个例子中，\u0026ldquo;customers\u0026quot;服务得到一个OAuth2令牌中继，\u0026ldquo;stores\u0026quot;服务得到一个passthrough（授权头只是在下游传递），而 \u0026ldquo;recommendations\u0026quot;服务的授权头被删除。默认行为是，如果有可用的令牌，就进行令牌中继，否则就进行穿透。\u003c/p\u003e\n\u003cp\u003e详细情况见\u003ca href=\"https://github.com/spring-cloud/spring-cloud-security/tree/master/src/main/java/org/springframework/cloud/security/oauth2/proxy/ProxyAuthenticationProperties\"\u003eProxyAuthenticationProperties\u003c/a\u003e。\u003c/p\u003e\n"
      },
    {
        id: 10,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-sleuth/",
        title: "Spring Cloud Sleuth",
        description: "Spring Cloud Sleuth为分布式追踪提供了Spring Boot的自动配置。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月23日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-sleuth/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth\"\u003ehttps://github.com/spring-cloud/spring-cloud-sleuth\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1-法律条款\"\u003e1. 法律条款\u003c/h2\u003e\n\u003cp\u003e本文件的副本可供你自己使用和分发给其他人，但你不得对这些副本收取任何费用，而且每份副本都要包含本版权声明，无论是以印刷品还是电子方式分发。\u003c/p\u003e\n\u003ch2 id=\"2-开始使用\"\u003e2. 开始使用\u003c/h2\u003e\n\u003cp\u003e如果你刚开始使用Spring Cloud Sleuth或Spring，请先阅读本节。它回答了 \u0026ldquo;什么？\u0026quot;、\u0026ldquo;如何？\u0026ldquo;和 \u0026ldquo;为什么？\u0026ldquo;等基本问题。它包括对Spring Cloud Sleuth的介绍，以及安装说明。然后，我们将引导你构建你的第一个Spring Cloud Sleuth应用程序，在此过程中讨论一些核心原则。\u003c/p\u003e\n\u003ch3 id=\"21-spring-cloud-sleuth-介绍\"\u003e2.1. Spring Cloud Sleuth 介绍\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth为\u003ca href=\"https://cloud.spring.io/\"\u003eSpring Cloud\u003c/a\u003e提供分布式追踪解决方案的API。它与\u003ca href=\"https://github.com/openzipkin/brave\"\u003eOpenZipkin Brave\u003c/a\u003e 集成\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth能够追踪你的请求和消息，这样你就可以将该通信与相应的日志条目联系起来。你还可以将追踪信息导出到外部系统，以可视化延迟。Spring Cloud Sleuth直接支持\u003ca href=\"https://zipkin.io/\"\u003eOpenZipkin\u003c/a\u003e兼容系统。\u003c/p\u003e\n\u003ch4 id=\"211-术语介绍\"\u003e2.1.1. 术语介绍\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Sleuth 借鉴了 \u003ca href=\"https://research.google.com/pubs/pub36356.html\"\u003eDapper’s\u003c/a\u003e 术语表.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSpan\u003c/strong\u003e: 工作的基本单位。例如，发送一个RPC是一个新的跨度，正如发送对RPC的响应一样。span也有其他数据，如描述、有时间戳的事件、键值注释（标签）、引起它们的span的ID和进程ID（通常是IP地址）。\u003c/p\u003e\n\u003cp\u003e跨度可以被启动和停止，并保持跟踪其时间信息。一旦你创建了一个跨度，你必须在未来的某个时间点停止它。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTree\u003c/strong\u003e：一组跨度形成一个树状结构。例如，如果你运行一个分布式大数据存储，一个跟踪可能由一个PUT请求形成。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAnnotation/Event\u003c/strong\u003e：用来记录一个事件在时间上的存在。\u003c/p\u003e\n\u003cp\u003e从概念上讲，在一个典型的RPC场景中，我们标记这些事件是为了强调发生了什么样的动作（这并不意味着在物理上这样的事件会被设置在一个跨度上）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ecs\u003c/strong\u003e：客户端发送。客户端已经发出了请求。这个注解表示跨度的开始。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003esr\u003c/strong\u003e：服务器收到了。服务器端得到了请求并开始处理它。从这个时间戳中减去\u003ccode\u003ecs\u003c/code\u003e时间戳可以看出网络延迟。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ess\u003c/strong\u003e：服务器发送。在请求处理完成后的注释（当响应被发回给客户端）。从这个时间戳中减去\u003ccode\u003esr\u003c/code\u003e时间戳，可以看出服务器端处理该请求所需的时间。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ecr\u003c/strong\u003e：客户端收到了。标志着跨度的结束。客户端已成功收到服务器端的响应。从这个时间戳中减去\u003ccode\u003ecs\u003c/code\u003e时间戳，显示出客户端从服务器端接收响应所需的全部时间。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e下图显示了\u003cstrong\u003eSpan\u003c/strong\u003e和\u003cstrong\u003eTrace\u003c/strong\u003e在一个系统中的样子。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/KevinBlandy/springcloud-images/2021/07/24/b4a2078f5e0c4b7aa82691e6a4cf33f3.png\" alt=\" \"\u003e\u003c/p\u003e\n\u003cp\u003e一个\u003ccode\u003enote\u003c/code\u003e的每种颜色代表一个跨度（有七个跨度\u0026ndash;从\u003cstrong\u003eA\u003c/strong\u003e到\u003cstrong\u003eG\u003c/strong\u003e）。请看下面这个\u003ccode\u003enote\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eTrace Id = X\nSpan Id = D\nClient Sent\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个说明表明，当前跨度的\u003cstrong\u003eTrace Id\u003c/strong\u003e设置为\u003cstrong\u003eX\u003c/strong\u003e，\u003cstrong\u003eSpan Id\u003c/strong\u003e设置为\u003cstrong\u003eD\u003c/strong\u003e。另外，从RPC的角度来看，发生了 \u003ccode\u003eClient Sen\u003c/code\u003e事件。\u003c/p\u003e\n\u003cp\u003e让我们考虑更多的note。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eTrace Id = X\nSpan Id = A\n(no custom span)\n\nTrace Id = X\nSpan Id = C\n(custom span)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以继续使用已创建的跨度（\u003ccode\u003eno custom span\u003c/code\u003e的例子），或者你可以手动创建子跨度（有\u003ccode\u003ecustom span\u003c/code\u003e指示的例子）。\u003c/p\u003e\n\u003cp\u003e下面的图片显示了跨度的父子关系的样子。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/KevinBlandy/springcloud-images/2021/07/24/a4c26b86588447759c6f6baa744b256b.png\" alt=\" \"\u003e\u003c/p\u003e\n\u003ch3 id=\"22-发你的第一个基于spring-cloud-sleuth的应用程序\"\u003e2.2. 发你的第一个基于Spring Cloud sleuth的应用程序\u003c/h3\u003e\n\u003cp\u003e本节介绍了如何开发一个小型的 \u0026ldquo;Hello World!\u0026ldquo;网络应用，其中突出了Spring Cloud Sleuth的一些关键功能。我们使用Maven来构建这个项目，因为大多数IDE都支持它。作为追踪器的实现，我们将使用\u003ca href=\"https://github.com/openzipkin/brave\"\u003eOpenZipkin Brave\u003c/a\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你可以通过进入\u003ca href=\"https://start.spring.io/\"\u003estart.spring.io\u003c/a\u003e并从依赖项搜索器中选择 \u003ccode\u003eWeb\u003c/code\u003e和 \u003ccode\u003eSpring Cloud Sleuth\u003c/code\u003e 启动器来缩短下面的步骤。这样做会生成一个新的项目结构，这样你就可以\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#getting-started-first-application-code\"\u003e立即开始编码\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"221-创建-pom\"\u003e2.2.1. 创建 POM\u003c/h4\u003e\n\u003cp\u003e我们需要先创建一个Maven pom.xml文件。pom.xml是用于构建项目的配置。打开你喜欢的文本编辑器，添加以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;project\u003c/span\u003e \u003cspan class=\"na\"\u003exmlns=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003exmlns:xsi=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003exsi:schemaLocation=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;modelVersion\u0026gt;\u003c/span\u003e4.0.0\u003cspan class=\"nt\"\u003e\u0026lt;/modelVersion\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003ecom.example\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003emyproject\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e0.0.1-SNAPSHOT\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"nt\"\u003e\u0026lt;parent\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-parent\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- Use the latest compatible Spring Boot version. You can check https://spring.io/projects/spring-cloud for more information --\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e2.4.6\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/parent\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Spring Cloud Sleuth requires a Spring Cloud BOM --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"c\"\u003e\u0026lt;!-- Provide the latest stable Spring Cloud release train version (e.g. 2020.0.0) --\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train.version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- (you don\u0026#39;t need this if you are using a GA version) --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;repositories\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;repository\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;id\u0026gt;\u003c/span\u003espring-snapshots\u003cspan class=\"nt\"\u003e\u0026lt;/id\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;url\u0026gt;\u003c/span\u003ehttps://repo.spring.io/snapshot\u003cspan class=\"nt\"\u003e\u0026lt;/url\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;snapshots\u0026gt;\u0026lt;enabled\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/enabled\u0026gt;\u0026lt;/snapshots\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/repository\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;repository\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;id\u0026gt;\u003c/span\u003espring-milestones\u003cspan class=\"nt\"\u003e\u0026lt;/id\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;url\u0026gt;\u003c/span\u003ehttps://repo.spring.io/milestone\u003cspan class=\"nt\"\u003e\u0026lt;/url\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/repository\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/repositories\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;pluginRepositories\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;pluginRepository\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;id\u0026gt;\u003c/span\u003espring-snapshots\u003cspan class=\"nt\"\u003e\u0026lt;/id\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;url\u0026gt;\u003c/span\u003ehttps://repo.spring.io/snapshot\u003cspan class=\"nt\"\u003e\u0026lt;/url\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/pluginRepository\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;pluginRepository\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;id\u0026gt;\u003c/span\u003espring-milestones\u003cspan class=\"nt\"\u003e\u0026lt;/id\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;url\u0026gt;\u003c/span\u003ehttps://repo.spring.io/milestone\u003cspan class=\"nt\"\u003e\u0026lt;/url\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/pluginRepository\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/pluginRepositories\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/project\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的列表应该给你一个工作的构建。你可以通过运行\u003ccode\u003emvn package\u003c/code\u003e来测试它（现在，你可以忽略 \u0026ldquo;“jar will be empty - no content was marked for inclusion!\u0026ldquo;的警告）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这时，你可以把项目导入IDE（大多数现代Java IDE都包含对Maven的内置支持）。为简单起见，我们在本例中继续使用纯文本编辑器。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"222-adding-classpath-依赖\"\u003e2.2.2. Adding Classpath 依赖\u003c/h4\u003e\n\u003cp\u003e要添加必要的依赖，编辑你的\u003ccode\u003epom.xml\u003c/code\u003e并在\u003ccode\u003eparent\u003c/code\u003e部分下面添加\u003ccode\u003espring-boot-starter-web\u003c/code\u003e依赖。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Boot\u0026#39;s Web support --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-web\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Sleuth with Brave tracer implementation --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"223-编写代码\"\u003e2.2.3. 编写代码\u003c/h4\u003e\n\u003cp\u003e为了完成我们的应用，我们需要创建一个单独的Java文件。默认情况下，Maven从\u003ccode\u003esrc/main/java\u003c/code\u003e编译源代码，所以你需要创建该目录结构，然后添加一个名为\u003ccode\u003esrc/main/java/Example.java\u003c/code\u003e的文件，包含以下代码。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.slf4j.Logger\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.slf4j.LoggerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.boot.*\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.boot.autoconfigure.*\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.web.bind.annotation.*\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableAutoConfiguration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eExample\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eLogger\u003c/span\u003e \u003cspan class=\"n\"\u003elog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLoggerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetLogger\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBackend\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello world!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eExample\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e虽然这里的代码不多，但有相当多的事情要做。我们在接下来的几节中逐步介绍重要的部分。虽然这里的代码不多，但有相当多的事情要做。我们在接下来的几节中逐步介绍重要的部分。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e@RestController和@RequestMapping注解\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eSpring Boot设置了Rest Controller，并使我们的应用程序绑定到Tomcat端口。带有Brave追踪器的Spring Cloud Sleuth将提供对传入请求的检测。\u003c/p\u003e\n\u003ch4 id=\"224-运行该实例\"\u003e2.2.4. 运行该实例\u003c/h4\u003e\n\u003cp\u003e在这一点上，你的应用程序应该工作。由于你使用了\u003ccode\u003espring-boot-starter-parent\u003c/code\u003ePOM，你有一个有用的\u003ccode\u003erun\u003c/code\u003e目标，你可以用它来启动该应用程序。在项目根目录下输入\u003ccode\u003eSPRING_APPLICATION_NAME=backend mvn spring-boot:run\u003c/code\u003e来启动应用程序。你应该看到类似以下的输出。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ mvn spring-boot:run\n\n  .   ____          _            __ _ _\n /\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e / ___\u003cspan class=\"s1\"\u003e\u0026#39;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e( ( )\\___ | \u0026#39;\u003c/span\u003e_ \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;_| | \u0026#39;\u003c/span\u003e_ \u003cspan class=\"se\"\u003e\\/\u003c/span\u003e _\u003cspan class=\"sb\"\u003e`\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"se\"\u003e\\ \\ \\ \\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e/  ___\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e  \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e  \u003cspan class=\"p\"\u003e|\u003c/span\u003e____\u003cspan class=\"p\"\u003e|\u003c/span\u003e .__\u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"se\"\u003e\\_\u003c/span\u003e_, \u003cspan class=\"p\"\u003e|\u003c/span\u003e / / / /\n \u003cspan class=\"o\"\u003e=========\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"o\"\u003e==============\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e___/\u003cspan class=\"o\"\u003e=\u003c/span\u003e/_/_/_/\n ...\n....... . . .\n....... . . . \u003cspan class=\"o\"\u003e(\u003c/span\u003elog output here\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n....... . . .\n........ Started Example in 2.222 seconds \u003cspan class=\"o\"\u003e(\u003c/span\u003eJVM running \u003cspan class=\"k\"\u003efor\u003c/span\u003e 6.514\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你打开网页浏览器到\u003ccode\u003elocalhost:8080\u003c/code\u003e，你应该看到以下输出。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eHello World!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你检查日志，你应该看到一个类似的输出\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e2020-10-21 12:01:16.285  INFO [backend,0b6aaf642574edd3,0b6aaf642574edd3] 289589 --- [nio-9000-exec-1] Example              : Hello world!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以注意到，日志格式已经更新，有以下信息\u003ccode\u003e[backend,0b6aaf642574edd3,0b6aaf642574edd3\u003c/code\u003e。这个条目对应于\u003ccode\u003e[application name,trace id, span id]\u003c/code\u003e。应用程序名称从\u003ccode\u003eSPRING_APPLICATION_NAME\u003c/code\u003e环境变量中读取。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你可以设置\u003ccode\u003elogging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG\u003c/code\u003e，而不是在处理程序中明确记录请求。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要优雅地退出应用程序，按\u003ccode\u003ectrl-c\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"23-接下来的步骤\"\u003e2.3. 接下来的步骤\u003c/h3\u003e\n\u003cp\u003e希望本节提供了一些Spring Cloud Sleuth的基础知识，让你开始编写自己的应用程序。如果你是一个面向任务的开发者，你可能想跳到\u003ca href=\"https://spring.io/\"\u003espring.io\u003c/a\u003e并查看一些\u003ca href=\"https://spring.io/guides/\"\u003e入门\u003c/a\u003e指南，这些指南解决了 \u0026ldquo;我如何用Spring做这个？\u0026ldquo;的具体问题。我们也有专门针对Spring Cloud Sleuth的\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#howto\"\u003ehow-to\u003c/a\u003e\u0026ldquo;参考文档。\u003c/p\u003e\n\u003cp\u003e否则，下一个合乎逻辑的步骤是阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using\"\u003e使用Spring Cloud Sleuth\u003c/a\u003e。如果你真的没有耐心，你也可以提前阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#project-features\"\u003eSpring Cloud Sleuth功能\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e你可以在\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth/tree/%7Bbranch%7D/spring-cloud-sleuth-samples\"\u003esamples\u003c/a\u003e找到默认项目的样本。\u003c/p\u003e\n\u003ch2 id=\"3-使用-spring-cloud-sleuth\"\u003e3. 使用 Spring Cloud Sleuth\u003c/h2\u003e\n\u003cp\u003e本节更详细地介绍了应该如何使用Spring Cloud Sleuth。它涵盖了一些主题，如用Spring Cloud Sleuth API或通过注解控制跨度生命周期。我们还介绍了一些Spring Cloud Sleuth的最佳实践。\u003c/p\u003e\n\u003cp\u003e如果你开始使用Spring Cloud Sleuth，在进入本节之前，你可能应该先阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#getting-started\"\u003e入门\u003c/a\u003e指南。\u003c/p\u003e\n\u003ch3 id=\"31-span生的命周期和spring-cloud-sleuth的api\"\u003e3.1. Span生的命周期和Spring Cloud Sleuth的API\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth Core在其 \u003ccode\u003eapi\u003c/code\u003e 模块中包含了所有需要由追踪器实现的必要接口。该项目带有OpenZipkin Brave实现。你可以通过查看\u003ccode\u003eorg.springframework.cloud.sleuth.brave.bridge\u003c/code\u003e来检查追踪器是如何与Sleuth的API桥接的。\u003c/p\u003e\n\u003cp\u003e最常用的接口是。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud.sleuth.Tracer\u003c/code\u003e - 使用追踪器，你可以创建一个根跨度，捕捉请求的关键路径。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud.sleuth.Span\u003c/code\u003e - Span是一个需要启动和停止的单一工作单元。包含时间信息和事件及标签。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e你也可以直接使用你的追踪器实现的API。\u003c/p\u003e\n\u003cp\u003e让我们来看看下面的Span生命周期动作。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using-creating-and-ending-spans\"\u003estart\u003c/a\u003e：当你开始一个跨度时，它的名字被指定，开始的时间戳被记录。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using-creating-and-ending-spans\"\u003eend\u003c/a\u003e:：跨度结束（跨度的结束时间被记录下来），如果跨度被取样，它就有资格被收集（例如，到Zipkin）。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using-continuing-spans\"\u003econtinue\u003c/a\u003e：该跨度被继续，例如在另一个线程中。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using-creating-spans-with-explicit-parent\"\u003ecreate with explicit parent\u003c/a\u003e：你可以创建一个新的跨度，并为它设置一个明确的父节点。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Sleuth为你创建一个\u003ccode\u003eTracer\u003c/code\u003e的实例。为了使用它，你可以自动连接它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"311-creating-and-ending-spans\"\u003e3.1.1. Creating and Ending Spans\u003c/h4\u003e\n\u003cp\u003e你可以通过使用Tracer手动创建Span，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// 开始一个Span。如果这个线程中存在一个跨度，它将成为\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e// `newSpan`的父节点。\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpanInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003estart\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// 你可以标记一个Span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;taxValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etaxValue\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// 你可以在一个`span`上记录一个事件\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eevent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;taxCalculated\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003efinally\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// 一旦完成，记得要结束`span\u0026#39;。这将允许收集\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// `span`，将其发送到分布式跟踪系统，例如Zipkin。\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的例子中，我们可以看到如何创建一个新的span的实例。如果这个线程中已经有一个span，它就会成为新span的父级。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e创建\u003ccode\u003eSpan\u003c/code\u003e 后一定要记得 \u003ccode\u003eclean\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你的\u003ccode\u003espan\u003c/code\u003e包含一个大于50个字符的名字，这个名字会被截断为50个字符。你的名字必须是明确和具体的。大的名字会导致延迟问题，有时甚至会出现异常。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"312-continuing-spans\"\u003e3.1.2. Continuing Spans\u003c/h4\u003e\n\u003cp\u003e有时，你不想创建一个新的\u003ccode\u003espan\u003c/code\u003e，但你想继续一个。这种情况的一个例子可能如下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAOP\u003c/strong\u003e: 如果在达到一个\u003ccode\u003easpect\u003c/code\u003e之前已经有一个\u003ccode\u003espan\u003c/code\u003e被创建，你可能不想创建一个新的\u003ccode\u003espan\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e为了继续一个 \u003ccode\u003espan\u003c/code\u003e，你可以在一个线程中存储 \u003ccode\u003espan\u003c/code\u003e，并将其传递给另一个线程，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003espanFromThreadX\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpanInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003espanFromThreadX\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003estart\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eexecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esubmit\u003c/span\u003e\u003cspan class=\"o\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// Pass the span from thread X\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003econtinuedSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003espanFromThreadX\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// You can tag a span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003econtinuedSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;taxValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etaxValue\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// You can log an event on a span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003econtinuedSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eevent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;taxCalculated\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}).\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003efinally\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003espanFromThreadX\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"313-creating-a-span-with-an-explicit-parent\"\u003e3.1.3. Creating a Span with an explicit Parent\u003c/h4\u003e\n\u003cp\u003e你可能想启动一个新的 \u0026ldquo;span\u0026rdquo;，并为该span提供一个明确的父节点。假设一个跨度的父级在一个线程中，而你想在另一个线程中启动一个新的跨度。每当你调用\u003ccode\u003eTracer.nextSpan()\u003c/code\u003e时，它就会创建一个参考当前范围内的span的span。你可以把span放在作用域中，然后调用\u003ccode\u003eTracer.nextSpan()\u003c/code\u003e，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// let\u0026#39;s assume that we\u0026#39;re in a thread Y and we\u0026#39;ve received\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e// the `initialSpan` from thread X. `initialSpan` will be the parent\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e// of the `newSpan`\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpanInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einitialSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;calculateCommission\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// You can tag a span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;commissionValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommissionValue\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// You can log an event on a span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eevent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;commissionCalculated\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003efinally\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// Once done remember to end the span. This will allow collecting\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// the span to send it to e.g. Zipkin. The tags and events set on the\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// newSpan will not be present on the parent\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e创建这样的\u003ccode\u003espan\u003c/code\u003e后，你必须完成它。否则，它不会被报告（例如向Zipkin）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你也可以使用\u003ccode\u003eTracer.nextSpan(Span parentSpan)\u003c/code\u003e版本来明确提供父级\u003ccode\u003espan\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"32-spans-命名\"\u003e3.2. Spans 命名\u003c/h3\u003e\n\u003cp\u003e挑选一个\u003ccode\u003espan\u003c/code\u003e名称不是一件简单的事情。一个\u003ccode\u003espan\u003c/code\u003e名称应该描述一个操作名称。这个名字应该是低cardinality，所以它不应该包括标识符。\u003c/p\u003e\n\u003cp\u003e因为有很多工具正在进行，所以一些跨度名称是人为的。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003econtroller-method-name\u003c/code\u003e当被一个方法名为\u003ccode\u003econtrollerMethodName\u003c/code\u003e的Controller接收时。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003easync\u003c/code\u003e用于用包装好的\u003ccode\u003eCallable\u003c/code\u003e和\u003ccode\u003eRunnable\u003c/code\u003e接口进行异步操作。\u003c/li\u003e\n\u003cli\u003e用\u003ccode\u003e@Scheduled\u003c/code\u003e注解的方法会返回该类的简单名称。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e幸运的是，对于异步处理，你可以提供明确的命名。\u003c/p\u003e\n\u003ch4 id=\"321-spanname-annotation\"\u003e3.2.1. @SpanName Annotation\u003c/h4\u003e\n\u003cp\u003e你可以通过使用\u003ccode\u003e@SpanName\u003c/code\u003e注解来明确地命名\u003ccode\u003espan\u003c/code\u003e，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpanName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTaxCountingRunnable\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// perform logic\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这种情况下，当以下列方式处理时，跨度被命名为 \u003ccode\u003ecalculateTax\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"n\"\u003erunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espanNamer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTaxCountingRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"n\"\u003eFuture\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efuture\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esubmit\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// ... some additional logic ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003efuture\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"322-tostring-method\"\u003e3.2.2. toString() Method\u003c/h4\u003e\n\u003cp\u003e为 \u003ccode\u003eRunnable\u003c/code\u003e 或 \u003ccode\u003eCallable\u003c/code\u003e 创建单独的类是很罕见的。通常情况下，人们会创建这些类的匿名实例。你不能对这样的类进行注释。为了克服这个限制，如果没有 \u003ccode\u003e@SpanName\u003c/code\u003e 注释，我们会检查该类是否有 \u003ccode\u003etoString()\u003c/code\u003e 方法的自定义实现。\u003c/p\u003e\n\u003cp\u003e运行这样的代码会导致创建一个名为 \u003ccode\u003ecalculateTax\u003c/code\u003e 的span，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"n\"\u003erunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espanNamer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// perform logic\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e});\u003c/span\u003e\n\u003cspan class=\"n\"\u003eFuture\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efuture\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esubmit\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// ... some additional logic ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003efuture\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"33-用注解管理span\"\u003e3.3. 用注解管理Span\u003c/h3\u003e\n\u003cp\u003e用注解来管理 \u003ccode\u003eSpan\u003c/code\u003e 有很多好的理由，包括。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e与跨度协作的API无关的手段。使用注解可以让用户在添加跨度时不依赖跨度api的库。这样做可以让Sleuth改变其核心API，对用户代码产生更少的影响。\u003c/li\u003e\n\u003cli\u003e减少了基本跨度操作的表面积。如果没有这个功能，你必须使用span api，它的生命周期命令可能被错误地使用。通过只暴露范围、标签和日志功能，你可以在不意外地破坏span生命周期的情况下进行协作。\u003c/li\u003e\n\u003cli\u003e与运行时生成的代码进行协作。通过Spring Data和Feign这样的库，接口的实现是在运行时生成的。因此，对对象进行跨度包装是很乏味的。现在你可以为接口和这些接口的参数提供注解。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"331-创建新的span\"\u003e3.3.1. 创建新的Span\u003c/h4\u003e\n\u003cp\u003e如果你不想手动创建本地\u003ccode\u003eSpan\u003c/code\u003e，你可以使用\u003ccode\u003e@NewSpan\u003c/code\u003e注解。另外，我们还提供了\u003ccode\u003e@SpanTag\u003c/code\u003e注解来自动添加标签。\u003c/p\u003e\n\u003cp\u003e现在我们可以考虑一些使用的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在没有任何参数的情况下注解方法，会导致创建一个新的跨度，其名称等于注解的方法名称。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;customNameOnTestMethod4\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod4\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你在注解中提供值（直接或通过设置\u003ccode\u003ename\u003c/code\u003e参数），创建的跨度将以提供的值作为名称。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// method declaration\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;customNameOnTestMethod5\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod5\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testTag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eparam\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// and method execution\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestBean\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestMethod5\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以把名字和标签都结合起来。让我们关注一下后者。在这种情况下，被注解的方法的参数运行时的值成为标签的值。在我们的例子中，标签键是\u003ccode\u003etestTag\u003c/code\u003e，标签值是\u003ccode\u003etest\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;customNameOnTestMethod3\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod3\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以把\u003ccode\u003e@NewSpan\u003c/code\u003e注解放在类和接口上。如果你覆盖了接口的方法，并为\u003ccode\u003e@NewSpan\u003c/code\u003e注解提供了不同的值，那么最具体的那一个会获胜（在这个例子中，\u003ccode\u003ecustomNameOnTestMethod3\u003c/code\u003e被设置）。\u003c/p\u003e\n\u003ch4 id=\"332-continuing-spans\"\u003e3.3.2. Continuing Spans\u003c/h4\u003e\n\u003cp\u003e如果你想给现有的跨度添加标签和注释，你可以使用\u003ccode\u003e@ContinueSpan\u003c/code\u003e注释，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// method declaration\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@ContinueSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;testMethod11\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod11\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testTag11\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eparam\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// method execution\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestBean\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestMethod11\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestBean\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestMethod13\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(注意，与\u003ccode\u003e@NewSpan\u003c/code\u003e注释相反，你也可以用\u003ccode\u003elog\u003c/code\u003e参数添加日志)。\u003c/p\u003e\n\u003cp\u003e这样一来，跨度就会得到延续，并且。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e创建名为\u003ccode\u003etestMethod11.before\u003c/code\u003e和\u003ccode\u003etestMethod11.after\u003c/code\u003e的日志条目。\u003c/li\u003e\n\u003cli\u003e如果一个异常被抛出，也会创建一个名为\u003ccode\u003etestMethod11.afterFailure\u003c/code\u003e的日志条目。\u003c/li\u003e\n\u003cli\u003e创建一个键值为\u003ccode\u003etestTag11\u003c/code\u003e、值为\u003ccode\u003etest\u003c/code\u003e的标签。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"333-advanced-tag-setting\"\u003e3.3.3. Advanced Tag Setting\u003c/h4\u003e\n\u003cp\u003e有3种不同的方式来添加标签到span中。所有这些都是由\u003ccode\u003eSpanTag\u003c/code\u003e注释控制的。其优先级如下。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e尝试使用\u003ccode\u003eTagValueResolver\u003c/code\u003e类型的bean和提供的名称。\u003c/li\u003e\n\u003cli\u003e如果没有提供bean的名称，则尝试评估一个表达式。我们搜索一个\u003ccode\u003eTagValueExpressionResolver\u003c/code\u003e豆。默认实现使用SPEL表达式解析。\u003cstrong\u003e重要的是\u003c/strong\u003e你只能从SPEL表达式中引用属性。由于安全限制，不允许执行方法。\u003c/li\u003e\n\u003cli\u003e如果我们没有找到任何可以评估的表达式，则返回参数的\u003ccode\u003etoString()\u003c/code\u003e值。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e自定义Extractor\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e以下方法的标签值是由\u003ccode\u003eTagValueResolver\u003c/code\u003e 接口的实现计算出来的。它的类名必须作为 \u003ccode\u003eresolver\u003c/code\u003e 属性的值被传递。\u003c/p\u003e\n\u003cp\u003e考虑一下下面的注解方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003egetAnnotationForTagValueResolver\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresolver\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTagValueResolver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003etest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在进一步考虑以下\u003ccode\u003eTagValueResolver\u003c/code\u003e bean的实现。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomTagValueResolver\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eTagValueResolver\u003c/span\u003e \u003cspan class=\"nf\"\u003etagValueResolver\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eparameter\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Value from myCustomTagValueResolver\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的两个例子导致了设置一个等于来自\u003ccode\u003emyCustomTagValueResolver\u003c/code\u003e的标签值。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e解析一个值的表达式\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e考虑以下注释的方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003egetAnnotationForTagValueExpression\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eexpression\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#39;hello\u0026#39; + \u0026#39; characters\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003etest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e没有自定义实现\u003ccode\u003eTagValueExpressionResolver\u003c/code\u003e就会导致SPEL表达式的评估，并且在span上设置一个值为\u003ccode\u003e4个字符\u003c/code\u003e的标签。如果你想使用一些其他的表达式解析机制，你可以创建你自己的bean实现。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e使用 The toString() 方法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e考虑以下注释的方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003egetAnnotationForArgumentToString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eLong\u003c/span\u003e \u003cspan class=\"n\"\u003eparam\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以\u003ccode\u003e15\u003c/code\u003e的值运行前面的方法，会导致设置一个字符串值为\u003ccode\u003e\u0026quot;15\u0026quot;\u003c/code\u003e的标签。\u003c/p\u003e\n\u003ch3 id=\"34-接下来要读什么\"\u003e3.4. 接下来要读什么\u003c/h3\u003e\n\u003cp\u003e现在你应该明白如何使用Spring Cloud Sleuth以及应该遵循的一些最佳实践。现在你可以继续了解具体的\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#project-features\"\u003eSpring Cloud Sleuth功能\u003c/a\u003e，或者你可以跳过前面的内容，阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/integrations\"\u003eSpring Cloud Sleuth中可用的集成\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"4-spring-cloud-sleuth的特性\"\u003e4. Spring Cloud Sleuth的特性\u003c/h2\u003e\n\u003cp\u003e本节深入探讨了Spring Cloud Sleuth的细节。在这里，你可以了解到你可能想要使用和定制的关键功能。如果你还没有这样做，你可能需要阅读\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#getting-started\"\u003e入门\u003c/a\u003e\u0026ldquo;和\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using\"\u003e使用Spring Cloud Sleuth\u003c/a\u003e\u0026ldquo;部分，以便你有一个良好的基础知识。\u003c/p\u003e\n\u003ch3 id=\"41-context-传播\"\u003e4.1. Context 传播\u003c/h3\u003e\n\u003cp\u003e追踪使用标头传播从服务连接到服务。默认格式是\u003ca href=\"https://github.com/openzipkin/b3-propagation\"\u003eB3\u003c/a\u003e。与数据格式类似，你也可以配置替代的头格式，只要跟踪和跨度ID与B3兼容。最值得注意的是，这意味着跟踪ID和跨度ID是小写的十六进制，而不是UUID。除了跟踪标识符，其他属性（Baggage）也可以与请求一起传递。远程Baggage必须是预定义的，但在其他方面是灵活的。\u003c/p\u003e\n\u003cp\u003e要使用提供的默认值，你可以设置\u003ccode\u003espring.sleuth.propagation.type\u003c/code\u003e属性。该值可以是一个列表，在这种情况下，你将传播更多的跟踪头信息。\u003c/p\u003e\n\u003cp\u003e对于Brave，我们支持\u003ccode\u003eAWS\u003c/code\u003e、\u003ccode\u003eB3\u003c/code\u003e、\u003ccode\u003eW3C\u003c/code\u003e的传播类型。\u003c/p\u003e\n\u003cp\u003e你可以在这个\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#how-to-change-context-propagation\"\u003ehow to section\u003c/a\u003e \u0026ldquo;中阅读更多关于如何提供自定义上下文传播的信息。\u003c/p\u003e\n\u003ch3 id=\"42-采样\"\u003e4.2. 采样\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth将抽样决策推给了追踪器的实现。然而，在有些情况下，你可以在运行时改变采样决定。\u003c/p\u003e\n\u003cp\u003e其中一种情况是跳过某些客户端的跨度报告。为了实现这一点，你可以在\u003ccode\u003espring.sleuth.web.client.skip-pattern\u003c/code\u003e中设置要跳过的路径模式。另一个选择是提供你自己的自定义\u003ccode\u003eorg.springframework.cloud.sleuth.SamplerFunction\u0026lt;org.springframework.cloud.sleuth.http.HttpRequest\u0026gt;\u003c/code\u003e实现并定义何时不应对给定的\u003ccode\u003eHttpRequest\u003c/code\u003e进行采样。\u003c/p\u003e\n\u003ch3 id=\"43-baggage\"\u003e4.3. Baggage\u003c/h3\u003e\n\u003cp\u003e分布式跟踪是通过传播服务内部和跨服务的字段来进行的，这些字段将跟踪连接在一起：traceId和spanId值得注意。持有这些字段的上下文可以选择推送其他字段，这些字段需要保持一致，无论触及的服务有多少。这些额外字段的简单名称是 \u0026ldquo;Baggage\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003eSleuth允许你定义哪些Baggage允许存在于跟踪上下文中，包括使用什么样的头名称。\u003c/p\u003e\n\u003cp\u003e下面的例子展示了使用Spring Cloud Sleuth的API设置Baggage值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpanInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einitialSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBaggageInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ebusinessProcess\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreateBaggage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBUSINESS_PROCESS\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ALM\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBaggageInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ecountryCode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreateBaggage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCOUNTRY_CODE\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;FO\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e目前对Baggage项目的数量或大小没有限制。请记住，过多的Baggage会降低系统的吞吐量或增加RPC的延迟。在极端情况下，过多的Baggage会使应用程序崩溃，原因是超过了传输级的消息或标题的容量。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你可以使用属性来定义没有特殊配置的字段，如名称映射。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003espring.sleuth.baggage.remote-fields\u003c/code\u003e是一个接受并传播给远程服务的头名称的列表。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.sleuth.baggage.local-fields\u003c/code\u003e是一个要在本地传播的名称列表。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这些键不适用前缀。你所设置的就是实际使用的。\u003c/p\u003e\n\u003cp\u003e在这两个属性中的任何一个中设置的名称都会导致一个相同名称的 \u0026ldquo;Baggage\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e为了自动将Baggage值设置为Slf4j的MDC，你必须用一个允许的本地或远程键的列表来设置\u003ccode\u003espring.sleuth.baggage.correlation-fields\u003c/code\u003e属性。例如，\u003ccode\u003espring.sleuth.baggage.correlation-fields=country-code\u003c/code\u003e将把\u003ccode\u003ecountry-code\u003c/code\u003e包袱的值设置到MDC。\u003c/p\u003e\n\u003cp\u003e注意，额外的字段会从下一个下游跟踪上下文开始传播并添加到 MDC 中。要在当前跟踪上下文中立即将额外字段添加到 MDC 中，请将该字段配置为更新时刷新。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// configuration\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eBaggageField\u003c/span\u003e \u003cspan class=\"nf\"\u003ecountryCodeField\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eBaggageField\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;country-code\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eScopeDecorator\u003c/span\u003e \u003cspan class=\"nf\"\u003emdcScopeDecorator\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMDCScopeDecorator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclear\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadd\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSingleCorrelationField\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecountryCodeField\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eflushOnUpdate\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// service\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"n\"\u003eBaggageField\u003c/span\u003e \u003cspan class=\"n\"\u003ecountryCodeField\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ecountryCodeField\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eupdateValue\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;new-value\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e请记住，向MDC添加条目会大大降低你的应用程序的性能!\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你想把Baggage条目作为标签加入，以便能够通过Baggage条目搜索跨度，你可以用允许的行李键列表设置\u003ccode\u003espring.sleuth.baggage.tag-fields\u003c/code\u003e的值。要禁用该功能，你必须通过\u003ccode\u003espring.sleuth.propagation.tag.enabled=false\u003c/code\u003e属性。\u003c/p\u003e\n\u003ch4 id=\"431-baggage-versus-tags\"\u003e4.3.1 Baggage versus Tags\u003c/h4\u003e\n\u003cp\u003e与跟踪ID一样，Baggage被附加到消息或请求中，通常作为头文件。标签是以Span的形式发送到Zipkin的键值对。Baggage值默认不加入span，这意味着除非你选择加入，否则你不能根据Baggage进行搜索。\u003c/p\u003e\n\u003cp\u003e要使Baggage也成为标签，请使用属性\u003ccode\u003espring.sleuth.baggage.tag-fields\u003c/code\u003e，像这样。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003esleuth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebaggage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebar\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eremoteFields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ecountry-code\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ex-vcap-request-id\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etagFields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ecountry-code\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"44-openzipkin-brave-tracer集成\"\u003e4.4. OpenZipkin Brave Tracer集成\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth通过 \u003ccode\u003espring-cloud-sleuth-brave\u003c/code\u003e模块中的bridge与OpenZipkin Brave追踪器集成。在本节中，你可以了解到具体的Brave集成。\u003c/p\u003e\n\u003cp\u003e你可以选择在你的代码中直接使用Sleuth的API或Brave的API（例如，Sleuth的\u003ccode\u003eTracer\u003c/code\u003e或Brave的\u003ccode\u003eTracer\u003c/code\u003e）。如果你想直接使用这个追踪器实现的API，请阅读\u003ca href=\"https://github.com/openzipkin/brave\"\u003e他们的文档以了解更多信息\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"441-brave-basics\"\u003e4.4.1. Brave Basics\u003c/h4\u003e\n\u003cp\u003e以下是你可能使用的最核心的类型。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ebrave.SpanCustomizer\u003c/code\u003e - 改变当前正在进行的span。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebrave.Tracer\u003c/code\u003e - 开始临时性的新span。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以下是OpenZipkin Brave项目中最相关的链接。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/openzipkin/brave/tree/master/brave\"\u003eBrave’s core library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/openzipkin/brave/tree/master/brave#baggage\"\u003eBaggage (propagated fields)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/http\"\u003eHTTP tracing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"442-brave-sampling\"\u003e4.4.2. Brave Sampling\u003c/h4\u003e\n\u003cp\u003e采样只适用于追踪后端，如Zipkin。无论采样率如何，日志中都会出现跟踪ID。采样是一种防止系统过载的方法，即持续追踪一些但不是所有的请求。\u003c/p\u003e\n\u003cp\u003e默认速率为每秒10条，由spring.sleuth.sampler.rate属性控制，当我们知道Sleuth是用于记录以外的原因时，就会适用。使用每秒100条以上的采样率时要特别小心，因为它可能会使你的跟踪系统超载。\u003c/p\u003e\n\u003cp\u003e采样器也可以通过Java配置来设置，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eSampler\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eALWAYS_SAMPLE\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e你可以把HTTP标头b3设置为1，或者在进行信息传递时，你可以把spanFlags标头设置为1。这样做可以强制对当前请求进行采样，而不考虑配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e默认情况下，采样器将与刷新范围机制一起工作。这意味着你可以在运行时改变采样属性，刷新应用程序，这些变化将得到反映。然而，有时围绕采样器创建一个代理并过早地调用它（从\u003ccode\u003e@PostConstruct\u003c/code\u003e注释的方法）可能会导致死锁。在这种情况下，要么明确地创建一个采样器bean，要么将属性\u003ccode\u003espring.sleuth.sampler.refresh.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e以禁用刷新范围支持。\u003c/p\u003e\n\u003ch4 id=\"443-brave-baggage-java-configuration\"\u003e4.4.3. Brave Baggage Java configuration\u003c/h4\u003e\n\u003cp\u003e如果你需要做比上面更高级的事情，请不要定义属性，而是为你使用的包袱字段使用\u003ccode\u003e@Bean\u003c/code\u003e配置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eBaggagePropagationCustomizer\u003c/code\u003e设置baggage字段\u003c/li\u003e\n\u003cli\u003e添加一个\u003ccode\u003eSingleBaggageField\u003c/code\u003e来控制一个\u003ccode\u003eBaggage\u003c/code\u003e的标题名称。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCorrelationScopeCustomizer\u003c/code\u003e设置了MDC字段\u003c/li\u003e\n\u003cli\u003e添加一个\u003ccode\u003eSingleCorrelationField\u003c/code\u003e来改变一个\u003ccode\u003ebaggage\u003c/code\u003e的MDC名称，或者如果更新刷新。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"444-brave-customizations\"\u003e4.4.4. Brave Customizations\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003ebrave.Tracer\u003c/code\u003e对象是由sleuth完全管理的，所以你很少需要影响它。也就是说，Sleuth支持一些\u003ccode\u003eCustomizer\u003c/code\u003e类型，允许你配置任何Sleuth尚未用自动配置或属性完成的东西。\u003c/p\u003e\n\u003cp\u003e如果你把下面的一个定义为 \u0026ldquo;Bean\u0026rdquo;，Sleuth将调用它来定制行为。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eRpcTracingCustomizer\u003c/code\u003e - 用于RPC标记和采样策略\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eHttpTracingCustomizer\u003c/code\u003e - 用于HTTP标记和采样策略\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMessagingTracingCustomizer\u003c/code\u003e - 用于消息标记和取样策略\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCurrentTraceContextCustomizer\u003c/code\u003e - 集成装饰器，如关联性。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eBaggagePropagationCustomizer\u003c/code\u003e - 用于在进程中和在标题上传播包袱字段\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCorrelationScopeDecoratorCustomizer\u003c/code\u003e - 用于范围装饰，如MDC（日志）字段的相关。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eBrave Sampling Customizations\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e如果需要客户端/服务器采样，只需注册一个\u003ccode\u003ebrave.sampler.SamplerFunction\u0026lt;HttpRequest\u0026gt;\u003c/code\u003e类型的Bean，并将该Bean命名为\u003ccode\u003esleuthHttpClientSampler\u003c/code\u003e用于客户端采样，\u003ccode\u003esleuthHttpServerSampler\u003c/code\u003e用于服务器采样。\u003c/p\u003e\n\u003cp\u003e为了方便起见，\u003ccode\u003e@HttpClientSampler\u003c/code\u003e和\u003ccode\u003e@HttpServerSampler\u003c/code\u003e注解可以用来注入适当的Bean或通过其静态字符串\u003ccode\u003eNAME\u003c/code\u003e字段来引用Bean名称。\u003c/p\u003e\n\u003cp\u003e查看Brave的代码，看看如何制作一个基于路径的采样器的例子\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/http#sampling-policy\"\u003egithub.com/openzipkin/brave/tree/master/instrumentation/http#sampling-policy\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e如果你想完全重写\u003ccode\u003eHttpTracing\u003c/code\u003ebean，你可以使用\u003ccode\u003eSkipPatternProvider\u003c/code\u003e接口来检索那些不应该被采样的跨度的URL\u003ccode\u003ePattern\u003c/code\u003e。下面你可以看到一个在服务器端使用\u003ccode\u003eSkipPatternProvider\u003c/code\u003e的例子，\u003ccode\u003eSampler\u0026lt;HttpRequest\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServerSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eSamplerFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSkipPatternProvider\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ePattern\u003c/span\u003e \u003cspan class=\"n\"\u003epattern\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eskipPattern\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"n\"\u003eshouldSkip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epattern\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ematcher\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ematches\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eshouldSkip\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n              \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"445-brave-messaging\"\u003e4.4.5. Brave Messaging\u003c/h4\u003e\n\u003cp\u003eSleuth自动配置了\u003ccode\u003eMessagingTracing\u003c/code\u003ebean，作为Kafka或JMS等消息传递工具的基础。\u003c/p\u003e\n\u003cp\u003e如果需要定制生产者/消费者的消息跟踪采样，只需注册一个\u003ccode\u003ebrave.sampler.SamplerFunction\u0026lt;MessagingRequest\u0026gt;\u003c/code\u003e类型的bean，并为生产者采样的bean命名为\u003ccode\u003esleuthProducerSampler\u003c/code\u003e，为消费者采样命名为\u003ccode\u003esleuthConsumerSampler\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e为了方便起见，\u003ccode\u003e@ProducerSampler\u003c/code\u003e和\u003ccode\u003e@ConsumerSampler\u003c/code\u003e注解可用于注入适当的Bean或通过其静态字符串\u003ccode\u003eNAME\u003c/code\u003e字段引用Bean名称。\u003c/p\u003e\n\u003cp\u003e例如。这是一个每秒追踪100个消费者请求的采样器，除了 \u0026ldquo;alerts\u0026quot;通道。其他请求将使用由\u003ccode\u003eTracing\u003c/code\u003e组件提供的全局速率。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eConsumerSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eSamplerFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessagingRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003emyMessagingSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMessagingRuleSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eputRule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echannelNameEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;alerts\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNEVER_SAMPLE\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n              \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eputRule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMatchers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ealwaysMatch\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eRateLimitingSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更多内容请见\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/messaging#sampling-policy\"\u003egithub.com/openzipkin/brave/tree/master/instrumentation/messaging#sampling-policy\u003c/a\u003e\u003c/p\u003e\n\u003ch4 id=\"446-brave-opentracing\"\u003e4.4.6. Brave Opentracing\u003c/h4\u003e\n\u003cp\u003e你可以通过\u003ccode\u003eio.opentracing.brave:brave-opentracing\u003c/code\u003e bridge 与Brave和\u003ca href=\"https://opentracing.io/\"\u003eOpenTracing\u003c/a\u003e集成。只要把它添加到classpath中，OpenTracing的\u003ccode\u003eTracer\u003c/code\u003e就会被自动设置。\u003c/p\u003e\n\u003ch3 id=\"45-向zipkin发送span\"\u003e4.5. 向Zipkin发送Span\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth提供了与\u003ca href=\"https://zipkin.io/\"\u003eOpenZipkin\u003c/a\u003e分布式跟踪系统的各种集成。无论选择何种追踪器实现，只需在classpath中添加\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e，就可以开始向Zipkin发送Span。你可以选择通过HTTP或消息传递来实现。你可以在\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#how-to-set-up-sleuth-with-brave-zipkin-messaging\"\u003ehow to section\u003c/a\u003e \u0026ldquo;中阅读更多关于如何做到这一点的信息。\u003c/p\u003e\n\u003cp\u003e当span被关闭时，它将通过HTTP发送给Zipkin。该通信是异步的。你可以通过设置\u003ccode\u003espring.zipkin.baseUrl\u003c/code\u003e属性来配置URL，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.baseUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://192.168.99.100:9411/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果想通过服务发现找到Zipkin，可以在URL内传递Zipkin的服务ID，如下例所示为\u003ccode\u003ezipkinserver\u003c/code\u003e服务ID。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.baseUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://zipkinserver/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要禁用该功能，只需将\u003ccode\u003espring.zipkin.discovery-client-enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e当发现客户端功能启用时，Sleuth使用\u003ccode\u003eLoadBalancerClient\u003c/code\u003e来查找Zipkin服务器的URL。这意味着你可以设置负载平衡的配置。\u003c/p\u003e\n\u003cp\u003e如果你在classpath上有\u003ccode\u003eweb\u003c/code\u003e、\u003ccode\u003erabbit\u003c/code\u003e、\u003ccode\u003eactivemq\u003c/code\u003e或\u003ccode\u003ekafka\u003c/code\u003e在一起，你可能需要挑选你想发送spans到zipkin的方式。为此，将\u003ccode\u003eweb\u003c/code\u003e、\u003ccode\u003erabbit\u003c/code\u003e、\u003ccode\u003eactivemq\u003c/code\u003e或\u003ccode\u003ekafka\u003c/code\u003e设置为\u003ccode\u003espring.zipkin.sender.type\u003c/code\u003e属性。下面的例子显示了设置\u003ccode\u003eweb\u003c/code\u003e的sender类型。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.sender.type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eweb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要定制通过HTTP向Zipkin发送span的\u003ccode\u003eRestTemplate\u003c/code\u003e，可以注册\u003ccode\u003eZipkinRestTemplateCustomizer\u003c/code\u003e bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e \u003cspan class=\"n\"\u003eZipkinRestTemplateCustomizer\u003c/span\u003e \u003cspan class=\"nf\"\u003emyCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eZipkinRestTemplateCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n            \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// customize the RestTemplate\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然而，如果你想控制创建\u003ccode\u003eRestTemplate\u003c/code\u003e对象的整个过程，你必须创建一个\u003ccode\u003ezipkin2.reporter.Sender\u003c/code\u003e类型的bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e \u003cspan class=\"n\"\u003eSender\u003c/span\u003e \u003cspan class=\"nf\"\u003emyRestTemplateSender\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eZipkinProperties\u003c/span\u003e \u003cspan class=\"n\"\u003ezipkin\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eZipkinRestTemplateCustomizer\u003c/span\u003e \u003cspan class=\"n\"\u003ezipkinRestTemplateCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emySuperCustomRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ezipkinRestTemplateCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustomize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emyCustomSender\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ezipkin\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认情况下，api路径将被设置为\u003ccode\u003eapi/v2/spans\u003c/code\u003e或\u003ccode\u003eapi/v1/spans\u003c/code\u003e，取决于编码器版本。如果你想使用自定义的api路径，你可以使用以下属性进行配置（空的情况下，设置\u0026rdquo;\u0026quot;）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.api-path\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev2/path2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"451-自定义-service-名称\"\u003e4.5.1. 自定义 service 名称\u003c/h4\u003e\n\u003cp\u003e默认情况下，Sleuth假定，当你向Zipkin发送span时，你希望span的服务名称等于\u003ccode\u003espring.application.name\u003c/code\u003e属性的值。不过，情况并非总是如此。在有些情况下，你想为来自你的应用程序的所有span明确提供一个不同的服务名称。为了达到这个目的，你可以向你的应用程序传递以下属性来覆盖这个值（这个例子是针对一个名为\u003ccode\u003emyService\u003c/code\u003e的服务）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.service.name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyService\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"452-host-locator\"\u003e4.5.2. Host Locator\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003cp\u003e本节是关于从服务发现中定义主机。它不是关于通过服务发现找到Zipkin。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e为了定义对应于一个特定`span\u0026rsquo;的主机，我们需要解决主机名和端口。默认的方法是从服务器属性中获取这些值。如果这些没有设置，我们尝试从网络接口检索主机名。\u003c/p\u003e\n\u003cp\u003e如果你启用了发现客户端，并且喜欢从服务注册表中的注册实例检索主机地址，你必须设置\u003ccode\u003espring.zipkin.locator.discovery.enabled\u003c/code\u003e属性（它适用于基于HTTP和基于流的跨度报告），如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.locator.discovery.enabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"453-customization-of-reported-spans\"\u003e4.5.3. Customization of Reported Spans\u003c/h4\u003e\n\u003cp\u003e在Sleuth中，我们用一个固定的名字来生成Span。有些用户希望根据标签的值来修改名称。\u003c/p\u003e\n\u003cp\u003eSleuth注册了一个\u003ccode\u003eSpanFilter\u003c/code\u003ebean，可以自动跳过报告给定名称模式的Span。属性\u003ccode\u003espring.sleuth.span-filter.span-name-patterns-to-skip\u003c/code\u003e包含span名称的默认跳过模式。属性\u003ccode\u003espring.sleuth.span-filter.additional-span-name-patterns-to-skip\u003c/code\u003e将把提供的Span名称模式追加到现有的模式中。为了禁用这个功能，只需将\u003ccode\u003espring.sleuth.span-filter.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBrave Customization of Reported Spans\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e本节仅适用于Brave追踪器。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e在报告Span之前（例如，向Zipkin），你可能想以某种方式修改该Span。你可以通过实现 \u0026ldquo;SpanHandler\u0026quot;来实现。\u003c/p\u003e\n\u003cp\u003e下面的例子显示了如何注册两个实现\u003ccode\u003eSpanHandler\u003c/code\u003e的bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eSpanHandler\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandlerOne\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpanHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e \u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMutableSpan\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCause\u003c/span\u003e \u003cspan class=\"n\"\u003ecause\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;foo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// keep this span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eSpanHandler\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandlerTwo\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpanHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e \u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMutableSpan\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCause\u003c/span\u003e \u003cspan class=\"n\"\u003ecause\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; bar\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// keep this span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的例子导致报告的span的名称改为\u003ccode\u003efoo bar\u003c/code\u003e，就在它被报告之前（例如，给Zipkin）。\u003c/p\u003e\n\u003ch4 id=\"454-覆盖zipkin的自动配置\"\u003e4.5.4. 覆盖Zipkin的自动配置\u003c/h4\u003e\n\u003cp\u003e从2.1.0版本开始，Spring Cloud Sleuth支持向多个追踪系统发送追踪信息。为了使其发挥作用，每个追踪系统都需要有一个\u003ccode\u003eReporter\u0026lt;Span\u0026gt;\u003c/code\u003e和\u003ccode\u003eSender\u003c/code\u003e。如果你想覆盖所提供的bean，你需要给它们一个特定的名字。要做到这一点，你可以分别使用\u003ccode\u003eZipkinAutoConfiguration.Reporter_BEAN_NAME\u003c/code\u003e和\u003ccode\u003eZipkinAutoConfiguration.SENDER_BEAN_NAME\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eZipkinAutoConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eREPORTER_BEAN_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eReporter\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ezipkin2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003emyReporter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Qualifier\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eZipkinAutoConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSENDER_BEAN_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eMySender\u003c/span\u003e \u003cspan class=\"n\"\u003emySender\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncReporter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emySender\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eZipkinAutoConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSENDER_BEAN_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eMySender\u003c/span\u003e \u003cspan class=\"nf\"\u003emySender\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eMySender\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMySender\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eSender\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"n\"\u003espanSent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eisSpanSent\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espanSent\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eEncoding\u003c/span\u003e \u003cspan class=\"nf\"\u003eencoding\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eEncoding\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eJSON\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emessageMaxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eMAX_VALUE\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emessageSizeInBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eencodedSpans\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eencoding\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003elistSizeInBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencodedSpans\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCall\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eVoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003esendSpans\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eencodedSpans\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espanSent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eCall\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"46-日志整合\"\u003e4.6. 日志整合\u003c/h3\u003e\n\u003cp\u003eSleuth用包括服务名称（\u003ccode\u003e%{spring.zipkin.service.name}\u003c/code\u003e或\u003ccode\u003e%{spring.application.name}\u003c/code\u003e，如果之前没有设置）、span ID（\u003ccode\u003e%{spanId}\u003c/code\u003e）和trace ID（\u003ccode\u003e%{traceId}\u003c/code\u003e）等变量配置日志上下文。这些有助于你将日志与分布式跟踪联系起来，并允许你选择使用什么工具来排除服务的故障。\u003c/p\u003e\n\u003cp\u003e一旦你发现任何有错误的日志，你可以在消息中寻找跟踪ID。把它粘贴到你的分布式跟踪系统中，以可视化整个跟踪，不管第一个请求最终击中了多少个服务。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003ebackend.log:  2020-04-09 17:45:40.516 ERROR [backend,5e8eeec48b08e26882aba313eb08f0a4,dcc1df555b5777b3] 97203 --- [nio-9000-exec-1] o.s.c.s.i.web.ExceptionLoggingFilter     : Uncaught exception thrown\nfrontend.log:2020-04-09 17:45:40.574 ERROR [frontend,5e8eeec48b08e26882aba313eb08f0a4,82aba313eb08f0a4] 97192 --- [nio-8081-exec-2] o.s.c.s.i.web.ExceptionLoggingFilter     : Uncaught exception thrown\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面，你会注意到跟踪ID是\u003ccode\u003e5e8eeec48b08e26882aba313eb08f0a4\u003c/code\u003e ，例如。这个日志配置是由Sleuth自动设置的。你可以通过\u003ccode\u003espring.sleuth.enabled=false\u003c/code\u003e属性禁用Sleuth，或者放入你自己的\u003ccode\u003elogging.pattern.level\u003c/code\u003e属性来禁用它。\u003c/p\u003e\n\u003cp\u003e如果你使用一个日志聚合工具（如\u003ca href=\"https://www.elastic.co/products/kibana\"\u003eKibana\u003c/a\u003e, \u003ca href=\"https://www.splunk.com/\"\u003eSplunk\u003c/a\u003e, 和其他），你可以对发生的事件进行排序。来自Kibana的一个例子类似于下面的图片。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/KevinBlandy/springcloud-images/2021/07/25/3c975295b96f4b65ad8911fd52f2740f.png\" alt=\" \"\u003e\u003c/p\u003e\n\u003cp\u003e如果你想使用\u003ca href=\"https://www.elastic.co/guide/en/logstash/current/index.html\"\u003eLogstash\u003c/a\u003e，下面列出了Logstash的Grok模式。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003efilter {\n  # pattern matching logback pattern\n  grok {\n    match =\u0026gt; { \u0026#34;message\u0026#34; =\u0026gt; \u0026#34;%{TIMESTAMP_ISO8601:timestamp}\\s+%{LOGLEVEL:severity}\\s+\\[%{DATA:service},%{DATA:trace},%{DATA:span}\\]\\s+%{DATA:pid}\\s+---\\s+\\[%{DATA:thread}\\]\\s+%{DATA:class}\\s+:\\s+%{GREEDYDATA:rest}\u0026#34; }\n  }\n  date {\n    match =\u0026gt; [\u0026#34;timestamp\u0026#34;, \u0026#34;ISO8601\u0026#34;]\n  }\n  mutate {\n    remove_field =\u0026gt; [\u0026#34;timestamp\u0026#34;]\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果您想将 Grok 与 Cloud Foundry 的日志一起使用，您必须使用以下模式。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003efilter {\n  # pattern matching logback pattern\n  grok {\n    match =\u0026gt; { \u0026#34;message\u0026#34; =\u0026gt; \u0026#34;(?m)OUT\\s+%{TIMESTAMP_ISO8601:timestamp}\\s+%{LOGLEVEL:severity}\\s+\\[%{DATA:service},%{DATA:trace},%{DATA:span}\\]\\s+%{DATA:pid}\\s+---\\s+\\[%{DATA:thread}\\]\\s+%{DATA:class}\\s+:\\s+%{GREEDYDATA:rest}\u0026#34; }\n  }\n  date {\n    match =\u0026gt; [\u0026#34;timestamp\u0026#34;, \u0026#34;ISO8601\u0026#34;]\n  }\n  mutate {\n    remove_field =\u0026gt; [\u0026#34;timestamp\u0026#34;]\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"461-使用logstash的json-logback\"\u003e4.6.1. 使用Logstash的JSON Logback\u003c/h4\u003e\n\u003cp\u003e通常情况下，你不希望将你的日志存储在文本文件中，而是存储在Logstash可以立即提取的JSON文件中。要做到这一点，你必须做到以下几点（为了便于阅读，我们用\u003ccode\u003egroupId:artifactId:version\u003c/code\u003e的符号来传递依赖关系）。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDependencies Setup\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e确保 Logback 在 classpath 上 ( \u003ccode\u003ech.qos.logback:logback-core\u003c/code\u003e ) 。\u003c/li\u003e\n\u003cli\u003e2.添加 Logstash Logback 编码。例如，要使用\u003ccode\u003e4.6\u003c/code\u003e版本，添加\u003ccode\u003enet.logstash.logback:logstash-logback-encoder:4.6\u003c/code\u003e。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eLogback设置\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e考虑一下下面这个Logback配置文件的例子（logback-spring.xml）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;configuration\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;include\u003c/span\u003e \u003cspan class=\"na\"\u003eresource=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;org/springframework/boot/logging/logback/defaults.xml\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;springProperty\u003c/span\u003e \u003cspan class=\"na\"\u003escope=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;springAppName\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003esource=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;spring.application.name\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Example for logging into the build folder of your project --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;property\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;LOG_FILE\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${BUILD_FOLDER:-build}/${springAppName}\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- You can override this to have a custom pattern --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;property\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;CONSOLE_LOG_PATTERN\u0026#34;\u003c/span\u003e\n              \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Appender to log to console --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;console\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.ConsoleAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;filter\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.classic.filter.ThresholdFilter\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"c\"\u003e\u0026lt;!-- Minimum logging level to be presented in the console logs--\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;level\u0026gt;\u003c/span\u003eDEBUG\u003cspan class=\"nt\"\u003e\u0026lt;/level\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/filter\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;encoder\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e${CONSOLE_LOG_PATTERN}\u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;charset\u0026gt;\u003c/span\u003eutf8\u003cspan class=\"nt\"\u003e\u0026lt;/charset\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/encoder\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Appender to log to file --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;flatfile\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.rolling.RollingFileAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;file\u0026gt;\u003c/span\u003e${LOG_FILE}\u003cspan class=\"nt\"\u003e\u0026lt;/file\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;rollingPolicy\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.rolling.TimeBasedRollingPolicy\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;fileNamePattern\u0026gt;\u003c/span\u003e${LOG_FILE}.%d{yyyy-MM-dd}.gz\u003cspan class=\"nt\"\u003e\u0026lt;/fileNamePattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;maxHistory\u0026gt;\u003c/span\u003e7\u003cspan class=\"nt\"\u003e\u0026lt;/maxHistory\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/rollingPolicy\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;encoder\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e${CONSOLE_LOG_PATTERN}\u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;charset\u0026gt;\u003c/span\u003eutf8\u003cspan class=\"nt\"\u003e\u0026lt;/charset\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/encoder\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Appender to log to file in a JSON format --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;logstash\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.rolling.RollingFileAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;file\u0026gt;\u003c/span\u003e${LOG_FILE}.json\u003cspan class=\"nt\"\u003e\u0026lt;/file\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;rollingPolicy\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.rolling.TimeBasedRollingPolicy\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;fileNamePattern\u0026gt;\u003c/span\u003e${LOG_FILE}.json.%d{yyyy-MM-dd}.gz\u003cspan class=\"nt\"\u003e\u0026lt;/fileNamePattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;maxHistory\u0026gt;\u003c/span\u003e7\u003cspan class=\"nt\"\u003e\u0026lt;/maxHistory\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/rollingPolicy\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;encoder\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;providers\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;timestamp\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;timeZone\u0026gt;\u003c/span\u003eUTC\u003cspan class=\"nt\"\u003e\u0026lt;/timeZone\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/timestamp\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e\n                        {\n                        \u0026#34;timestamp\u0026#34;: \u0026#34;@timestamp\u0026#34;,\n                        \u0026#34;severity\u0026#34;: \u0026#34;%level\u0026#34;,\n                        \u0026#34;service\u0026#34;: \u0026#34;${springAppName:-}\u0026#34;,\n                        \u0026#34;trace\u0026#34;: \u0026#34;%X{traceId:-}\u0026#34;,\n                        \u0026#34;span\u0026#34;: \u0026#34;%X{spanId:-}\u0026#34;,\n                        \u0026#34;pid\u0026#34;: \u0026#34;${PID:-}\u0026#34;,\n                        \u0026#34;thread\u0026#34;: \u0026#34;%thread\u0026#34;,\n                        \u0026#34;class\u0026#34;: \u0026#34;%logger{40}\u0026#34;,\n                        \u0026#34;rest\u0026#34;: \u0026#34;%message\u0026#34;\n                        }\n                    \u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/providers\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/encoder\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;root\u003c/span\u003e \u003cspan class=\"na\"\u003elevel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;INFO\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;appender-ref\u003c/span\u003e \u003cspan class=\"na\"\u003eref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;console\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- uncomment this to have also JSON logs --\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!--\u0026lt;appender-ref ref=\u0026#34;logstash\u0026#34;/\u0026gt;--\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!--\u0026lt;appender-ref ref=\u0026#34;flatfile\u0026#34;/\u0026gt;--\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/root\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/configuration\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e即Logback配置文件。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e将应用程序的信息以JSON格式记录到\u003ccode\u003ebuild/${spring.application.name}.json\u003c/code\u003e文件。\u003c/li\u003e\n\u003cli\u003e已经注释了两个额外的应用者：控制台和标准日志文件。\u003c/li\u003e\n\u003cli\u003e具有与上一节中介绍的相同的日志模式。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用一个自定义的\u003ccode\u003elogback-spring.xml\u003c/code\u003e，你必须在\u003ccode\u003ebootstrap\u003c/code\u003e中传递\u003ccode\u003espring.application.name\u003c/code\u003e，而不是\u003ccode\u003eapplication\u003c/code\u003e属性文件。否则，你的自定义logback文件就不能正确读取该属性。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"47-接下来要读的内容\"\u003e4.7. 接下来要读的内容\u003c/h3\u003e\n\u003cp\u003e如果你想进一步了解本节讨论的任何一个类，你可以直接浏览\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth/tree/main\"\u003e源代码\u003c/a\u003e。如果你有具体问题，请看\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#howto\"\u003e如何做\u003c/a\u003e部分。\u003c/p\u003e\n\u003cp\u003e如果你对Spring Cloud Sleuth的核心功能感到满意，你可以继续阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#integrations.adoc\"\u003eSpring Cloud Sleuth的集成\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"5-how-to-guides\"\u003e5. “How-to” Guides\u003c/h2\u003e\n\u003cp\u003e本节为使用Spring Cloud Sleuth时经常出现的一些常见的 \u0026ldquo;如何做\u0026hellip;\u0026hellip; \u0026ldquo;问题提供答案。它的覆盖面并不全面，但确实涵盖了相当多的内容。\u003c/p\u003e\n\u003cp\u003e如果你有一个特定的问题，而我们在这里没有涉及，你可能想去看看\u003ca href=\"https://stackoverflow.com/tags/spring-cloud-sleuth\"\u003estackoverflow.com\u003c/a\u003e，看看是否有人已经提供了答案。Stack Overflow也是一个提出新问题的好地方（请使用\u003ccode\u003espring-cloud-sleuth\u003c/code\u003e标签）。\u003c/p\u003e\n\u003cp\u003e我们也非常乐意扩展这个部分。如果你想添加一个 \u0026ldquo;如何做\u0026rdquo;，请向我们发送一个\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth/tree/main\"\u003e拉动请求\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"51-如何用brave设置sleuth\"\u003e5.1. 如何用Brave设置Sleuth？\u003c/h3\u003e\n\u003cp\u003e将Sleuth starter 添加到classpath。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"52-如何通过http设置sleuth与brave--zipkin\"\u003e5.2. 如何通过HTTP设置Sleuth与Brave \u0026amp; Zipkin？\u003c/h3\u003e\n\u003cp\u003e将Sleuth启动器和Zipkin添加到classpath。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-sleuth-zipkin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"53-如何通过信息传递将sleuth与brave--zipkin设置在一起\"\u003e5.3. 如何通过信息传递将Sleuth与Brave \u0026amp; Zipkin设置在一起？\u003c/h2\u003e\n\u003cp\u003e如果你想使用RabbitMQ、Kafka或ActiveMQ而不是HTTP，请添加\u003ccode\u003espring-rabbit\u003c/code\u003e、\u003ccode\u003espring-kafka\u003c/code\u003e或\u003ccode\u003eorg.apache.activemq:activemq-client\u003c/code\u003e依赖项。默认的目标名称是\u003ccode\u003eZipkin\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果使用Kafka，你必须添加Kafka依赖性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-sleuth-zipkin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.kafka\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-kafka\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e另外，你需要相应地设置\u003ccode\u003espring.zipkin.sender.type\u003c/code\u003e属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.sender.type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ekafka\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你想在RabbitMQ上使用Sleuth，请添加\u003ccode\u003espring-cloud-starter-sleuth\u003c/code\u003e、\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e和\u003ccode\u003espring-rabbit\u003c/code\u003e依赖项。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-sleuth-zipkin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.amqp\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-rabbit\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你想在ActiveMQ上使用Sleuth，请添加\u003ccode\u003espring-cloud-starter-sleuth\u003c/code\u003e、\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e和\u003ccode\u003eactivemq-client\u003c/code\u003e依赖项。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-sleuth-zipkin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.apache.activemq\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003eactivemq-client\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e另外，你需要相应地设置\u003ccode\u003espring.zipkin.sender.type\u003c/code\u003e属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.sender.type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactivemq\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"54-如何在一个外部系统中看到span\"\u003e5.4. 如何在一个外部系统中看到Span？\u003c/h3\u003e\n\u003cp\u003e如果你看不到Span被报告给外部系统（如Zipkin），那么很可能是由于以下原因。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#not-sampled-span\"\u003e你的Span没有被采样\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#missing-dependency\"\u003e你忘记添加向外部系统报告的依赖关系（如\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e）\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#connection-misconfiguration\"\u003e你错误地配置了与外部系统的连接\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"541-你的span没有被采样\"\u003e5.4.1. 你的Span没有被采样\u003c/h4\u003e\n\u003cp\u003e为了检查跨度是否没有被采样，只要看看可导出的标志是否被设置就可以了。让我们看一下下面的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e2020-10-21 12:01:16.285  INFO [backend,0b6aaf642574edd3,0b6aaf642574edd3,true] 289589 --- [nio-9000-exec-1] Example              : Hello world!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果\u003ccode\u003e[backend,0b6aaf642574edd3,0b6aaf642574edd3,true]\u003c/code\u003e部分的布尔值为 \u0026ldquo;true\u0026rdquo;，意味着该跨度正在被采样，应该被报告。\u003c/p\u003e\n\u003ch4 id=\"542-缺少依赖性\"\u003e5.4.2. 缺少依赖性\u003c/h4\u003e\n\u003cp\u003e直到Sleuth 3.0.0，\u003ccode\u003espring-cloud-starter-zipkin\u003c/code\u003e这个依赖项包括\u003ccode\u003espring-cloud-starter-sleuth\u003c/code\u003e依赖项和\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e依赖项。在3.0.0版本中，\u003ccode\u003espring-cloud-starter-zipkin\u003c/code\u003e被移除，所以你需要把它改为\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"543-连接错误配置\"\u003e5.4.3. 连接错误配置\u003c/h4\u003e\n\u003cp\u003e仔细检查远程系统地址是否正确（例如\u003ccode\u003espring.zipkin.baseUrl\u003c/code\u003e），如果试图通过broker进行通信，你的broker连接设置正确。\u003c/p\u003e\n\u003ch3 id=\"55-如何使resttemplatewebclient等工作\"\u003e5.5. 如何使RestTemplate、WebClient等。工作？\u003c/h3\u003e\n\u003cp\u003e如果你观察到追踪上下文没有被传播，那么原因是以下之一。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e我们没有对指定的库进行检测\u003c/li\u003e\n\u003cli\u003e我们正在检测该库，但是你错误地配置了设置。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果缺乏检测能力，请提交\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth/issues\"\u003e问题\u003c/a\u003e，要求增加这种检测。\u003c/p\u003e\n\u003cp\u003e在配置错误的情况下，请确保你用来通信的客户端是一个Spring Bean。如果你通过 \u003ccode\u003enew\u003c/code\u003e 操作符手动创建客户端，那么仪表功能将不起作用。\u003c/p\u003e\n\u003cp\u003e工具化工作的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.context.annotation.Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.web.client.RestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"nf\"\u003emyRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Service\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eMyService\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erestTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003emakeACall\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetForObject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e仪表盘不起作用的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Service\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003emakeACall\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// This will not work because RestTemplate is not a bean\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetForObject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"56-如何在http服务器响应中添加头信息\"\u003e5.6. 如何在HTTP服务器响应中添加头信息？\u003c/h3\u003e\n\u003cp\u003e注册一个\u003ccode\u003eHttpResponseParser\u003c/code\u003e类型的bean，其名称为\u003ccode\u003eHttpServerResponseParser.NAME\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.cloud.sleuth.http.HttpResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.cloud.sleuth.instrument.web.HttpServerResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.context.annotation.Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.context.annotation.Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServerResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpResponseParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;MyCustom\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Header\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e你的Span需要被取样，以便解析器工作。这意味着你需要能够将Span导出到例如Zipkin。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"57-如何自定义http客户端的span\"\u003e5.7. 如何自定义HTTP客户端的Span？\u003c/h3\u003e\n\u003cp\u003e注册一个\u003ccode\u003eHttpRequestParser\u003c/code\u003e类型的Bean，其名称为\u003ccode\u003eHttpClientRequestParser.NAME\u003c/code\u003e，以便为请求方添加定制。注册一个\u003ccode\u003eHttpResponseParser\u003c/code\u003e类型的Bean，其名称为\u003ccode\u003eHttpClientRequestParser.NAME\u003c/code\u003e，以便为响应端添加定制功能。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eClientParserConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// example for Feign\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpClientRequestParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpRequestParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpClientRequestParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ClientRequest\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eRequest\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ClientRequestFeign\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehttpMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// example for Feign\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpClientResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpResponseParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpClientResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ClientResponse\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eResponse\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ClientResponseFeign\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e()));\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"58-如何自定义http服务器的span\"\u003e5.8. 如何自定义HTTP服务器的Span？\u003c/h3\u003e\n\u003cp\u003e注册一个\u003ccode\u003eHttpRequestParser\u003c/code\u003e类型的Bean，其名称为\u003ccode\u003eHttpServerRequestParser.NAME\u003c/code\u003e，以便为请求方添加定制。注册一个\u003ccode\u003eHttpResponseParser\u003c/code\u003e类型的Bean，其名称为\u003ccode\u003eHttpServerResponseParser.NAME\u003c/code\u003e，以便为响应端添加定制功能。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eServerParserConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServerRequestParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpRequestParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpRequestParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ServerRequest\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServletRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eHttpServletRequest\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpServletRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ServerRequestServlet\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServerResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpResponseParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ServerResponse\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ServerResponseServlet\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetStatus\u003c/span\u003e\u003cspan class=\"o\"\u003e()));\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e你的Span需要被取样，以便解析器工作。这意味着你需要能够将跨度导出到例如Zipkin。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"59-如何在日志中看到应用程序的名称\"\u003e5.9. 如何在日志中看到应用程序的名称？\u003c/h3\u003e\n\u003cp\u003e假设你没有改变默认的日志格式，在\u003ccode\u003ebootstrap.yml\u003c/code\u003e中设置\u003ccode\u003espring.application.name\u003c/code\u003e属性，而不是在\u003ccode\u003eapplication.yml\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e有了新的Spring Cloud配置Bootstrap，这应该不再需要了，因为不再有Bootstrap Context。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"510-how-to-change-the-context-propagation-mechanism\"\u003e5.10. How to Change The Context Propagation Mechanism?\u003c/h3\u003e\n\u003cp\u003e要使用提供的默认值，你可以设置\u003ccode\u003espring.sleuth.propagation.type\u003c/code\u003e属性。该值可以是一个列表，在这种情况下，你将传播更多的跟踪头信息。\u003c/p\u003e\n\u003cp\u003e对于Brave，我们支持\u003ccode\u003eAWS\u003c/code\u003e、\u003ccode\u003eB3\u003c/code\u003e、\u003ccode\u003eW3C\u003c/code\u003e的传播类型。\u003c/p\u003e\n\u003cp\u003e如果你想提供一个自定义的传播机制，将\u003ccode\u003espring.sleuth.propagation.type\u003c/code\u003e属性设置为\u003ccode\u003eCUSTOM\u003c/code\u003e并实现你自己的bean（对于Brave来说是\u003ccode\u003ePropagation.Factory\u003c/code\u003e）。下面你可以找到这些例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomPropagator\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003ePropagation\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003ePropagation\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eArrays\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003easList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;myCustomTraceId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomSpanId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eInjector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003einjector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSetter\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esetter\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003esetter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomTraceId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etraceIdString\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n            \u003cspan class=\"n\"\u003esetter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomSpanId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espanIdString\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eExtractor\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eextractor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eGetter\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003egetter\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceContextOrSamplingFlags\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etraceId\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHexCodec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elowerHexToUnsignedLong\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomTraceId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espanId\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHexCodec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elowerHexToUnsignedLong\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomSpanId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eK\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ePropagation\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eK\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eKeyFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eK\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ekeyFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eStringPropagationAdapter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekeyFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"511-如何实现我自己的追踪器\"\u003e5.11. 如何实现我自己的追踪器？\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth API包含所有需要由追踪器实现的必要接口。该项目带有OpenZipkin Brave的实现。你可以通过查看\u003ccode\u003eorg.springframework.cloud.sleuth.brave.bridge\u003c/code\u003e模块来检查这两个追踪器是如何与Sleuth的API连接的。\u003c/p\u003e\n\u003ch2 id=\"6-spring-cloud-sleuth的定制\"\u003e6. Spring Cloud Sleuth的定制\u003c/h2\u003e\n\u003cp\u003e在本节中，我们将介绍如何定制Spring Cloud Sleuth的各个部分。\u003c/p\u003e\n\u003ch3 id=\"61-异步通信\"\u003e6.1. 异步通信\u003c/h3\u003e\n\u003cp\u003e在本节中，我们将介绍如何用Spring Cloud Sleuth定制异步通信。\u003c/p\u003e\n\u003ch4 id=\"611-async注解的方法\"\u003e6.1.1. @Async注解的方法\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e在Spring Cloud Sleuth中，我们对异步相关的组件进行检测，以便在线程之间传递跟踪信息。你可以通过将\u003ccode\u003espring.sleuth.async.enabled\u003c/code\u003e的值设置为\u003ccode\u003efalse\u003c/code\u003e来禁用这种行为。\u003c/p\u003e\n\u003cp\u003e如果你用\u003ccode\u003e@Async\u003c/code\u003e来注释你的方法，我们会自动修改现有的Span，如下所示。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果方法被注解为\u003ccode\u003e@SpanName\u003c/code\u003e，注解的值就是Span的名字。\u003c/li\u003e\n\u003cli\u003e如果该方法没有用\u003ccode\u003e@SpanName\u003c/code\u003e注释，那么Span的名字就是被注释的方法的名字。\u003c/li\u003e\n\u003cli\u003eSpan被标记为该方法的类名和方法名。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e由于我们正在修改现有的span，如果你想保持它的原始名称（例如通过接收HTTP请求创建的span），你应该用\u003ccode\u003e@Async\u003c/code\u003e注解的方法包裹你的\u003ccode\u003e@NewSpan\u003c/code\u003e注解或者手动创建一个新的span。\u003c/p\u003e\n\u003ch4 id=\"612-scheduled-注释的方法\"\u003e6.1.2. @Scheduled 注释的方法\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e在Spring Cloud Sleuth中，我们对预定方法的执行进行了检测，这样追踪信息就会在线程之间传递。你可以通过将\u003ccode\u003espring.sleuth.schedulated.enabled\u003c/code\u003e的值设置为\u003ccode\u003efalse\u003c/code\u003e来禁用这种行为。\u003c/p\u003e\n\u003cp\u003e如果你用\u003ccode\u003e@Scheduled\u003c/code\u003e来注释你的方法，我们会自动创建一个新的跨度，具有以下特征。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003espan的名字是被注释的方法的名字。\u003c/li\u003e\n\u003cli\u003espan被标记为该方法的类名和方法名。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果你想跳过对某些\u003ccode\u003e@Scheduled\u003c/code\u003e注释类的span创建，你可以将\u003ccode\u003espring.sleuth.schedulated.skipPattern\u003c/code\u003e设置为正则表达式，与\u003ccode\u003e@Scheduled\u003c/code\u003e注释类的完全合格名称相匹配。\u003c/p\u003e\n\u003ch4 id=\"613-executor-executorservice-和-scheduledexecutorservice\"\u003e6.1.3. Executor, ExecutorService, 和 ScheduledExecutorService\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们提供\u003ccode\u003eLazyTraceExecutor\u003c/code\u003e，\u003ccode\u003eTraceableExecutorService\u003c/code\u003e，和\u003ccode\u003eTraceableScheduledExecutorService\u003c/code\u003e。这些实现在每次提交、调用或安排新任务时都会创建跨度。\u003c/p\u003e\n\u003cp\u003e下面的例子显示了在使用\u003ccode\u003eCompletableFuture\u003c/code\u003e时如何用\u003ccode\u003eTraceableExecutorService\u003c/code\u003e传递跟踪信息。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eCompletableFuture\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eLong\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecompletableFuture\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCompletableFuture\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esupplyAsync\u003c/span\u003e\u003cspan class=\"o\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// perform some logic\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003e1_000_000L\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e},\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceableExecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// \u0026#39;calculateTax\u0026#39; explicitly names the span - this param is optional\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eSleuth不能与\u003ccode\u003eparallelStream()\u003c/code\u003e一起工作。如果你想让追踪信息通过流传播，你必须使用\u003ccode\u003esupplyAsync(..)\u003c/code\u003e的方法，如前面所示。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果有一些实现了\u003ccode\u003eExecutor\u003c/code\u003e接口的Bean被你排除在span创建之外，你可以使用\u003ccode\u003espring.sleuth.async.ignored-beans\u003c/code\u003e属性，你可以提供一个Bean名称的列表。\u003c/p\u003e\n\u003cp\u003e你可以通过将\u003ccode\u003espring.sleuth.async.enabled\u003c/code\u003e的值设置为\u003ccode\u003efalse\u003c/code\u003e来禁用这种行为。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e自定义Executors\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e有时，你需要设置一个自定义的 \u003ccode\u003eAsyncExecutor\u003c/code\u003e 实例。下面的例子展示了如何设置这样一个自定义的\u003ccode\u003eExecutor\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableAutoConfiguration\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableAsync\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// add the infrastructure role to ensure that the bean gets auto-proxied\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Role\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBeanDefinition\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eROLE_INFRASTRUCTURE\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomExecutorConfig\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncConfigurerSupport\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBeanFactory\u003c/span\u003e \u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eExecutor\u003c/span\u003e \u003cspan class=\"nf\"\u003egetAsyncExecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eThreadPoolTaskExecutor\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eThreadPoolTaskExecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// CUSTOMIZE HERE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetCorePoolSize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetMaxPoolSize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetQueueCapacity\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetThreadNamePrefix\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;MyExecutor-\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// DON\u0026#39;T FORGET TO INITIALIZE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einitialize\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eLazyTraceExecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e为了确保你的配置得到后处理，记得在你的\u003ccode\u003e@Configuration\u003c/code\u003e类上添加\u003ccode\u003e@Role(BeanDefinition.ROLE_INFRASTRUCTURE)\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"62-http客户端集成\"\u003e6.2. HTTP客户端集成\u003c/h3\u003e\n\u003cp\u003e这一部分的功能可以通过设置\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e属性值为\u003ccode\u003efalse\u003c/code\u003e来禁用。\u003c/p\u003e\n\u003ch4 id=\"621-同步-rest-template\"\u003e6.2.1. 同步 Rest Template\u003c/h4\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们注入一个\u003ccode\u003eRestTemplate\u003c/code\u003e拦截器，以确保所有的追踪信息被传递给请求。每次调用时，都会创建一个新的Span。它在收到响应时被关闭。为了阻止同步的\u003ccode\u003eRestTemplate\u003c/code\u003e功能，将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你必须把\u003ccode\u003eRestTemplate\u003c/code\u003e注册为一个Bean，这样拦截器才会被注入。如果你用 \u003ccode\u003enew\u003c/code\u003e 关键字创建了一个\u003ccode\u003eRestTemplate\u003c/code\u003e实例，仪表就不会起作用。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"622-异步-rest-template\"\u003e6.2.2. 异步 Rest Template\u003c/h4\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e从Sleuth \u003ccode\u003e2.0.0\u003c/code\u003e开始，我们不再注册\u003ccode\u003eAsyncRestTemplate\u003c/code\u003e类型的bean。这取决于你是否能创建这样一个Bean。然后我们对它进行检测。\u003c/p\u003e\n\u003cp\u003e要阻止 \u003ccode\u003eAsyncRestTemplate\u003c/code\u003e 功能，将\u003ccode\u003espring.sleuth.web.async.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。要禁止创建默认的\u003ccode\u003eTraceAsyncClientHttpRequestFactoryWrapper\u003c/code\u003e，请将\u003ccode\u003espring.sleuth.web.async.client.factory.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。如果你根本不想创建\u003ccode\u003eAsyncRestClient\u003c/code\u003e，请将\u003ccode\u003espring.sleuth.web.async.client.template.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMultiple Asynchronous Rest Templates\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e有时你需要使用异步Rest模板的多个实现。在下面的片段中，你可以看到一个例子，说明如何设置这样一个自定义的\u003ccode\u003eAsyncRestTemplate\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;customAsyncRestTemplate\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncRestTemplate\u003c/span\u003e \u003cspan class=\"nf\"\u003etraceAsyncRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003easyncClientFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eclientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eClientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"nf\"\u003eclientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eClientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"n\"\u003eclientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomClientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// CUSTOMIZE HERE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eclientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncClientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"nf\"\u003easyncClientFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eAsyncClientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomAsyncClientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// CUSTOMIZE HERE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eWebClient\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们注入了一个\u003ccode\u003eExchangeFilterFunction\u003c/code\u003e实现，它创建了一个跨度，并通过成功和错误的回调，负责关闭客户端的跨度。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你必须把\u003ccode\u003eWebClient\u003c/code\u003e注册为一个Bean，这样才能应用追踪工具。如果你用 \u003ccode\u003enew\u003c/code\u003e 关键字创建一个\u003ccode\u003eWebClient\u003c/code\u003e实例，追踪工具就不会工作。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTraverson\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e如果你使用\u003ca href=\"https://docs.spring.io/spring-hateoas/docs/current/reference/html/#client.traverson\"\u003eTraverson\u003c/a\u003e库，你可以把\u003ccode\u003eRestTemplate\u003c/code\u003e作为一个bean注入你的Traverson对象。由于\u003ccode\u003eRestTemplate\u003c/code\u003e已经被拦截了，你可以在你的客户端获得对追踪的完全支持。下面的伪代码显示了如何做到这一点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eTraverson\u003c/span\u003e \u003cspan class=\"n\"\u003etraverson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraverson\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eURI\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://some/address\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eMediaType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eAPPLICATION_JSON\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMediaType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eAPPLICATION_JSON_UTF8\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003esetRestOperations\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// use Traverson\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eApache HttpClientBuilder 和 HttpAsyncClientBuilder\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对\u003ccode\u003eHttpClientBuilder\u003c/code\u003e和\u003ccode\u003eHttpAsyncClientBuilder\u003c/code\u003e进行检测，以便追踪上下文被注入到发送的请求中。\u003c/p\u003e\n\u003cp\u003e要阻止这些功能，请将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNetty HttpClient\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们使用Netty的\u003ccode\u003eHttpClient\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你必须把\u003ccode\u003eHttpClient\u003c/code\u003e注册为一个Bean，这样才会有仪器分析。如果你用 \u003ccode\u003enew\u003c/code\u003e 关键字创建一个\u003ccode\u003eHttpClient\u003c/code\u003e实例，仪器分析就不会发生。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUserInfoRestTemplateCustomizer\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们使用Spring Security的\u003ccode\u003eUserInfoRestTemplateCustomizer\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"63-http服务器集成\"\u003e6.3. HTTP服务器集成\u003c/h3\u003e\n\u003cp\u003e这一部分的功能可以通过设置\u003ccode\u003espring.sleuth.web.enabled\u003c/code\u003e属性的值等于\u003ccode\u003efalse\u003c/code\u003e来禁用。\u003c/p\u003e\n\u003ch4 id=\"631-http-filter\"\u003e6.3.1. HTTP Filter\u003c/h4\u003e\n\u003cp\u003e这个功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e通过\u003ccode\u003eTracingFilter\u003c/code\u003e，所有被采样的传入请求都会导致创建一个Span。你可以通过设置\u003ccode\u003espring.sleuth.web.skipPattern\u003c/code\u003e属性来配置你想跳过的URI。如果你在classpath上有\u003ccode\u003eManagementServerProperties\u003c/code\u003e，它的\u003ccode\u003econtextPath\u003c/code\u003e值会被附加到所提供的跳过模式上。如果你想重复使用Sleuth的默认跳过模式，只需添加你自己的模式，通过使用\u003ccode\u003espring.sleuth.web.extraSkipPattern\u003c/code\u003e传递这些模式。\u003c/p\u003e\n\u003cp\u003e默认情况下，所有的spring boot执行器端点都被自动添加到跳过模式中。如果你想禁用这种行为，请将\u003ccode\u003espring.sleuth.web.ignore-auto-configured-skip-patterns\u003c/code\u003e设为\u003ccode\u003etrue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要改变跟踪过滤器的注册顺序，请设置\u003ccode\u003espring.sleuth.web.filter-order\u003c/code\u003e属性。\u003c/p\u003e\n\u003cp\u003e要禁用记录未捕获异常的过滤器，可以禁用\u003ccode\u003espring.sleuth.web.exception-throwing-filter-enabled\u003c/code\u003e属性。\u003c/p\u003e\n\u003ch4 id=\"632-handlerinterceptor\"\u003e6.3.2. HandlerInterceptor\u003c/h4\u003e\n\u003cp\u003e这个功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e由于我们希望span的名称是精确的，我们使用一个\u003ccode\u003eTraceHandlerInterceptor\u003c/code\u003e，它或者包裹一个现有的\u003ccode\u003eHandlerInterceptor\u003c/code\u003e，或者直接添加到现有的\u003ccode\u003eHandlerInterceptors\u003c/code\u003e列表中。\u003ccode\u003eTraceHandlerInterceptor\u003c/code\u003e为给定的\u003ccode\u003eHttpServletRequest\u003c/code\u003e添加一个特殊的请求属性。如果\u003ccode\u003eTracingFilter\u003c/code\u003e没有看到这个属性，它就会创建一个 \u0026ldquo;fallback\u0026rdquo; span，这是一个在服务器端创建的额外span，以便在UI中正确显示跟踪。如果发生这种情况，可能是缺少仪器。在这种情况下，请在Spring Cloud Sleuth中提交一个问题。\u003c/p\u003e\n\u003ch4 id=\"633-async-servlet-support\"\u003e6.3.3. Async Servlet support\u003c/h4\u003e\n\u003cp\u003e这个功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e如果你的控制器返回一个\u003ccode\u003eCallable\u003c/code\u003e或\u003ccode\u003eWebAsyncTask\u003c/code\u003e，Spring Cloud Sleuth会继续现有的跨度，而不是创建一个新的。\u003c/p\u003e\n\u003ch4 id=\"634-webflux-support\"\u003e6.3.4. WebFlux support\u003c/h4\u003e\n\u003cp\u003e这个功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e通过\u003ccode\u003eTraceWebFilter\u003c/code\u003e，所有被采样的传入请求都会产生一个Span。这个Span的名字是\u003ccode\u003ehttp:\u003c/code\u003e + 请求被发送到的路径。例如，如果请求被发送到\u003ccode\u003e/this/that\u003c/code\u003e，其名称就是\u003ccode\u003ehttp:/this/that\u003c/code\u003e。你可以通过使用\u003ccode\u003espring.sleuth.web.skipPattern\u003c/code\u003e属性来配置你想跳过的URI。如果你在classpath上有\u003ccode\u003eManagementServerProperties\u003c/code\u003e，它的\u003ccode\u003econtextPath\u003c/code\u003e值会被附加到所提供的跳过模式上。如果你想重复使用Sleuth的默认跳过模式，并附加你自己的模式，可以通过使用\u003ccode\u003espring.sleuth.web.extraSkipPattern\u003c/code\u003e来传递这些模式。\u003c/p\u003e\n\u003cp\u003e为了在性能和上下文传播方面达到最佳效果，我们建议你将\u003ccode\u003espring.sleuth.reactor.instrumation-type\u003c/code\u003e切换为\u003ccode\u003eMANUAL\u003c/code\u003e。为了在span的范围内执行代码，你可以调用\u003ccode\u003eWebFluxSleuthOperators.withSpanInScope\u003c/code\u003e。例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/simpleManual\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003esimpleManual\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edoOnEach\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWebFluxSleuthOperators\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpanInScope\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSignalType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eON_NEXT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esignal\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello from simple [{}]\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esignal\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e())));\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要改变追踪过滤器的注册顺序，请设置\u003ccode\u003espring.sleuth.web.filter-order\u003c/code\u003e属性。\u003c/p\u003e\n\u003ch3 id=\"64-messaging\"\u003e6.4. Messaging\u003c/h3\u003e\n\u003cp\u003e这一部分的功能可以通过设置\u003ccode\u003espring.sleuth.messaging.enabled\u003c/code\u003e属性值为\u003ccode\u003efalse\u003c/code\u003e来禁用。\u003c/p\u003e\n\u003ch4 id=\"641-spring-集成\"\u003e6.4.1. Spring 集成\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth与\u003ca href=\"https://projects.spring.io/spring-integration/\"\u003eSpring Integration\u003c/a\u003e集成。它为发布和订阅事件创建跨度。要禁用Spring集成工具，请将\u003ccode\u003espring.sleuth.integration.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你可以提供\u003ccode\u003espring.sleuth.integration.pattern\u003c/code\u003e模式来明确提供你想包括在追踪中的通道的名字。默认情况下，除了\u003ccode\u003ehystrixStreamOutput\u003c/code\u003e通道外，所有通道都被包括在内。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当使用\u003ccode\u003eExecutor\u003c/code\u003e构建Spring Integration\u003ccode\u003eIntegrationFlow\u003c/code\u003e时，你必须使用\u003ccode\u003eExecutor\u003c/code\u003e的未跟踪版本。用\u003ccode\u003eTraceableExecutorService\u003c/code\u003e装饰Spring Integration Executor通道会导致Span被不适当地关闭。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你想自定义从消息头读取和写入追踪上下文的方式，你只需注册一些类型的Bean。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ePropagator.Setter\u0026lt;MessageHeaderAccessor\u0026gt;\u003c/code\u003e - 用于向消息写入头文件\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePropagator.Getter\u0026lt;MessageHeaderAccessor\u0026gt;\u003c/code\u003e - 用于从消息中读取标题。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eSpring Integration Customization\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCustomizing messaging spans\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e为了改变默认的Span名称和标签，只需注册一个\u003ccode\u003eMessageSpanCustomizer\u003c/code\u003e类型的bean。你也可以覆盖现有的\u003ccode\u003eDefaultMessageSpanCustomizer\u003c/code\u003e来扩展现有行为。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyMessageSpanCustomizer\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eDefaultMessageSpanCustomizer\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomizeHandle\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003espanCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n              \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageChannel\u003c/span\u003e \u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustomizeHandle\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003espanCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;changedHandle\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;handleKey\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;handleValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;channelName\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echannelName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n      \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomizeSend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n              \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageChannel\u003c/span\u003e \u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustomizeSend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;changedSend\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;sendKey\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;sendValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;channelName\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echannelName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"642-spring-cloud-function和spring-cloud-stream\"\u003e6.4.2. Spring Cloud Function和Spring Cloud Stream\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth可以检测Spring Cloud Function。实现的方法是提供一个以\u003ccode\u003eMessage\u003c/code\u003e 为参数的\u003ccode\u003eFunction\u003c/code\u003e、\u003ccode\u003eConsumer\u003c/code\u003e 或 \u003ccode\u003eSupplier\u003c/code\u003e，例如 \u003ccode\u003eFunction\u0026lt;Message\u0026lt;String\u0026gt;, Message\u0026lt;Integer\u0026gt;\u0026gt;\u003c/code\u003e。如果类型不是 \u003ccode\u003eMessage\u003c/code\u003e，那么将不会进行仪器分析。在处理基于Reactor的流时，开箱即用的仪器不会发生，例如\u003ccode\u003eFunction\u0026lt;Flux\u0026lt;Message\u0026lt;String\u0026gt;\u0026gt;\u003c/code\u003e, \u003ccode\u003eFlux\u0026lt;Message\u0026lt;Integer\u0026gt;\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e由于Spring Cloud Stream重用了Spring Cloud Function，你将获得开箱即用的仪器。\u003c/p\u003e\n\u003cp\u003e你可以通过将\u003ccode\u003espring.sleuth.function.enabled\u003c/code\u003e的值设置为\u003ccode\u003efalse\u003c/code\u003e来禁用这种行为。\u003c/p\u003e\n\u003cp\u003e为了与 reactive Stream函数一起工作，你可以利用\u003ccode\u003eMessagingSleuthOperators\u003c/code\u003e实用类，它允许你操作输入和输出的消息，以便继续跟踪上下文，并在跟踪上下文中执行自定义代码。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSimpleReactiveManualFunction\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;,\u003c/span\u003e \u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eLogger\u003c/span\u003e \u003cspan class=\"n\"\u003elog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLoggerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetLogger\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSimpleReactiveFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eBeanFactory\u003c/span\u003e \u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eSimpleReactiveManualFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBeanFactory\u003c/span\u003e \u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMessagingSleuthOperators\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003easFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eandThen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMessagingSleuthOperators\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpanInScope\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estringMessage\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello from simple manual [{}]\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estringMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estringMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e})).\u003c/span\u003e\u003cspan class=\"na\"\u003eandThen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMessagingSleuthOperators\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eafterMessageHandled\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eandThen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreateMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetHeaders\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eandThen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMessagingSleuthOperators\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehandleOutputMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"643-spring-rabbitmq\"\u003e6.4.3. Spring RabbitMq\u003c/h4\u003e\n\u003cp\u003e他的功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对\u003ccode\u003eRabbitTemplate\u003c/code\u003e进行检测，这样追踪头就会被注入消息中。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.messaging.rabbit.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"644-spring-kafka\"\u003e6.4.4. Spring Kafka\u003c/h4\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对Spring Kafka的 \u003ccode\u003eProducerFactory\u003c/code\u003e 和 \u003ccode\u003eConsumerFactory\u003c/code\u003e 进行检测，这样追踪头就会被注入创建的Spring Kafka的 \u003ccode\u003eProducer\u003c/code\u003e 和 \u003ccode\u003eConsumer\u003c/code\u003e 中。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.messaging.kafka.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"645-spring-kafka-streams\"\u003e6.4.5. Spring Kafka Streams\u003c/h4\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对\u003ccode\u003eKafkaStreams``KafkaClientSupplier\u003c/code\u003e进行检测，这样追踪头就会被注入到\u003ccode\u003eProducer\u003c/code\u003e和\u003ccode\u003eConsumer\u003c/code\u003es。\u003ccode\u003eKafkaStreamsTracing\u003c/code\u003ebean允许通过额外的\u003ccode\u003eTransformerSupplier\u003c/code\u003e和\u003ccode\u003eProcessorSupplier\u003c/code\u003e方法进行进一步追踪。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.messaging.kafka.streams.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"646-spring-jms\"\u003e6.4.6. Spring JMS\u003c/h4\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对\u003ccode\u003eJmsTemplate\u003c/code\u003e进行分析，以便将追踪的头信息注入到消息中。我们还支持消费者方面的\u003ccode\u003e@JmsListener\u003c/code\u003e注解方法。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.messaging.jms.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e我们不支持JMS的baggage传播\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"65-openfeign\"\u003e6.5. OpenFeign\u003c/h3\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e默认情况下，Spring Cloud Sleuth通过\u003ccode\u003eTraceFeignClientAutoConfiguration\u003c/code\u003e提供与Feign的集成。你可以通过设置\u003ccode\u003espring.sleuth.feign.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来完全禁用它。如果你这样做，就不会有任何与Feign相关的检测发生。\u003c/p\u003e\n\u003cp\u003e部分Feign工具化是通过\u003ccode\u003eFeignBeanPostProcessor\u003c/code\u003e完成的。你可以通过设置\u003ccode\u003espring.sleuth.feign.processor.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来禁用它。如果你把它设置为 \u003ccode\u003efalse\u003c/code\u003e，Spring Cloud Sleuth就不会对你的任何自定义Feign组件进行检测。然而，所有默认的检测仍然存在。\u003c/p\u003e\n\u003ch3 id=\"66-opentracing\"\u003e6.6. OpenTracing\u003c/h3\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth与\u003ca href=\"https://opentracing.io/\"\u003eOpenTracing\u003c/a\u003e兼容。如果你在classpath上有OpenTracing，我们会自动注册OpenTracing的\u003ccode\u003eTracer\u003c/code\u003ebean。如果你想禁用它，请将\u003ccode\u003espring.sleuth.opentracing.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"67-quartz\"\u003e6.7. Quartz\u003c/h3\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们通过向quartz 添加Job/Trigge来检测Quartz Scheduler。\u003c/p\u003e\n\u003cp\u003e要关闭该功能，请将\u003ccode\u003espring.sleuth.quartz.enabled\u003c/code\u003e属性设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"68-reactor\"\u003e6.8. Reactor\u003c/h3\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们有以下基于reactor的应用程序的仪器化模式，可以通过\u003ccode\u003espring.sleuth.reactor.instrumation-type\u003c/code\u003e属性来设置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eDECORATE_QUEUES\u003c/code\u003e - 通过新的Reactor\u003ca href=\"https://github.com/reactor/reactor-core/pull/2566\"\u003e队列包装机制\u003c/a\u003e (Reactor 3.4.3)，我们对Reactor切换线程的方式进行仪表化。这将导致与\u003ccode\u003eON_EACH\u003c/code\u003e的功能相同，对性能影响较小。\u003c/li\u003e\n\u003cli\u003e`DECORATE_ON_EACH'\u0026ndash;将每个Reactor操作者包裹在一个跟踪表示中。在大多数情况下会传递跟踪上下文。这种模式可能会导致性能急剧下降。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDECORATE_ON_LAST\u003c/code\u003e - 在跟踪表示中包装最后一个Reactor操作符。在某些情况下会传递跟踪上下文，因此访问MDC上下文可能不工作。这种模式可能导致中等程度的性能下降。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMANUAL\u003c/code\u003e - 以最不具侵略性的方式包装每个Reactor，不传递跟踪上下文。这取决于用户的操作。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e目前默认的是\u003ccode\u003eON_EACH\u003c/code\u003e，因为向后兼容的原因，但是我们鼓励用户迁移到\u003ccode\u003eMANUAL\u003c/code\u003e工具，从\u003ccode\u003eWebFluxSleuthOperators\u003c/code\u003e和\u003ccode\u003eMessagingSleuthOperators\u003c/code\u003e中获益。性能的提高是巨大的。\u003c/p\u003e\n\u003cp\u003eExample\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/simpleManual\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003esimpleManual\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edoOnEach\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWebFluxSleuthOperators\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpanInScope\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSignalType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eON_NEXT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esignal\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello from simple [{}]\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esignal\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e())));\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"69-redis\"\u003e6.9. Redis\u003c/h3\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们将\u003ccode\u003etracing\u003c/code\u003e属性设置为Lettuce\u003ccode\u003eClientResources\u003c/code\u003e实例，以启用Lettuce中内置的Brave追踪功能。要禁用Redis支持，将\u003ccode\u003espring.sleuth.redis.enabled\u003c/code\u003e属性设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"610-runnable-and-callable\"\u003e6.10. Runnable and Callable\u003c/h3\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e如果你把你的逻辑包在\u003ccode\u003eRunnable\u003c/code\u003e或\u003ccode\u003eCallable\u003c/code\u003e中，你可以把这些类包在它们的Sleuth代表中，如下面\u003ccode\u003eRunnable\u003c/code\u003e的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"n\"\u003erunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// do some work\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;spanNameFromToStringMethod\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// Manual `TraceRunnable` creation with explicit \u0026#34;calculateTax\u0026#34; Span name\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"n\"\u003etraceRunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espanNamer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子显示了如何为\u003ccode\u003eCallable\u003c/code\u003e做到这一点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecallable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ecall\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esomeLogic\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;spanNameFromToStringMethod\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// Manual `TraceCallable` creation with explicit \u0026#34;calculateTax\u0026#34; Span name\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etraceCallable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;(\u003c/span\u003e\u003cspan class=\"n\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espanNamer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecallable\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这样，你就能确保每次执行时都能创建和关闭一个新的Span。\u003c/p\u003e\n\u003ch3 id=\"611-rpc\"\u003e6.11. RPC\u003c/h3\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003eSleuth自动配置了\u003ccode\u003eRpcTracing\u003c/code\u003ebean，作为RPC工具的基础，如gRPC或Dubbo。\u003c/p\u003e\n\u003cp\u003e如果需要定制客户端/服务器的RPC跟踪采样，只需注册一个\u003ccode\u003ebrave.sampler.SamplerFunction\u0026lt;RpcRequest\u0026gt;\u003c/code\u003e类型的bean，并将该bean命名为\u003ccode\u003esleuthRpcClientSampler\u003c/code\u003e用于客户端采样，\u003ccode\u003esleuthRpcServerSampler\u003c/code\u003e用于服务器采样。\u003c/p\u003e\n\u003cp\u003e为了方便起见，\u003ccode\u003e@RpcClientSampler\u003c/code\u003e和\u003ccode\u003e@RpcServerSampler\u003c/code\u003e注解可用于注入适当的Bean，或通过静态字符串\u003ccode\u003eNAME\u003c/code\u003e字段引用Bean名称。\u003c/p\u003e\n\u003cp\u003e例如。这里有一个采样器，每秒追踪100个 \u003ccode\u003eGetUserToken\u003c/code\u003e 服务器请求。这不会启动对健康检查服务请求的新追踪。其他请求将使用全局采样配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRpcServerSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eSamplerFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRpcRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003emyRpcSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eMatcher\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRpcRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003euserAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserviceEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;users.UserService\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003emethodEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;GetUserToken\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eRpcRuleSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eputRule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserviceEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;grpc.health.v1.Health\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNEVER_SAMPLE\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n              \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eputRule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euserAuth\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRateLimitingSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更多内容请见\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/rpc#sampling-policy\"\u003egithub.com/openzipkin/brave/tree/master/instrumentation/rpc#sampling-policy\u003c/a\u003e\u003c/p\u003e\n\u003ch4 id=\"6111-dubbo-rpc-support\"\u003e6.11.1. Dubbo RPC support\u003c/h4\u003e\n\u003cp\u003e通过与Brave的集成，Spring Cloud Sleuth支持\u003ca href=\"https://dubbo.apache.org/\"\u003eDubbo\u003c/a\u003e。只需添加\u003ccode\u003ebrave-instrumentation-dubbo\u003c/code\u003e的依赖关系即可。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eio.zipkin.brave\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003ebrave-instrumentation-dubbo\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你还需要设置一个\u003ccode\u003edubbo.properties\u003c/code\u003e文件，内容如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003edubbo.provider.filter=tracing\ndubbo.consumer.filter=tracing\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以阅读更多关于Brave - Dubbo整合的信息\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/dubbo-rpc\"\u003e这里\u003c/a\u003e。可以找到一个Spring Cloud Sleuth和Dubbo的例子\u003ca href=\"https://github.com/openzipkin/sleuth-webmvc-example/compare/add-dubbo-tracing\"\u003e这里\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"6112-grpc\"\u003e6.11.2. gRPC\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Sleuth通过Brave追踪器为\u003ca href=\"https://grpc.io/\"\u003egRPC\u003c/a\u003e提供了工具。你可以通过设置\u003ccode\u003espring.sleuth.grpc.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来完全禁用它。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVariant 1\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eDependencies\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003egRPC集成依赖于两个外部库来检测客户端和服务器，这两个库都必须在类的路径上，以实现检测。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e        \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eio.github.lognet\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003egrpc-spring-boot-starter\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eio.zipkin.brave\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003ebrave-instrumentation-grpc\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eServer Instrumentation\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth利用grpc-spring-boot-starter将Brave的gRPC服务器拦截器与所有用\u003ccode\u003e@GRpcService\u003c/code\u003e注解的服务进行注册。\u003c/p\u003e\n\u003cp\u003eClient Instrumentation\u003c/p\u003e\n\u003cp\u003egRPC客户端利用\u003ccode\u003eManagedChannelBuilder\u003c/code\u003e来构建\u003ccode\u003eManagedChannel\u003c/code\u003e，用于与gRPC服务器通信。本机的 \u003ccode\u003eManagedChannelBuilder\u003c/code\u003e 提供了静态方法作为构建 \u003ccode\u003eManagedChannel\u003c/code\u003e 实例的入口，然而，这种机制是在Spring应用环境的影响之外。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Sleuth提供了一个 \u003ccode\u003eSpringAwareManagedChannelBuilder\u003c/code\u003e，可以通过Spring application context进行定制，并由gRPC客户端进行注入。\u003cstrong\u003e在创建 \u003ccode\u003eManagedChannel\u003c/code\u003e实例时，必须使用这个构建器\u003c/strong\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSleuth创建了一个\u003ccode\u003eTracingManagedChannelBuilderCustomizer\u003c/code\u003e，将Brave的客户端拦截器注入到\u003ccode\u003eSpringAwareManagedChannelBuilder\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVariant 2\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/yidongnan/grpc-spring-boot-starter\"\u003eGrpc Spring Boot Starter\u003c/a\u003e自动检测Spring Cloud Sleuth和Brave的gRPC仪器的存在，并注册了必要的客户端和/或服务器工具。\u003c/p\u003e\n\u003ch3 id=\"612-rxjava\"\u003e6.12. RxJava\u003c/h3\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们注册了一个自定义的\u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/Plugins#rxjavaschedulershook\"\u003e\u003ccode\u003eRxJavaSchedulersHook\u003c/code\u003e\u003c/a\u003e，将所有的\u003ccode\u003eAction0\u003c/code\u003e实例包裹在它们的Sleuth代表中，这被称为\u003ccode\u003eTraceAction\u003c/code\u003e。这个钩子要么开始，要么继续，取决于在Action被安排之前跟踪是否已经在进行。要禁用自定义的\u003ccode\u003eRxJavaSchedulersHook\u003c/code\u003e，将\u003ccode\u003espring.sleuth.rxjava.schedulers.hook.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你可以为不希望创建跨度的线程名称定义一个正则表达式列表。要做到这一点，请在\u003ccode\u003espring.sleuth.rxjava.schedulers.ignoredthreads\u003c/code\u003e属性中提供一个逗号分隔的正则表达式列表。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e对反应式编程和Sleuth的建议方法是使用Reactor支持。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"613-spring-cloud-circuitbreaker\"\u003e6.13. Spring Cloud CircuitBreaker\u003c/h3\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e如果你在classpath上有Spring Cloud CircuitBreaker，我们将把传递的命令\u003ccode\u003eSupplier\u003c/code\u003e和fallback的\u003ccode\u003eFunction\u003c/code\u003e包裹在它的跟踪表示中。为了禁用这个工具，请将\u003ccode\u003espring.sleuth.circuitbreaker.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"7-配置属性\"\u003e7. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有Spring Cloud Netflix相关配置属性的列表，请检查\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#common-application-properties\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      },
    {
        id: 11,
        href: "https://www.springcloud.io/docs/",
        title: "Docs",
        description: "Docs Doks.",
        content: ""
      },
    {
        id: 12,
        href: "https://www.springcloud.io/docs/springcloud/",
        title: "SpringCloud",
        description: "SpringCloud中文文档",
        content: ""
      },
    ];
  */

  // https://discourse.gohugo.io/t/range-length-or-last-element/3803/2

  index.add(
    {
        id: 0,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-alibaba/",
        title: "Spring Cloud Alibaba",
        description: "Spring Cloud Alibaba为分布式应用开发提供了一个一站式解决方案。它包含了开发分布式应用所需的所有组件，使你能够轻松地使用Spring Cloud开发你的应用。",
        content: "\u003cp\u003eSpring Cloud Alibaba为分布式应用开发提供了一个一站式解决方案。它包含了开发分布式应用所需的所有组件，使你能够轻松地使用Spring Cloud开发你的应用。\u003c/p\u003e\n\u003cp\u003e通过Spring Cloud Alibaba，你只需要添加一些注释和少量的配置，就可以将Spring Cloud应用与阿里巴巴的分布式解决方案连接起来，并利用阿里巴巴的中间件建立一个分布式应用系统。\u003c/p\u003e\n\u003ch2 id=\"官方仓库\"\u003e官方仓库\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/alibaba/spring-cloud-alibaba/wiki\"\u003ehttps://github.com/alibaba/spring-cloud-alibaba/wiki\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e官方各个组件都有十分优秀的中文文档，这里就不翻译了。\u003c/p\u003e\n\u003c/blockquote\u003e\n"
      })
      .add(
      {
        id: 1,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-bus/",
        title: "Spring Cloud Bus",
        description: "Spring Cloud Bus将分布式系统的节点与一个轻量级的消息代理联系起来。然后，这可以用来广播状态变化（如配置变化）或其他管理指令。该项目包括AMQP和Kafka代理的实现。另外，在classpath上找到的任何Spring Cloud Stream绑定器都可以作为传输工具开箱即用。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.2\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月22日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-bus/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-bus/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-bus\"\u003ehttps://github.com/spring-cloud/spring-cloud-bus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Bus将分布式系统的节点与一个轻量级的消息代理联系起来。然后，这可以用来广播状态变化（如配置变化）或其他管理指令。该项目包括AMQP和Kafka代理的实现。另外，在classpath上找到的任何Spring Cloud Stream绑定器都可以作为传输工具开箱即用。\u003c/p\u003e\n\u003ch2 id=\"1-快速开始\"\u003e1. 快速开始\u003c/h2\u003e\n\u003cp\u003e如果Spring Cloud Bus在classpath上检测到自己，它就会通过添加Spring Boot自动配置来工作。要启用总线，请将\u003ccode\u003espring-cloud-starter-bus-amqp\u003c/code\u003e或\u003ccode\u003espring-cloud-starter-bus-kafka\u003c/code\u003e添加到您的依赖性管理中。Spring Cloud会处理剩下的事情。确保代理（RabbitMQ或Kafka）是可用的并已配置。当在本地主机上运行时，你不需要做任何事情。如果你远程运行，请使用Spring Cloud Connectors或Spring Boot约定来定义代理凭证，如下面Rabbit的例子所示。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003erabbitmq\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emybroker.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5672\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e总线目前支持向所有监听的节点或某一特定服务的所有节点发送消息（由Eureka定义）。\u003ccode\u003e/bus/*\u003c/code\u003e执行器命名空间有一些HTTP端点。目前，有两个已经实现。第一个，\u003ccode\u003e/bus/env\u003c/code\u003e，发送键/值对以更新每个节点的Spring环境。第二个，\u003ccode\u003e/bus/refresh\u003c/code\u003e，重新加载每个应用程序的配置，就像它们都被ping到了\u003ccode\u003e/refresh\u003c/code\u003e端点一样。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Bus的启动程序涵盖了Rabbit和Kafka，因为这是最常见的两种实现方式。然而，Spring Cloud Stream是相当灵活的，而且该绑定器与\u003ccode\u003espring-cloud-bus\u003c/code\u003e一起使用。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-actuator-端点\"\u003e2. Actuator 端点\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Bus提供了两个端点，\u003ccode\u003e/actuator/busrefresh\u003c/code\u003e和\u003ccode\u003e/actuator/busenv\u003c/code\u003e，分别对应于Spring Cloud Commons中的单个执行器端点\u003ccode\u003e/actuator/refresh\u003c/code\u003e和\u003ccode\u003e/actuator/env\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"21-refresh-endpoint\"\u003e2.1. Refresh Endpoint\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e/actuator/busrefresh\u003c/code\u003e端点清除\u003ccode\u003eRefreshScope\u003c/code\u003e缓存并重新绑定\u003ccode\u003e@ConfigurationProperties\u003c/code\u003e。更多信息请参见 \u003ca href=\"https://docs.spring.io/spring-cloud-bus/docs/current/reference/html/#refresh-scope\"\u003eRefresh Scope\u003c/a\u003e 文档。\u003c/p\u003e\n\u003cp\u003e为了暴露\u003ccode\u003e/actuator/busrefresh\u003c/code\u003e端点，你需要向你的应用程序添加以下配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003emanagement.endpoints.web.exposure.include=busrefresh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"22--env-endpoint\"\u003e2.2.  Env Endpoint\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e/actuator/busenv\u003c/code\u003e端点用指定的键/值对在多个实例中更新每个实例环境。\u003c/p\u003e\n\u003cp\u003e为了暴露\u003ccode\u003e/actuator/busenv\u003c/code\u003e端点，你需要在你的应用程序中添加以下配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003emanagement.endpoints.web.exposure.include=busenv\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e/actuator/busenv\u003c/code\u003e端点接受\u003ccode\u003ePOST\u003c/code\u003e请求，请求体格式如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;key1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;value1\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-对一个实例进行寻址\"\u003e3. 对一个实例进行寻址\u003c/h2\u003e\n\u003cp\u003e应用程序的每个实例都有一个服务ID，其值可以用\u003ccode\u003espring.cloud.bus.id\u003c/code\u003e来设置，其值预计是一个用冒号分隔的标识符列表，从最不具体到最具体的顺序。默认值从环境中构建，作为\u003ccode\u003espring.application.name\u003c/code\u003e和\u003ccode\u003eserver.port\u003c/code\u003e的组合（或\u003ccode\u003espring.application.index\u003c/code\u003e，如果设置）。ID的默认值是以\u003ccode\u003eapp:index:id\u003c/code\u003e的形式构建的，其中。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eapp\u003c/code\u003e是\u003ccode\u003evcap.application.name\u003c/code\u003e，如果它存在的话，或者是\u003ccode\u003espring.application.name\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eindex\u003c/code\u003e是\u003ccode\u003evcap.application.instance_index\u003c/code\u003e，如果它存在的话，\u003ccode\u003espring.application.index\u003c/code\u003e，\u003ccode\u003elocal.server.port\u003c/code\u003e，\u003ccode\u003eserver.port\u003c/code\u003e或\u003ccode\u003e0\u003c/code\u003e（按顺序排列）。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eid\u003c/code\u003e是\u003ccode\u003evcap.application.instance_id\u003c/code\u003e，如果它存在，或者是一个随机值。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHTTP 端点接受一个 \u0026ldquo;destination\u0026rdquo; 路径参数，如\u003ccode\u003e/busrefresh/customers:9000\u003c/code\u003e，其中\u003ccode\u003e目的地\u003c/code\u003e是一个服务 ID。如果该ID为总线上的一个实例所拥有，它就会处理该消息，而所有其他实例都会忽略它。\u003c/p\u003e\n\u003ch2 id=\"4-对一个服务的所有实例进行寻址\"\u003e4. 对一个服务的所有实例进行寻址\u003c/h2\u003e\n\u003cp\u003e\u0026ldquo;destination\u0026quot;参数在Spring的\u003ccode\u003ePathMatcher\u003c/code\u003e中使用（路径分隔符为冒号 - \u003ccode\u003e:\u003c/code\u003e ），以确定一个实例是否处理该消息。使用前面的例子，\u003ccode\u003e/busenv/customers:**\u003c/code\u003e针对 \u0026ldquo;customers \u0026ldquo;服务的所有实例，而不管服务ID的其他部分。\u003c/p\u003e\n\u003ch2 id=\"5-service-id-必须唯一\"\u003e5. Service ID 必须唯一\u003c/h2\u003e\n\u003cp\u003e总线尝试两次来消除对一个事件的处理\u0026ndash;一次来自原始的\u003ccode\u003eApplicationEvent\u003c/code\u003e，一次来自队列。为此，它检查发送的服务ID和当前的服务ID。如果一个服务的多个实例有相同的ID，事件就不会被处理。在本地机器上运行时，每个服务都在一个不同的端口上，该端口是 ID 的一部分。Cloud Foundry 提供了一个索引来进行区分。为确保 ID 在 Cloud Foundry 之外是唯一的，请将 \u003ccode\u003espring.application.index\u003c/code\u003e 设置为服务的每个实例的唯一内容。\u003c/p\u003e\n\u003ch2 id=\"6-定制消息代理\"\u003e6. 定制消息代理\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Bus使用\u003ca href=\"https://cloud.spring.io/spring-cloud-stream\"\u003eSpring Cloud Stream\u003c/a\u003e来广播消息。因此，为了让消息流动起来，你只需要在classpath中包含你选择的绑定器实现。对于使用AMQP（RabbitMQ）和Kafka（\u003ccode\u003espring-cloud-starter-bus-[amqp|kafka]\u003c/code\u003e）的总线，有一些方便的启动器。一般来说，Spring Cloud Stream依靠Spring Boot的自动配置约定来配置中间件。例如，AMQP代理地址可以通过\u003ccode\u003espring.rabbitmq.*\u003c/code\u003e配置属性来改变。Spring Cloud Bus在\u003ccode\u003espring.cloud.bus.*\u003c/code\u003e中拥有少量的本地配置属性（例如，\u003ccode\u003espring.cloud.bus.destination\u003c/code\u003e是用作外部中间件的主题名称）。通常情况下，默认值就足够了。\u003c/p\u003e\n\u003cp\u003e要了解更多关于如何定制消息代理的设置，请查阅Spring Cloud Stream文档。\u003c/p\u003e\n\u003ch2 id=\"7-追踪总线事件\"\u003e7. 追踪总线事件\u003c/h2\u003e\n\u003cp\u003e总线事件（\u003ccode\u003eRemoteApplicationEvent\u003c/code\u003e的子类）可以通过设置\u003ccode\u003espring.cloud.bus.trace.enabled=true\u003c/code\u003e来追踪。如果你这样做，Spring Boot \u003ccode\u003eTraceRepository\u003c/code\u003e（如果它存在的话）会显示每个事件的发送情况和每个服务实例的所有acks。下面的例子来自\u003ccode\u003e/trace\u003c/code\u003e端点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;timestamp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;2015-11-26T10:24:44.411+0000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;info\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;signal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spring.cloud.bus.ack\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;RefreshRemoteApplicationEvent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;c4d374b7-58ea-4928-a312-31984def293b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;stores:8081\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;*:**\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;timestamp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;2015-11-26T10:24:41.864+0000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;info\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;signal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spring.cloud.bus.sent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;RefreshRemoteApplicationEvent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;c4d374b7-58ea-4928-a312-31984def293b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;customers:9000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;*:**\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;timestamp\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;2015-11-26T10:24:41.862+0000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;info\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;signal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spring.cloud.bus.ack\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;RefreshRemoteApplicationEvent\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;c4d374b7-58ea-4928-a312-31984def293b\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;origin\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;customers:9000\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;destination\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;*:**\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的跟踪显示，一个 \u0026ldquo;RefreshRemoteApplicationEvent\u0026quot;从\u003ccode\u003ecustomers:9000\u003c/code\u003e发出，广播到所有服务，并由\u003ccode\u003ecustomers:9000\u003c/code\u003e和\u003ccode\u003estores:8081\u003c/code\u003e接收（acked）。\u003c/p\u003e\n\u003cp\u003e要自己处理ack信号，你可以为\u003ccode\u003eAckRemoteApplicationEvent\u003c/code\u003e和\u003ccode\u003eSentApplicationEvent\u003c/code\u003e类型添加一个\u003ccode\u003e@EventListener\u003c/code\u003e到你的应用程序（并启用跟踪）。另外，你也可以进入\u003ccode\u003eTraceRepository\u003c/code\u003e，从那里挖掘数据。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e任何总线应用都可以跟踪acks。然而，有时候，在一个中央服务中进行这项工作是很有用的，它可以对数据进行更复杂的查询，或者将其转发给专门的追踪服务。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"8-广播自定义事件\"\u003e8. 广播自定义事件\u003c/h2\u003e\n\u003cp\u003e总线可以携带任何类型的\u003ccode\u003eRemoteApplicationEvent\u003c/code\u003e的事件。默认的传输方式是JSON，反序列化器需要提前知道哪些类型将被使用。要注册一个新的类型，你必须把它放在\u003ccode\u003eorg.springframework.cloud.bus.event\u003c/code\u003e的一个子包中。\u003c/p\u003e\n\u003cp\u003e要自定义事件名称，你可以在你的自定义类上使用\u003ccode\u003e@JsonTypeName\u003c/code\u003e，或者依靠默认策略，即使用类的简单名称。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e生产者和消费者都需要访问该类的定义。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"81-在自定义包中注册事件\"\u003e8.1. 在自定义包中注册事件\u003c/h3\u003e\n\u003cp\u003e如果你不能或不想为你的自定义事件使用\u003ccode\u003eorg.springframework.cloud.bus.event\u003c/code\u003e的子包，你必须通过使用\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e注解指定哪些包来扫描\u003ccode\u003eRemoteApplicationEvent\u003c/code\u003e类型的事件。用\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e指定的包包括子包。\u003c/p\u003e\n\u003cp\u003e例如，考虑下面的自定义事件，称为\u003ccode\u003eMyEvent\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003ecom.acme\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyEvent\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eRemoteApplicationEvent\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过以下方式向deserializer注册该事件:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003ecom.acme\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RemoteApplicationEventScan\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBusConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果没有指定值，则使用\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e的类的包被注册。在这个例子中，\u003ccode\u003ecom.acme\u003c/code\u003e是通过使用\u003ccode\u003eBusConfiguration\u003c/code\u003e的包注册的。\u003c/p\u003e\n\u003cp\u003e你也可以通过使用\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e上的\u003ccode\u003evalue\u003c/code\u003e、\u003ccode\u003ebasePackages\u003c/code\u003e或\u003ccode\u003ebasePackageClasses\u003c/code\u003e属性明确指定要扫描的包，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003ecom.acme\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e//@RemoteApplicationEventScan({\u0026#34;com.acme\u0026#34;, \u0026#34;foo.bar\u0026#34;})\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e//@RemoteApplicationEventScan(basePackages = {\u0026#34;com.acme\u0026#34;, \u0026#34;foo.bar\u0026#34;, \u0026#34;fizz.buzz\u0026#34;})\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@RemoteApplicationEventScan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebasePackageClasses\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBusConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBusConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所有前面的\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e的例子都是等同的，即通过明确指定\u003ccode\u003e@RemoteApplicationEventScan\u003c/code\u003e上的包来注册\u003ccode\u003ecom.acme\u003c/code\u003e包。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你可以指定多个base packages进行扫描\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"9-配置属性\"\u003e9. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有与总线相关的配置属性列表，请查看\u003ca href=\"https://docs.spring.io/spring-cloud-bus/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 2,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-circuit-breaker/",
        title: "Spring Cloud Circuit Breaker",
        description: "Spring Cloud Circuit breaker提供了一个跨越不同断路器实现的抽象。它提供了一个一致的API，可以在你的应用程序中使用，允许你的开发者选择最适合你的应用程序需求的断路器实现。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：2.0.2\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月22日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-circuitbreaker/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-circuitbreaker/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-circuitbreaker\"\u003ehttps://github.com/spring-cloud/spring-cloud-circuitbreaker\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Circuit breaker提供了一个跨越不同断路器实现的抽象。它提供了一个一致的API，可以在你的应用程序中使用，允许你的开发者选择最适合你的应用程序需求的断路器实现。\u003c/p\u003e\n\u003ch2 id=\"1-使用说明\"\u003e1. 使用说明\u003c/h2\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker项目包含Resilience4J和Spring Retry的实现。Spring Cloud CircuitBreaker中实现的API在Spring Cloud Commons中存在。这些API的使用文档位于\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-circuit-breaker\"\u003eSpring Cloud Commons documentation\u003c/a\u003e中。\u003c/p\u003e\n\u003ch3 id=\"11-配置resilience4j断路器\"\u003e1.1. 配置Resilience4J断路器\u003c/h3\u003e\n\u003ch4 id=\"111-starters\"\u003e1.1.1. Starters\u003c/h4\u003e\n\u003cp\u003eResilience4J的实现有两个启动器，一个用于reactive应用，一个用于非reactive应用。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j\u003c/code\u003e - 非reactive应用程序\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j\u003c/code\u003e - reactive应用程序\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"112-自动配置\"\u003e1.1.2. 自动配置\u003c/h4\u003e\n\u003cp\u003e你可以通过设置\u003ccode\u003espring.cloud.circuitbreaker.resilience4j.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来禁用Resilience4J自动配置。\u003c/p\u003e\n\u003ch4 id=\"113-默认配置\"\u003e1.1.3. 默认配置\u003c/h4\u003e\n\u003cp\u003e为了给所有的断路器提供一个默认的配置，创建一个\u003ccode\u003eCustomize\u003c/code\u003e bean，它被传递给\u003ccode\u003eResilience4JCircuitBreakerFactory\u003c/code\u003e或\u003ccode\u003eReactiveResilience4JCircuitBreakerFactory\u003c/code\u003e。\u003ccode\u003econfigureDefault\u003c/code\u003e方法可以用来提供一个默认的配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigureDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eResilience4JConfigBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofSeconds\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eReactive Example\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eReactiveResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigureDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eResilience4JConfigBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofSeconds\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e()).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"114-具体的断路器配置\"\u003e1.1.4. 具体的断路器配置\u003c/h4\u003e\n\u003cp\u003e与提供默认配置类似，你可以创建一个\u003ccode\u003eCustomize\u003c/code\u003e Bean，它被传递给一个 \u003ccode\u003eResilience4JCircuitBreakerFactory\u003c/code\u003e 或 \u003ccode\u003eReactiveResilience4JCircuitBreakerFactory\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofSeconds\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e()),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slow\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e除了配置被创建的断路器外，你还可以在断路器被创建后但被返回给调用者之前对其进行自定义。要做到这一点，你可以使用\u003ccode\u003eaddCircuitBreakerCustomizer\u003c/code\u003e方法。这对于向Resilience4J断路器添加事件处理程序很有用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddCircuitBreakerCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecircuitBreaker\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecircuitBreaker\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetEventPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonError\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalFluxErrorConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eonSuccess\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalFluxSuccessConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;normalflux\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eReactive Example\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eReactiveResilience4JCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTimeLimiterConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDuration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofSeconds\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCircuitBreakerConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e()),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slow\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slowflux\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddCircuitBreakerCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecircuitBreaker\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecircuitBreaker\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetEventPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonError\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalFluxErrorConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eonSuccess\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enormalFluxSuccessConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;normalflux\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n     \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"115-断路器属性配置\"\u003e1.1.5. 断路器属性配置\u003c/h4\u003e\n\u003cp\u003e你可以在你的应用程序的配置属性文件中配置\u003ccode\u003eCircuitBreaker\u003c/code\u003e和\u003ccode\u003eTimeLimiter\u003c/code\u003e实例。属性配置比Java\u003ccode\u003eCustomizer\u003c/code\u003e配置具有更高的优先级。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eresilience4j.circuitbreaker\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nt\"\u003einstances\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendA\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eregisterHealthIndicator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eslidingWindowSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e100\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eregisterHealthIndicator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eslidingWindowSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003epermittedNumberOfCallsInHalfOpenState\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003eslidingWindowType\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eTIME_BASED\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003erecordFailurePredicate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eio.github.robwin.exception.RecordFailurePredicate\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eresilience4j.timelimiter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nt\"\u003einstances\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendA\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e2s\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003ecancelRunningFuture\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003etimeoutDuration\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e1s\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"nt\"\u003ecancelRunningFuture\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e关于Resilience4j属性配置的更多信息，见\u003ca href=\"https://resilience4j.readme.io/docs/getting-started-3#configuration\"\u003eResilience4J Spring Boot 2配置\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"116-隔离模式支持\"\u003e1.1.6. 隔离模式支持\u003c/h4\u003e\n\u003cp\u003e如果\u003ccode\u003eresilience4j-bulkhead\u003c/code\u003e在classpath上，Spring Cloud CircuitBreaker将用Resilience4j Bulkhead来包装所有方法。你可以通过设置\u003ccode\u003espring.cluitbreaker.bulkhead.resilience4j.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来禁用Resilience4j Bulkhead。\u003c/p\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker Resilience4j提供两种隔离模式的实现。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eSemaphoreBulkhead\u003c/code\u003e，使用Semaphores。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFixedThreadPoolBulkhead\u003c/code\u003e，它使用一个有界队列和一个固定的线程池。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e默认情况下，Spring Cloud CircuitBreaker Resilience4j使用\u003ccode\u003eFixedThreadPoolBulkhead\u003c/code\u003e。更多关于实现Bulkhead模式的信息请参见\u003ca href=\"https://resilience4j.readme.io/docs/bulkhead\"\u003eResilience4j Bulkhead\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eCustomizer\u0026lt;Resilience4jBulkheadProvider\u0026gt;\u003c/code\u003e可以用来提供默认的\u003ccode\u003eBulkhead\u003c/code\u003e和\u003ccode\u003eThreadPoolBulkhead\u003c/code\u003e配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4jBulkheadProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultBulkheadCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigureDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eResilience4jBulkheadConfigurationBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003emaxConcurrentCalls\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethreadPoolBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eThreadPoolBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ecoreThreadPoolSize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003emaxThreadPoolSize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"117-具体的隔离配置\"\u003e1.1.7. 具体的隔离配置\u003c/h4\u003e\n\u003cp\u003e与证明默认的\u0026rsquo;Bulkhead\u0026rsquo;或\u0026rsquo;ThreadPoolBulkhead\u0026rsquo;配置类似，你可以创建一个\u003ccode\u003eCustomize\u003c/code\u003e bean，这个bean被传递给\u003ccode\u003eResilience4jBulkheadProvider\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4jBulkheadProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowBulkheadProviderCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustom\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003emaxConcurrentCalls\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethreadPoolBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eThreadPoolBulkheadConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eofDefaults\u003c/span\u003e\u003cspan class=\"o\"\u003e()),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slowBulkhead\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e除了配置被创建的隔板外，你还可以在隔板和线程池被创建后，但在返回给调用者之前，对其进行自定义。要做到这一点，你可以使用\u003ccode\u003eaddBulkheadCustomizer\u003c/code\u003e和\u003ccode\u003eaddThreadPoolBulkheadCustomizer\u003c/code\u003e方法。\u003c/p\u003e\n\u003cp\u003eBulkhead Example\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4jBulkheadProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddBulkheadCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebulkhead\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebulkhead\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetEventPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonCallRejected\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslowRejectedConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonCallFinished\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslowFinishedConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slowBulkhead\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThread Pool Bulkhead Example\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResilience4jBulkheadProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowThreadPoolBulkheadCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddThreadPoolBulkheadCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethreadPoolBulkhead\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ethreadPoolBulkhead\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetEventPublisher\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonCallRejected\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslowThreadPoolRejectedConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eonCallFinished\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eslowThreadPoolFinishedConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slowThreadPoolBulkhead\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"118-隔板属性配置\"\u003e1.1.8. 隔板属性配置\u003c/h4\u003e\n\u003cp\u003e你可以在你的应用程序的配置属性文件中配置 ThreadPoolBulkhead 和 SemaphoreBulkhead 实例。属性配置比Java\u003ccode\u003eCustomizer\u003c/code\u003e配置具有更高的优先级。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eresilience4j.thread-pool-bulkhead\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003einstances\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendA\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emaxThreadPoolSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ecoreThreadPoolSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eresilience4j.bulkhead\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003einstances\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackendB\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emaxConcurrentCalls\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e关于Resilience4j属性配置的更多信息，见\u003ca href=\"https://resilience4j.readme.io/docs/getting-started-3#configuration\"\u003eResilience4J Spring Boot 2配置\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"119-collecting-metrics\"\u003e1.1.9. Collecting Metrics\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Circuit Breaker Resilience4j包含自动配置功能，只要classpath上有正确的依赖项，就可以设置度量衡收集。要启用指标收集，你必须包括\u003ccode\u003eorg.springframework.boot:spring-boot-starter-actuator\u003c/code\u003e，和\u003ccode\u003eio.github.resilience4j:resilience4j-micrometer\u003c/code\u003e。关于存在这些依赖关系时产生的指标的更多信息，请参阅\u003ca href=\"https://resilience4j.readme.io/docs/micrometer\"\u003eResilience4j文档\u003c/a\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你不必直接包括\u003ccode\u003emicrometer-core\u003c/code\u003e，因为它是由\u003ccode\u003espring-boot-starter-actuator\u003c/code\u003e带来的。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"12-配置-spring-retry-circuit-breakers\"\u003e1.2. 配置 Spring Retry Circuit Breakers\u003c/h3\u003e\n\u003cp\u003eSpring Retry为Spring应用程序提供声明式重试支持。该项目中的一个子集包括实现断路器功能的能力。Spring Retry通过它的\u003ca href=\"https://github.com/spring-projects/spring-retry/blob/master/src/main/java/org/springframework/retry/policy/CircuitBreakerRetryPolicy.java\"\u003e\u003ccode\u003eCircuitBreakerRetryPolicy\u003c/code\u003e\u003c/a\u003e和\u003ca href=\"https://github.com/spring-projects/spring-retry#stateful-retry\"\u003estateful retry\u003c/a\u003e的组合来提供断路器实现。所有使用Spring Retry创建的断路器将使用\u003ccode\u003eCircuitBreakerRetryPolicy\u003c/code\u003e和一个\u003ca href=\"https://github.com/spring-projects/spring-retry/blob/master/src/main/java/org/springframework/retry/support/DefaultRetryState.java\"\u003e\u003ccode\u003eDefaultRetryState\u003c/code\u003e\u003c/a\u003e。这两个类都可以使用\u003ccode\u003eSpringRetryConfigBuilder\u003c/code\u003e进行配置。\u003c/p\u003e\n\u003ch4 id=\"121-默认配置\"\u003e1.2.1. 默认配置\u003c/h4\u003e\n\u003cp\u003e为了给所有的断路器提供一个默认的配置，创建一个\u003ccode\u003eCustomize\u003c/code\u003e bean，它被传递给一个\u003ccode\u003eSpringRetryCircuitBreakerFactory\u003c/code\u003e。\u003ccode\u003econfigureDefault\u003c/code\u003e方法可以用来提供一个默认的配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSpringRetryCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigureDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpringRetryConfigBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eretryPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTimeoutRetryPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e()).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"122-具体的断路器配置\"\u003e1.2.2. 具体的断路器配置\u003c/h4\u003e\n\u003cp\u003e与提供默认配置类似，你可以创建一个 \u003ccode\u003eCustomize\u003c/code\u003e Bean，它被传递给一个 \u003ccode\u003eSpringRetryCircuitBreakerFactory\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSpringRetryCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eretryPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSimpleRetryPolicy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;slow\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e除了配置被创建的断路器外，你还可以在断路器被创建后但被返回给调用者之前对其进行自定义。要做到这一点，你可以使用\u003ccode\u003eaddRetryTemplateCustomizers\u003c/code\u003e方法。这对于向\u003ccode\u003eRetryTemplate\u003c/code\u003e添加事件处理程序很有用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSpringRetryCircuitBreakerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eslowCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddRetryTemplateCustomizers\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eretryTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eretryTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eregisterListener\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRetryListener\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eopen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRetryContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRetryCallback\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecallback\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eclose\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRetryContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRetryCallback\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecallback\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e \u003cspan class=\"n\"\u003ethrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003eonError\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRetryContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRetryCallback\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eE\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecallback\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e \u003cspan class=\"n\"\u003ethrowable\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}));\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-构建\"\u003e2. 构建\u003c/h2\u003e\n\u003ch3 id=\"21-基本编译和测试\"\u003e2.1. 基本编译和测试\u003c/h3\u003e\n\u003cp\u003e要构建源代码，你需要安装JDK 1.8。\u003c/p\u003e\n\u003cp\u003eSpring Cloud使用Maven进行大多数构建相关活动，你可以通过克隆你感兴趣的项目并键入\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ ./mvnw install\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e您也可以自己安装Maven（\u0026gt;=3.3.3），运行\u003ccode\u003emvn\u003c/code\u003e命令来代替下面例子中的\u003ccode\u003e./mvnw\u003c/code\u003e。如果你这样做，如果你的本地Maven设置不包含spring预发布工件的仓库声明，你可能还需要添加\u003ccode\u003e-P spring\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e请注意，您可能需要通过设置\u003ccode\u003eMAVEN_OPTS\u003c/code\u003e环境变量，如\u003ccode\u003eXmx512m -XX:MaxPermSize=128m\u003c/code\u003e来增加Maven的可用内存量。我们试图在\u003ccode\u003e.mvn\u003c/code\u003e配置中涵盖这一点，所以如果你发现你必须这样做才能使构建成功，请提出一个票据，将设置添加到源控制中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e关于如何构建项目的提示，请看\u003ccode\u003e.travis.yml\u003c/code\u003e，如果有的话。应该有一个 \u0026ldquo;script\u0026rdquo;，也许还有 \u0026ldquo;install\u0026quot;命令。也可以看看 \u0026ldquo;services\u0026quot;部分，看看是否有任何服务需要在本地运行（例如mongo或rabbit）。忽略你可能在 \u0026ldquo;before_install\u0026quot;中发现的与git有关的部分，因为它们与设置git证书有关，而你已经有了这些证书。\u003c/p\u003e\n\u003cp\u003e需要中间件的项目通常包括\u003ccode\u003edocker-compose.yml\u003c/code\u003e，所以考虑使用\u003ca href=\"https://docs.docker.com/compose/\"\u003eDocker Compose\u003c/a\u003e在Docker容器中运行中间件服务器。关于mongo、rabbit和redis的常见情况，请参见\u003ca href=\"https://github.com/spring-cloud-samples/scripts\"\u003escripts demo repository\u003c/a\u003e中的README，以了解具体说明。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果其他都失败了，用\u003ccode\u003e.travis.yml\u003c/code\u003e的命令来构建（通常是\u003ccode\u003e./mvnw install\u003c/code\u003e）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"22-文档\"\u003e2.2. 文档\u003c/h3\u003e\n\u003cp\u003espring-cloud-build模块有一个 \u0026ldquo;docs\u0026quot;配置文件，如果你打开它，它将尝试从\u003ccode\u003esrc/main/asciidoc\u003c/code\u003e构建asciidoc源。作为这个过程的一部分，它将寻找 \u0026ldquo;README.adoc\u0026rdquo;，并通过加载所有内容来处理它，但不解析或渲染它，只是将它复制到\u0026rdquo;${main.baseir}\u0026quot;（默认为\u0026rdquo;$/tmp/releaser-1622150702029-0/spring-cloud-circuitbreaker/docs\u0026rdquo;，即项目的根）。如果README有任何改动，在Maven构建后会在正确位置显示为修改过的文件。提交并推送修改内容即可。\u003c/p\u003e\n\u003ch3 id=\"23-使用代码工作\"\u003e2.3. 使用代码工作\u003c/h3\u003e\n\u003cp\u003e如果你没有IDE的偏好，我们建议你在处理代码时使用\u003ca href=\"https://www.springsource.com/developer/sts\"\u003eSpring Tools Suite\u003c/a\u003e或\u003ca href=\"https://eclipse.org/\"\u003eEclipse\u003c/a\u003e。我们使用\u003ca href=\"https://eclipse.org/m2e/\"\u003em2eclipse\u003c/a\u003e eclipse插件来支持maven。其他IDE和工具只要使用Maven 3.3.3或更高版本，也应能顺利工作。\u003c/p\u003e\n\u003ch4 id=\"231-激活spring-maven配置文件\"\u003e2.3.1. 激活Spring Maven配置文件\u003c/h4\u003e\n\u003cp\u003eSpring Cloud项目需要激活 \u0026ldquo;spring\u0026rdquo; Maven配置文件，以解决spring里程碑和快照库的问题。使用你喜欢的IDE将该配置文件设置为激活状态，否则你可能会遇到构建错误。\u003c/p\u003e\n\u003ch4 id=\"232-用m2eclipse导入到eclipse中\"\u003e2.3.2. 用m2eclipse导入到eclipse中\u003c/h4\u003e\n\u003cp\u003e在使用eclipse时，我们推荐\u003ca href=\"https://eclipse.org/m2e/\"\u003em2eclipse\u003c/a\u003e eclipse插件。如果你还没有安装m2eclipse，它可以从 \u0026ldquo;eclipse marketplace\u0026quot;获得。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e旧版本的m2e不支持Maven 3.3，所以一旦项目被导入Eclipse，你还需要告诉m2eclipse为项目使用正确的配置文件。如果你看到项目中与POMs有关的许多不同的错误，请检查你是否有一个最新的安装。如果你不能升级m2e，在你的\u003ccode\u003esettings.xml\u003c/code\u003e中加入 \u0026ldquo;spring \u0026ldquo;配置文件。或者你可以从父pom的 \u0026ldquo;spring \u0026ldquo;配置文件中复制版本库设置到你的\u003ccode\u003esettings.xml\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"233-在没有m2eclipse的情况下导入到eclipse中\"\u003e2.3.3. 在没有m2eclipse的情况下导入到eclipse中\u003c/h4\u003e\n\u003cp\u003e如果你不愿意使用m2eclipse，你可以用以下命令生成eclipse项目元数据。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ ./mvnw eclipse:eclipse\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e生成的eclipse项目可以通过在文件菜单中选择导入现有项目来导入。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 3,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-config/",
        title: "Spring Cloud Config",
        description: "Spring Cloud Config为分布式系统中的外部化配置提供服务器和客户端支持。有了配置服务器，你就有了一个集中的地方来管理所有环境中的应用程序的外部属性。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.4\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月23日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix\"\u003ehttps://github.com/spring-cloud/spring-cloud-netflix\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Config为分布式系统中的外部化配置提供服务器和客户端支持。有了配置服务器，你就有了一个集中的地方来管理所有环境中的应用程序的外部属性。客户端和服务器上的概念与Spring Environment和PropertySource抽象完全一致，因此它们非常适用于Spring应用程序，但也可用于以任何语言运行的任何应用程序。当一个应用程序通过部署渠道从开发到测试再到生产时，你可以管理这些不同环境之间的配置，并确定应用程序在迁移时拥有运行所需的一切。服务器存储后端的默认实现使用git，因此它可以轻松地支持标签版本的配置环境，以及可用于管理内容的广泛工具。很容易添加其他的实现，并将它们与Spring配置连接起来。\u003c/p\u003e\n\u003ch2 id=\"1-快速开始\"\u003e1. 快速开始\u003c/h2\u003e\n\u003cp\u003e这篇快速入门文章介绍了Spring Cloud Config Server的服务器和客户端的使用情况。\u003c/p\u003e\n\u003cp\u003e首先，启动服务器，如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e spring-cloud-config-server\n$ ../mvnw spring-boot:run\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e服务器是一个 Spring Boot 应用程序，因此如果您愿意，可以从 IDE 中运行它(主类是 \u003ccode\u003eConfigServerApplication\u003c/code\u003e)。\u003c/p\u003e\n\u003cp\u003e接下来尝试一个客户端，如下所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ curl localhost:8888/foo/development\n{\n  \u0026#34;name\u0026#34;: \u0026#34;foo\u0026#34;,\n  \u0026#34;profiles\u0026#34;: [\n    \u0026#34;development\u0026#34;\n  ]\n  ....\n  \u0026#34;propertySources\u0026#34;: [\n    {\n      \u0026#34;name\u0026#34;: \u0026#34;https://github.com/spring-cloud-samples/config-repo/foo-development.properties\u0026#34;,\n      \u0026#34;source\u0026#34;: {\n        \u0026#34;bar\u0026#34;: \u0026#34;spam\u0026#34;,\n        \u0026#34;foo\u0026#34;: \u0026#34;from foo development\u0026#34;\n      }\n    },\n    {\n      \u0026#34;name\u0026#34;: \u0026#34;https://github.com/spring-cloud-samples/config-repo/foo.properties\u0026#34;,\n      \u0026#34;source\u0026#34;: {\n        \u0026#34;foo\u0026#34;: \u0026#34;from foo props\u0026#34;,\n        \u0026#34;democonfigclient.message\u0026#34;: \u0026#34;hello spring io\u0026#34;\n      }\n    },\n    ....\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e定位属性源的默认策略是克隆一个 git 仓库（在\u003ccode\u003espring.cloud.config.server.git.uri\u003c/code\u003e）并使用它来初始化一个迷你 SpringApplication。该迷你应用程序的环境被用来列举属性源，并在一个JSON端点上发布它们。\u003c/p\u003e\n\u003cp\u003eHTTP 服务以下面的形式提供资源:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e/{application}/{profile}[/{label}]\n/{application}-{profile}.yml\n/{label}/{application}-{profile}.yml\n/{application}-{profile}.properties\n/{label}/{application}-{profile}.properties\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003ecurl localhost:8888/foo/development\ncurl localhost:8888/foo/development/master\ncurl localhost:8888/foo/development,db/master\ncurl localhost:8888/foo-development.yml\ncurl localhost:8888/foo-db.properties\ncurl localhost:8888/master/foo-db.properties\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中，\u003ccode\u003eapplication\u003c/code\u003e是作为\u003ccode\u003eSpringApplication\u003c/code\u003e中的\u003ccode\u003espring.config.name\u003c/code\u003e注入的（通常是普通Spring Boot应用中的\u003ccode\u003eapplication\u003c/code\u003e），\u003ccode\u003eprofile\u003c/code\u003e是一个活动的描述文件（或逗号分隔的属性列表），\u003ccode\u003elabel\u003c/code\u003e是一个可选的git标签（默认为master)。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config\u003c/code\u003e服务器从各种来源为远程客户端提供配置。下面的示例从git仓库获取配置(必须提供) ，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其他来源包括任何兼容JDBC的数据库、Subversion、Hashicorp Vault、Credhub和本地文件系统。\u003c/p\u003e\n\u003ch3 id=\"11-使用客户端\"\u003e1.1. 使用客户端\u003c/h3\u003e\n\u003cp\u003e要在应用程序中使用这些功能，你可以将其构建为依赖\u003ccode\u003espring-cloud-config-client\u003c/code\u003e的Spring Boot应用程序（有关示例，请参见\u003ccode\u003econfig-client\u003c/code\u003e的测试案例或示例应用程序）。添加依赖关系的最便捷方式是使用Spring Boot starter \u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-config\u003c/code\u003e。对于Maven用户，还有一个父级pom和BOM（\u003ccode\u003espring-cloud-starter-parent\u003c/code\u003e），对于Gradle和Spring CLI用户，还有一个Spring IO版本管理属性文件。下面的例子展示了一个典型的Maven配置：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;parent\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-parent\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e{spring-boot-docs-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"nt\"\u003e\u0026lt;relativePath\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e \u003cspan class=\"c\"\u003e\u0026lt;!-- lookup parent from repository --\u0026gt;\u003c/span\u003e\n   \u003cspan class=\"nt\"\u003e\u0026lt;/parent\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e{spring-cloud-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n\t\t\t\u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-test\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003etest\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;build\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;plugins\u0026gt;\u003c/span\u003e\n           \u003cspan class=\"nt\"\u003e\u0026lt;plugin\u0026gt;\u003c/span\u003e\n               \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n               \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-maven-plugin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n           \u003cspan class=\"nt\"\u003e\u0026lt;/plugin\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/plugins\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/build\u0026gt;\u003c/span\u003e\n\n   \u003cspan class=\"c\"\u003e\u0026lt;!-- repositories also needed for snapshots and milestones --\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在您可以创建一个标准的 Spring Boot 应用程序，例如下面的 HTTP 服务器:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当这个 HTTP 服务器运行时，它从端口8888上的默认本地配置服务器(如果它正在运行)获取外部配置。要修改启动行为，可以使用\u003ccode\u003eapplication.properties\u003c/code\u003e更改配置服务器的位置，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=optional:configserver:http://myconfigserver.com\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认情况下，如果没有设置应用程序名，则将使用应用程序。要修改名称，可以将以下属性添加到 application.properties 文件中:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.application.name: myapp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e当设置属性\u003ccode\u003e${spring.application.name}\u003c/code\u003e时，不要在你的应用程序名称前加上保留词\u003ccode\u003eapplication-\u003c/code\u003e，以防止在解决正确的属性源时出现问题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eConfig Server属性作为高优先级属性源显示在/env 端点中，如下面的示例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ curl localhost:8080/env\n{\n  \u0026#34;activeProfiles\u0026#34;: [],\n  {\n    \u0026#34;name\u0026#34;: \u0026#34;servletContextInitParams\u0026#34;,\n    \u0026#34;properties\u0026#34;: {}\n  },\n  {\n    \u0026#34;name\u0026#34;: \u0026#34;configserver:https://github.com/spring-cloud-samples/config-repo/foo.properties\u0026#34;,\n    \u0026#34;properties\u0026#34;: {\n      \u0026#34;foo\u0026#34;: {\n        \u0026#34;value\u0026#34;: \u0026#34;bar\u0026#34;,\n        \u0026#34;origin\u0026#34;: \u0026#34;Config Server https://github.com/spring-cloud-samples/config-repo/foo.properties:2:12\u0026#34;\n      }\n    }\n  },\n  ...\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一个名为\u003ccode\u003econfigserver:\u0026lt;URL of remote repository\u0026gt;/\u0026lt;file name\u0026gt;\u003c/code\u003e的属性源包含foo属性，值为bar。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e属性源名称中的URL是 git仓库，而不是配置服务器URL\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ccode\u003eSpring Cloud Config\u003c/code\u003e 客户端，你需要设置\u003ccode\u003espring.config.import\u003c/code\u003e属性，以便与Config Server绑定。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#config-data-import\"\u003e《Spring Cloud Config参考指南》\u003c/a\u003e中阅读更多相关内容。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-spring-cloud-config-server\"\u003e2. Spring Cloud Config Server\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e为外部配置（名-值对或等效的YAML内容）提供了一个基于HTTP资源的API。通过使用\u003ccode\u003e@EnableConfigServer\u003c/code\u003e注解，该服务器可以嵌入到Spring Boot应用程序中。因此，下面的应用程序就是一个配置服务器:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConfigServer.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableConfigServer\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfigServer\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfigServer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e与所有 Spring Boot 应用程序一样，它默认运行在端口8080上，但是您可以通过各种方式将其切换到更常规的端口8888。最简单的，也是设置默认配置存储库的方法，就是使用 \u003ccode\u003espring.Config.name=configserver\u003c/code\u003e启动它(Config Server jar 中有一个\u003ccode\u003econfigserver.yml\u003c/code\u003e)。另一种方法是使用自己的\u003ccode\u003eapplication.properties\u003c/code\u003e，如下面的示例所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eserver.port: 8888\nspring.cloud.config.server.git.uri: file://${user.home}/config-repo\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中\u003ccode\u003e${ user.home }/config-repo\u003c/code\u003e是一个包含YAML和属性文件的 git 仓库。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在Windows上，如果文件URL是绝对的，带有驱动器前缀，你需要在文件URL中多加一个\u0026quot;/\u0026quot;（例如，file:///${user.home}/config-repo）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下面的列表显示了在前面的例子中创建git仓库的方法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ cd $HOME\n$ mkdir config-repo\n$ cd config-repo\n$ git init .\n$ echo info.foo: bar \u0026gt; application.properties\n$ git add -A .\n$ git commit -m \u0026#34;Add application.properties\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e为 git仓库使用本地文件系统只是为了进行测试。你应该使用服务器来托管生产环境中的配置存储库\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你在配置库中只保留文本文件，那么配置库的初始克隆可以快速有效地进行。如果你存储二进制文件，特别是大的二进制文件，你可能会在第一次请求配置时遇到延迟，或者在服务器中遇到内存不足的错误。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"21-环境仓库\"\u003e2.1. 环境仓库\u003c/h3\u003e\n\u003cp\u003e你应该把配置服务器的配置数据存储在哪里？支持这种行为的策略是\u003ccode\u003eEnvironmentRepository\u003c/code\u003e，为\u003ccode\u003eEnvironment\u003c/code\u003e对象服务。这个\u003ccode\u003eEnvironment\u003c/code\u003e是来自\u003ccode\u003eSpring Environment\u003c/code\u003e（包括作为主要特征的\u003ccode\u003epropertySources\u003c/code\u003e）的领域的浅拷贝。环境资源是由三个变量参数化的。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e{application}\u003c/code\u003e 映射到客户端的\u003ccode\u003espring.application.name\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e{profile}\u003c/code\u003e 映射到客户端上的\u003ccode\u003espring.profiles.active\u003c/code\u003e(逗号分隔多个)。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e{label}\u003c/code\u003e 这是一个服务器端特性，标记了一组 “versioned” 的配置文件。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e仓库实现通常表现得像Spring Boot应用程序，从等于\u003ccode\u003e{application}\u003c/code\u003e参数的\u003ccode\u003espring.config.name\u003c/code\u003e和等于\u003ccode\u003e{profiles}\u003c/code\u003e参数的\u003ccode\u003espring.profiles.active\u003c/code\u003e加载配置文件。配置文件的优先级规则也与普通Spring Boot应用程序相同。活跃的配置文件优先于默认值，如果有多个配置文件，最后一个优先（类似于向地图添加入口）。\u003c/p\u003e\n\u003cp\u003e下面的示例客户端应用程序具有这种引导配置:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efoo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edev,mysql\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e和 Spring Boot 应用程序一样，这些属性也可以通过环境变量或命令行参数来设置\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果资源库是基于文件的，服务器会从\u003ccode\u003eapplication.yml\u003c/code\u003e（在所有客户端之间共享）和\u003ccode\u003efoo.yml\u003c/code\u003e（以\u003ccode\u003efoo.yml\u003c/code\u003e为优先）创建一个环境。如果YAML文件里面有指向Spring配置文件的文件，这些文件将以更高的优先级被应用（按照列出的配置文件的顺序）。如果有特定于配置文件的YAML（或属性）文件，这些文件也会以高于默认值的优先权被应用。更高的优先级转换为环境中较早列出的属性源。(这些规则同样适用于独立的Spring Boot应用程序）。)\u003c/p\u003e\n\u003cp\u003e你可以将\u003ccode\u003espring.cloud.config.server.accept-empty\u003c/code\u003e设置为 false，这样如果没有找到应用程序，服务器将返回 HTTP 404 状态。默认情况下，该标志被设置为 true。\u003c/p\u003e\n\u003ch3 id=\"211-git后端\"\u003e2.1.1 Git后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eEnvironmentRepository\u003c/code\u003e的默认实现使用 Git 后台，这对于管理升级和物理环境以及审计更改非常方便。要改变仓库的位置，你可以在配置服务器中设置\u003ccode\u003espring.cloud.config.server.git.uri\u003c/code\u003e配置属性（例如在 application.yml 中）。如果你用前缀\u003ccode\u003efile:\u003c/code\u003e来设置它，它应该从本地仓库工作，这样你就可以在没有服务器的情况下快速、轻松地开始工作。然而，在这种情况下，服务器直接在本地资源库上操作，而不克隆它（如果它不是空的也没有关系，因为配置服务器从不对 \u0026ldquo;远程\u0026quot;资源库进行修改）。为了扩大配置服务器的规模并使其高可用，你需要让服务器的所有实例都指向同一个资源库，所以只有共享文件系统才能发挥作用。即使在这种情况下，最好使用共享文件系统资源库的\u003ccode\u003essh:\u003c/code\u003e协议，这样服务器就可以克隆它并使用本地工作拷贝作为缓存。\u003c/p\u003e\n\u003cp\u003e这个版本库的实现将HTTP资源的\u003ccode\u003e{label}\u003c/code\u003e参数映射到一个git标签（提交ID、分支名称或标签）。如果git分支或标签名称包含一个斜线（/），那么HTTP URL中的标签应该用特殊字符串（_)来指定（以避免与其他URL路径产生歧义）。例如，如果标签是foo/bar，替换掉斜线会产生以下标签：foo(_)bar。包含特殊字符串（_）也可以应用于\u003ccode\u003e{application}\u003c/code\u003e参数。如果你使用命令行客户端，如curl，要注意URL中的括号\u0026ndash;你应该在shell中用单引号（''）来转义它们。\u003c/p\u003e\n\u003ch4 id=\"2111-跳过-ssl-证书验证\"\u003e2.1.1.1. 跳过 SSL 证书验证\u003c/h4\u003e\n\u003cp\u003e通过将\u003ccode\u003egit.skipSslValidation\u003c/code\u003e属性设置为 true (默认为 false) ，可以禁用配置服务器对 Git 服务器的 SSL 证书的验证。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.com/my/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eskipSslValidation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2112-设置-http-连接超时\"\u003e2.1.1.2. 设置 HTTP 连接超时\u003c/h4\u003e\n\u003cp\u003e您可以配置配置服务器等待获取 HTTP 连接的时间(以秒为单位)。使用 git.timeout 属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.com/my/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2113-git-uri-中的占位符\"\u003e2.1.1.3. Git URI 中的占位符\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持git仓库的URL，其中包含\u003ccode\u003e{application}\u003c/code\u003e和\u003ccode\u003e{profile}\u003c/code\u003e的占位符。(如果你需要的话，还有\u003ccode\u003e{label}\u003c/code\u003e，但记住，无论如何，标签都是作为git标签应用的) 因此，你可以通过使用类似于以下的结构来支持 \u0026ldquo;每个应用一个仓库\u0026quot;的策略。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/myorg/{application}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e您还可以使用类似的模式(但是使用\u003ccode\u003e{profile}\u003c/code\u003e)支持“每个配置文件一个仓库”策略。\u003c/p\u003e\n\u003cp\u003e此外，在\u003ccode\u003e{application}\u003c/code\u003e参数中使用特殊的字符串“(_)”可以支持多个组织，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/{application}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中\u003ccode\u003e{application}\u003c/code\u003e在请求时以下列格式提供: \u003ccode\u003eorganization (_) application\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"2114-模式匹配和多个仓库\"\u003e2.1.1.4. 模式匹配和多个仓库\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config\u003c/code\u003e还包括对应用程序和配置文件名称的模式匹配，以支持更复杂的要求。模式格式是一个逗号分隔的\u003ccode\u003e{application}/{profile}\u003c/code\u003e名称列表，并带有通配符（注意，以通配符开始的模式可能需要加引号），如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003esimple\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/simple/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003especial\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003especial*/dev*,*special*/dev*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/special/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003elocal\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocal*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:/home/configsvc/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果\u003ccode\u003e{application}/{profile}\u003c/code\u003e不匹配任何模式，它将使用\u003ccode\u003espring.cloud.config.server.git.URI\u003c/code\u003e下定义的默认URI。在上面的示例中，对于\u003ccode\u003esimple\u003c/code\u003e仓库，模式是\u003ccode\u003esimple/*\u003c/code\u003e (它只匹配所有概要文件中名为simple的一个应用程序)。\u003ccode\u003elocal\u003c/code\u003e仓库匹配所有概要文件中以\u003ccode\u003elocal\u003c/code\u003e开头的所有应用程序名称(/* 后缀会自动添加到任何没有配置文件匹配器的模式中)。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在 \u0026ldquo;simple\u0026quot;例子中使用的 \u0026ldquo;one-line\u0026quot;快捷方式，只有在唯一需要设置的属性是URI的情况下才可以使用。如果你需要设置其他东西（证书、模式等等），你需要使用完整的形式.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eRepo 中的 pattern 属性实际上是一个数组，因此可以使用 YAML 数组(或者[0]、[1]等属性文件中的后缀)绑定到多个模式。如果你要运行多个配置文件的应用程序，你可能需要这样做，如下面的例子所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003edevelopment\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e- \u003cspan class=\"s1\"\u003e\u0026#39;*/development\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e- \u003cspan class=\"s1\"\u003e\u0026#39;*/staging\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/development/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003estaging\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e- \u003cspan class=\"s1\"\u003e\u0026#39;*/qa\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e- \u003cspan class=\"s1\"\u003e\u0026#39;*/production\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/staging/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud猜测，包含一个不以*结尾的配置文件的模式意味着你实际上想匹配以这个模式开始的配置文件列表（所以\u003ccode\u003e*/staging\u003c/code\u003e是\u003ccode\u003e[\u0026quot;*/staging\u0026quot;, \u0026quot;*/staging,*\u0026quot;]\u003c/code\u003e等的快捷方式）。这种情况很常见，例如，你需要在本地运行 \u003ccode\u003edevelopment\u003c/code\u003e配置文件的应用程序，但也需要远程运行 \u003ccode\u003ecloud\u003c/code\u003e配置文件。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e每个仓库还可以有选择地将配置文件存储在子目录中，搜索这些目录的模式可以指定为搜索路径。下面的示例在顶层显示一个配置文件:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003esearch-paths\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"l\"\u003efoo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"l\"\u003ebar*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的示例中，服务器在顶层和 foo/sub 目录中搜索配置文件，还搜索名称以 bar 开头的任何子目录。\u003c/p\u003e\n\u003cp\u003e默认情况下，服务器在首次请求配置时克隆远程仓库。可以将服务器配置为在启动时克隆仓库，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/common/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-a\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-a-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloneOnStart\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-a/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-b\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-b-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloneOnStart\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-b/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-c\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-c-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-a/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的示例中，服务器在启动时克隆\u003ccode\u003eteam-a\u003c/code\u003e的\u003ccode\u003econfig-repo\u003c/code\u003e，然后接受任何请求。除非从存储库请求配置，否则不会克隆所有其他存储库。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e设置服务器启动时克隆资源库有助于在配置服务器启动时快速识别配置错误的配置源（如无效的资源库URI）。如果不配置\u003ccode\u003ecloneOnStart\u003c/code\u003e，配置服务器可能会在配置错误或无效的配置源下成功启动，直到应用程序从该配置源请求配置时才会发现错误。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"2115-认证\"\u003e2.1.1.5. 认证\u003c/h4\u003e\n\u003cp\u003e要在远程存储库上使用 HTTP 基本身份验证，请分别添加用户名和密码属性(不在 URL 中) ，如下例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etrolley\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003estrongpassword\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不使用 HTTPS 和用户凭证，当你在默认目录（~/.ssh）中存储密钥，并且 URI 指向 SSH 位置，如 \u003ccode\u003egit@github.com:configuration/cloud-configuration\u003c/code\u003e时，SSH 也应该开箱工作。重要的是，在 \u003ccode\u003e~/.ssh/known_hosts\u003c/code\u003e文件中要有 Git 服务器的条目，并且是\u003ccode\u003essh-rsa\u003c/code\u003e格式。其他格式（如ecdsa-sha2-nistp256）不被支持。为了避免意外，你应该确保 Git 服务器的\u003ccode\u003eknown_hosts\u003c/code\u003e文件中只有一个条目，并且它与你提供给配置服务器的 URL 相匹配。如果你在 URL 中使用了一个主机名，你应该在\u003ccode\u003eknown_hosts\u003c/code\u003e文件中准确地写入这个主机名（而不是 IP）。仓库是通过使用JGit访问的，所以你找到的任何关于这个的文档都应该是适用的。HTTPS 代理设置可以在\u003ccode\u003e~/.git/config \u003c/code\u003e或（与任何其他 JVM 进程的方式相同）用系统属性（\u003ccode\u003e-Dhttps.proxyHost\u003c/code\u003e和 \u003ccode\u003e-Dhttps.proxyPort\u003c/code\u003e）来设置。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你不知道你的\u003ccode\u003e~/.git\u003c/code\u003e目录在哪里，可以使用\u003ccode\u003egit config --global\u003c/code\u003e来操作设置（例如，\u003ccode\u003egit config --global http.sslVerify false\u003c/code\u003e）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eJGit需要PEM格式的RSA密钥。下面是一个ssh-keygen(来自openssh)命令的示例，它将生成正确格式的密钥:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003essh-keygen -m PEM -t rsa -b 4096 -f ~/config_server_deploy_key.rsa\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e警告:当使用SSH密钥时，期望的SSH私钥必须以\u003ccode\u003e----- begin RSA PRIVATE KEY-----\u003c/code\u003e开头。如果密钥以\u003ccode\u003e-----BEGIN OPENSSH PRIVATE key -----\u003c/code\u003e开头，则在启动\u003ccode\u003espring-cloud-config\u003c/code\u003e服务器时不会加载RSA密钥。错误如下所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e- Error in object \u0026#39;spring.cloud.config.server.git\u0026#39;: codes [PrivateKeyIsValid.spring.cloud.config.server.git,PrivateKeyIsValid]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [spring.cloud.config.server.git.,]; arguments []; default message []]; default message [Property \u0026#39;spring.cloud.config.server.git.privateKey\u0026#39; is not a valid private key]\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了纠正上述错误，必须将RSA密钥转换为PEM格式。上面提供了一个使用openssh的示例，以适当的格式生成新密钥。\u003c/p\u003e\n\u003ch4 id=\"2116-使用aws-codecommit进行身份验证\"\u003e2.1.1.6. 使用AWS CodeCommit进行身份验证\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config\u003c/code\u003e服务器也支持AWS CodeCommit认证。AWS CodeCommit在通过命令行使用Git时使用一个身份验证助手。这个助手没有和JGit库一起使用，所以如果Git URI匹配AWS CodeCommit模式，就会为AWS CodeCommit创建一个JGit CredentialProvider。AWS CodeCommit uri遵循以下模式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"l\"\u003ehttps//git-codecommit.${AWS_REGION}.amazonaws.com/v1/repos/${repo}.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果您使用AWS CodeCommit URI提供用户名和密码，那么它们必须是\u003ccode\u003eAWS accessKeyId\u003c/code\u003e和\u003ccode\u003esecretAccessKey\u003c/code\u003e，它们提供对仓库的访问。如果不指定用户名和密码，则使用AWS默认凭据提供程序链\u003ccode\u003eaccessKeyId\u003c/code\u003e和\u003ccode\u003esecretAccessKey\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果您的Git URI与CodeCommit URI模式匹配(前面显示的)，则必须在用户名和密码中或在默认凭据提供者链支持的某个位置提供有效的AWS凭据。AWS EC2实例可能使用IAM Roles作为EC2实例。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eaws-java-sdk-core jar\u003c/code\u003e是一个可选依赖项。如果\u003ccode\u003eAWS -java-sdk-core jar\u003c/code\u003e不在类路径中，则不会创建AWS Code提交凭据提供程序，而与git服务器URI无关。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"2117-使用google-cloud-source认证\"\u003e2.1.1.7. 使用Google Cloud Source认证\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Config Server也支持对Google Cloud Source仓库进行认证。\u003c/p\u003e\n\u003cp\u003e如果你的Git URI使用http或https协议，且域名为\u003ccode\u003esource.developer.google.com\u003c/code\u003e，则将使用\u003ccode\u003eGoogle Cloud Source\u003c/code\u003e凭证提供商。Google Cloud Source 仓库的 URI 格式为 \u003ccode\u003ehttps://source.developers.google.com/p/${GCP_PROJECT}/r/${REPO}\u003c/code\u003e。要获得你的资源库的URI，点击Google Cloud Source用户界面的 \u0026ldquo;Clone\u0026rdquo;，并选择 \u0026ldquo;手动生成的凭证\u0026rdquo;。不要生成任何凭证，只需复制显示的URI。\u003c/p\u003e\n\u003cp\u003eGoogle Cloud Source凭证提供者将使用谷歌云平台应用程序的默认凭证。关于如何为一个系统创建应用默认凭证，请参见Google Cloud SDK文档。这种方法将适用于开发环境中的用户账户和生产环境中的服务账户。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ecom.google。Auth:google-auth-library-oauth2-http\u003c/code\u003e是一个可选的依赖项。如果\u003ccode\u003eGoogle -auth-library-oauth2-http\u003c/code\u003ejar不在你的类路径，则不管git服务器URI如何，都不会创建谷歌Cloud Source凭据提供者。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"2118-使用属性进行ssh配置\"\u003e2.1.1.8. 使用属性进行SSH配置\u003c/h4\u003e\n\u003cp\u003e默认情况下，Spring Cloud Config Server 使用的 JGit 库在使用 SSH URI 连接到 Git 仓库时使用 SSH 配置文件，如\u003ccode\u003e~/.ssh/known_hosts\u003c/code\u003e和\u003ccode\u003e/etc/ssh/ssh_config\u003c/code\u003e。在 Cloud Foundry 等云环境中，本地文件系统可能是短暂的或不容易访问。对于这些情况，SSH 配置可以通过使用 Java 属性来设置。为了激活基于属性的 SSH 配置，\u003ccode\u003espring.cloud.config.server.git.ignoreLocalSshSettings\u003c/code\u003e属性必须设置为 true，如以下示例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit@gitserver.com:team/repo1.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eignoreLocalSshSettings\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esomeHostKey\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostKeyAlgorithm\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003essh-rsa\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eprivateKey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         -----BEGIN RSA PRIVATE KEY-----\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         MIIEpgIBAAKCAQEAx4UbaDzY5xjW6hc9jwN0mX33XpTDVW9WqHp5AKaRbtAC3DqX\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         IXFMPgw3K45jxRb93f8tv9vL3rD9CUG1Gv4FM+o7ds7FRES5RTjv2RT/JVNJCoqF\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         ol8+ngLqRZCyBtQN7zYByWMRirPGoDUqdPYrj2yq+ObBBNhg5N+hOwKjjpzdj2Ud\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         1l7R+wxIqmJo1IYyy16xS8WsjyQuyC0lL456qkd5BDZ0Ag8j2X9H9D5220Ln7s9i\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         oezTipXipS7p7Jekf3Ywx6abJwOmB0rX79dV4qiNcGgzATnG1PkXxqt76VhcGa0W\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         DDVHEEYGbSQ6hIGSh0I7BQun0aLRZojfE3gqHQIDAQABAoIBAQCZmGrk8BK6tXCd\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         fY6yTiKxFzwb38IQP0ojIUWNrq0+9Xt+NsypviLHkXfXXCKKU4zUHeIGVRq5MN9b\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         BO56/RrcQHHOoJdUWuOV2qMqJvPUtC0CpGkD+valhfD75MxoXU7s3FK7yjxy3rsG\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         EmfA6tHV8/4a5umo5TqSd2YTm5B19AhRqiuUVI1wTB41DjULUGiMYrnYrhzQlVvj\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         5MjnKTlYu3V8PoYDfv1GmxPPh6vlpafXEeEYN8VB97e5x3DGHjZ5UrurAmTLTdO8\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         +AahyoKsIY612TkkQthJlt7FJAwnCGMgY6podzzvzICLFmmTXYiZ/28I4BX/mOSe\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         pZVnfRixAoGBAO6Uiwt40/PKs53mCEWngslSCsh9oGAaLTf/XdvMns5VmuyyAyKG\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         ti8Ol5wqBMi4GIUzjbgUvSUt+IowIrG3f5tN85wpjQ1UGVcpTnl5Qo9xaS1PFScQ\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         xrtWZ9eNj2TsIAMp/svJsyGG3OibxfnuAIpSXNQiJPwRlW3irzpGgVx/AoGBANYW\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         dnhshUcEHMJi3aXwR12OTDnaLoanVGLwLnkqLSYUZA7ZegpKq90UAuBdcEfgdpyi\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         PhKpeaeIiAaNnFo8m9aoTKr+7I6/uMTlwrVnfrsVTZv3orxjwQV20YIBCVRKD1uX\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         VhE0ozPZxwwKSPAFocpyWpGHGreGF1AIYBE9UBtjAoGBAI8bfPgJpyFyMiGBjO6z\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         FwlJc/xlFqDusrcHL7abW5qq0L4v3R+FrJw3ZYufzLTVcKfdj6GelwJJO+8wBm+R\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         gTKYJItEhT48duLIfTDyIpHGVm9+I1MGhh5zKuCqIhxIYr9jHloBB7kRm0rPvYY4\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         VAykcNgyDvtAVODP+4m6JvhjAoGBALbtTqErKN47V0+JJpapLnF0KxGrqeGIjIRV\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         cYA6V4WYGr7NeIfesecfOC356PyhgPfpcVyEztwlvwTKb3RzIT1TZN8fH4YBr6Ee\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         KTbTjefRFhVUjQqnucAvfGi29f+9oE3Ei9f7wA+H35ocF6JvTYUsHNMIO/3gZ38N\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         CPjyCMa9AoGBAMhsITNe3QcbsXAbdUR00dDsIFVROzyFJ2m40i4KCRM35bC/BIBs\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         q0TY3we+ERB40U8Z2BvU61QuwaunJ2+uGadHo58VSVdggqAo0BSkH58innKKt96J\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         69pcVH/4rmLbXdcmNYGm6iu+MlPQk4BUZknHSmVHIFdJ0EPupVaQ8RHT\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e                         -----END RSA PRIVATE KEY-----\u003c/span\u003e\u003cspan class=\"w\"\u003e                         \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下表描述了SSH配置属性。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e表1：SSH配置属性\u003c/strong\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e属性名称\u003c/th\u003e\n\u003cth\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eignoreLocalSshSettings\u003c/td\u003e\n\u003ctd\u003e如果为\u003ccode\u003etrue\u003c/code\u003e，使用基于属性而不是基于文件的 SSH 配置。必须在 \u003ccode\u003espring.cloud.config.server.git.ignoreLocalSshSettings\u003c/code\u003e 中设置，而不是在版本库定义中。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eprivateKey\u003c/td\u003e\n\u003ctd\u003e有效的SSH私钥。如果ignoreLocalSshSettings为true且Git URI为SSH格式，则必须设置。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ehostKey\u003c/td\u003e\n\u003ctd\u003e有效的SSH主机密钥。如果hostKeyAlgorithm也被设置，则必须被设置。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ehostKeyAlgorithm\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003essh-dss\u003c/code\u003e, \u003ccode\u003essh-rsa\u003c/code\u003e, \u003ccode\u003eecdsa-sha2-nistp256\u003c/code\u003e, \u003ccode\u003eecdsa-sha2-nistp384\u003c/code\u003e, 或 \u003ccode\u003eecdsa-sha2-nistp521\u003c/code\u003e中的一个。如果hostKey也被设置，则必须被设置。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003estrictHostKeyChecking\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e 或 \u003ccode\u003efalse\u003c/code\u003e. 如果是\u003ccode\u003efalse\u003c/code\u003e，则忽略主机钥匙的错误。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eknownHostsFile\u003c/td\u003e\n\u003ctd\u003e自定义\u003ccode\u003e.known_hosts\u003c/code\u003e文件的位置。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epreferredAuthentications\u003c/td\u003e\n\u003ctd\u003e覆盖服务器认证方法的顺序。如果服务器在\u003ccode\u003epublickey\u003c/code\u003e方法之前有键盘交互式认证，这应该允许规避登录提示。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch4 id=\"2119-git搜索路径中的占位符\"\u003e2.1.1.9. Git搜索路径中的占位符\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Config Server还支持带有\u003ccode\u003e{appcaliton}\u003c/code\u003e和\u003ccode\u003e{profile}\u003c/code\u003e占位符的搜索路径。(以及\u003ccode\u003e{label}\u003c/code\u003e（如果你需要的话），如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003esearch-paths\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;{application}\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"21110-强制拉取git仓库\"\u003e2.1.1.10. 强制拉取Git仓库\u003c/h4\u003e\n\u003cp\u003e如前所述，Spring Cloud Config Server复制了一个远程git仓库，以防本地副本变脏（例如，操作系统进程改变了文件夹内容），导致Spring Cloud Config Server无法从远程仓库更新本地副本。\u003c/p\u003e\n\u003cp\u003e为了解决这个问题，有一个\u003ccode\u003eforce-pull\u003c/code\u003e属性，如果本地副本脏了，它可以让Spring Cloud Config Server强制从远程仓库拉取，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eforce-pull\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你有一个多仓库的配置，你可以在每个仓库配置\u003ccode\u003eforce-pull\u003c/code\u003e属性，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/common/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eforce-pull\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepos\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-a\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-a-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-a/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eforce-pull\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-b\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-b-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-b/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eforce-pull\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eteam-c\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eteam-c-*\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://git/team-a/config-repo.git\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eforce-pull\u003c/code\u003e属性默认为\u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"21111-删除git存储库中未被追踪的分支\"\u003e2.1.1.11. 删除Git存储库中未被追踪的分支\u003c/h4\u003e\n\u003cp\u003e由于Spring Cloud Config Server有一个远程git仓库的克隆，在将分支检出到本地repo后（例如通过标签获取属性），它将永远保留这个分支或直到下一次服务器重启（创建新的本地repo）。因此，可能会出现这样的情况：远程分支被删除，但其本地副本仍可用于获取。如果Spring云配置服务器客户端服务以\u003ccode\u003e--spring.cloud.config.label=deletedRemoteBranch,master\u003c/code\u003e启动，它将从\u003ccode\u003edeleedRemoteBranch\u003c/code\u003e本地分支获取属性，但不会从master获取。\u003c/p\u003e\n\u003cp\u003e为了保持本地版本库分支的干净和远程可以设置\u003ccode\u003edeleteUntrackedBranches\u003c/code\u003e属性。它将使Spring Cloud Config Server强制删除本地仓库中未跟踪的分支。例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003edeleteUntrackedBranches\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003edeleteUntrackedBranches\u003c/code\u003e属性默认为\u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"21112-git刷新频率\"\u003e2.1.1.12. Git刷新频率\u003c/h4\u003e\n\u003cp\u003e你可以通过使用\u003ccode\u003espring.cloud.config.server.git.refreshRate\u003c/code\u003e来控制配置服务器从你的 Git 后台获取更新配置数据的频率。该属性的值是以秒为单位的。默认值为0，意味着配置服务器将在每次请求时从Git repo中获取更新的配置。\u003c/p\u003e\n\u003ch3 id=\"212-版本控制后端文件系统的使用\"\u003e2.1.2 版本控制后端文件系统的使用\u003c/h3\u003e\n\u003cp\u003e对于基于VCS的后端（git、svn），文件被签出或克隆到本地文件系统。默认情况下，它们被放在系统的临时目录中，前缀为\u003ccode\u003econfig-repo-\u003c/code\u003e。例如，在linux上，它可能是\u003ccode\u003e/tmp/config-repo-\u0026lt;randomid\u0026gt;\u003c/code\u003e。一些操作系统会定期清理临时目录。这可能会导致意想不到的行为，比如丢失属性。为了避免这个问题，通过将\u003ccode\u003espring.cloud.config.server.git.basedir\u003c/code\u003e 或\u003ccode\u003espring.cloud.config.server.svn.basedir\u003c/code\u003e设置为不在系统临时结构中的目录，改变配置服务器使用的目录。\u003c/p\u003e\n\u003ch3 id=\"213-文件系统后台\"\u003e2.1.3 文件系统后台\u003c/h3\u003e\n\u003cp\u003e配置服务器中还有一个 \u003ccode\u003enative\u003c/code\u003e配置文件，它不使用Git，而是从本地classpath或文件系统（你想用\u003ccode\u003espring.cloud.config.server.native.searchLocations\u003c/code\u003e指向的任何静态URL）加载配置文件。要使用本地配置文件，请使用 \u003ccode\u003espring.profiles.active=native\u003c/code\u003e启动配置服务器。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e记住要为文件资源使用\u003ccode\u003efile:\u003c/code\u003e前缀（没有前缀的默认值通常是classpath）。与任何Spring Boot配置一样，你可以嵌入\u003ccode\u003e${}\u003c/code\u003e式的环境占位符，但要记住，Windows中的绝对路径需要额外的/（例如，\u003ccode\u003efile:///${user.home}/config-repo）\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003esearchLocations\u003c/code\u003e的默认值与本地Spring Boot应用程序相同（即\u003ccode\u003e[classpath:/, classpath:/config, file:./, file:./config]\u003c/code\u003e）。这不会将服务器上的\u003ccode\u003eapplication.properties\u003c/code\u003es暴露给所有客户端，因为在发送到客户端之前，服务器中存在的任何属性源都会被删除。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e文件系统后端非常适合快速入门并进行测试。 要在生产中使用它，您需要确保文件系统可靠并在Config Server的所有实例上共享。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e搜索位置可以包含\u003ccode\u003e{application}\u003c/code\u003e，\u003ccode\u003e{profile}\u003c/code\u003e和\u003ccode\u003e{label}\u003c/code\u003e的占位符。 通过这种方式，您可以分离路径中的目录并选择一个对您有意义的策略（例如每个应用程序或每个配置文件子目录）。\u003c/p\u003e\n\u003cp\u003e如果你不在搜索位置使用占位符，这个资源库也会将HTTP资源的\u003ccode\u003e{label}\u003c/code\u003e参数附加到搜索路径的后缀，所以属性文件会从每个搜索位置和一个与标签同名的子目录中加载（在Spring环境中，被标记的属性优先）。因此，没有占位符的默认行为与添加一个以\u003ccode\u003e/{label}/\u003c/code\u003e结尾的搜索位置相同。例如，\u003ccode\u003efile:/tmp/config\u003c/code\u003e与\u003ccode\u003efile:/tmp/config,file:/tmp/config/{label}\u003c/code\u003e相同。这种行为可以通过设置\u003ccode\u003espring.cloud.config.server.native.addLabelLocations=false\u003c/code\u003e来禁用。\u003c/p\u003e\n\u003ch3 id=\"214-vault-后端\"\u003e2.1.4 Vault 后端\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Config Server还支持Vault作为后端。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eVault是一个用于安全访问秘密的工具。秘密是任何你想严格控制访问的东西，如API密钥、密码、证书和其他敏感信息。Vault为任何秘密提供了一个统一的接口，同时提供严格的访问控制并记录详细的审计日志。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e有关Vault的更多信息，请参阅\u003ca href=\"https://learn.hashicorp.com/vault/?track=getting-started#getting-started\"\u003eVault快速入门指南\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e为了使配置服务器能够使用Vault后端，你可以用vault配置文件运行你的配置服务器。例如，在你的配置服务器的\u003ccode\u003eapplication.properties\u003c/code\u003e中，你可以添加\u003ccode\u003espring.profiles.active=vault\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e默认情况下，配置服务器假设您的Vault服务器运行在http://127.0.0.1:8200。它还假定后端名称为\u003ccode\u003esecret\u003c/code\u003e，密钥为应用。所有这些默认值都可以在您的配置服务器的\u003ccode\u003eapplication.properties\u003c/code\u003e中进行配置。下表描述了可配置的Vault属性。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003e名称\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003e默认值\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ehost\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e127.0.0.1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eport\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e8200\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003escheme\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003ehttp\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ebackend\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003esecret\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003edefaultKey\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003eapplication\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eprofileSeparator\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e,\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ekvVersion\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eskipSslValidation\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003efalse\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003etimeout\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e5\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003enamespace\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003enull\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e前述表格中的所有属性都必须以\u003ccode\u003espring.cloud.config.server.vault\u003c/code\u003e为前缀，或者放在复合配置中正确的 Vault 部分中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e所有可配置属性都可以在\u003ccode\u003eorg.springframework.cloud.config.server.environment.vaultenvironmentProperties\u003c/code\u003e中找到\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eVault 0.10.0引入了一个版本化的键值后端（k/v后端版本2），它暴露了一个与早期版本不同的API，它现在需要在挂载路径和实际上下文路径之间有一个\u003ccode\u003edata/\u003c/code\u003e，并将秘密包裹在一个数据对象中。设置\u003ccode\u003espring.cloud.config.server.vault.kv-version=2\u003c/code\u003e 将考虑到这一点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e（可选），支持\u003ccode\u003eVault Enterprise X-Vault-Namespace\u003c/code\u003e标头。 要将其发送到Vault设置\u003ccode\u003enamespace \u003c/code\u003e属性。\u003c/p\u003e\n\u003cp\u003e使用您的CONFIG SERVER运行，您可以将HTTP请求向服务器制作以检索Vault后端的值。 为此，您需要一个为Vault Server提供令牌。\u003c/p\u003e\n\u003cp\u003e首先，将一些数据放在Vault中，如下例所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ vault kv put secret/application foo=bar baz=bam\n$ vault kv put secret/myapp foo=myappsbar\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其次，对CONFIG Server进行HTTP请求以检索值，如以下示例所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e$ curl -X \u0026#34;GET\u0026#34; \u0026#34;http://localhost:8888/myapp/default\u0026#34; -H \u0026#34;X-Config-Token: yourtoken\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e您应该看到类似于以下内容的响应：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e{\n   \u0026#34;name\u0026#34;:\u0026#34;myapp\u0026#34;,\n   \u0026#34;profiles\u0026#34;:[\n      \u0026#34;default\u0026#34;\n   ],\n   \u0026#34;label\u0026#34;:null,\n   \u0026#34;version\u0026#34;:null,\n   \u0026#34;state\u0026#34;:null,\n   \u0026#34;propertySources\u0026#34;:[\n      {\n         \u0026#34;name\u0026#34;:\u0026#34;vault:myapp\u0026#34;,\n         \u0026#34;source\u0026#34;:{\n            \u0026#34;foo\u0026#34;:\u0026#34;myappsbar\u0026#34;\n         }\n      },\n      {\n         \u0026#34;name\u0026#34;:\u0026#34;vault:application\u0026#34;,\n         \u0026#34;source\u0026#34;:{\n            \u0026#34;baz\u0026#34;:\u0026#34;bam\u0026#34;,\n            \u0026#34;foo\u0026#34;:\u0026#34;bar\u0026#34;\n         }\n      }\n   ]\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e客户端提供必要的认证以让配置服务器与Vault对话的默认方式是设置\u003ccode\u003eX-Config-Token\u003c/code\u003e头。但是，您可以通过设置与\u003ccode\u003eSpring Cloud Vault\u003c/code\u003e相同的配置属性，省略该头文件并在服务器中配置认证。要设置的属性是\u003ccode\u003espring.cloud.config.server.vault.authentication\u003c/code\u003e。它应该被设置为支持的认证方法之一。您可能还需要设置您所使用的认证方法的其他特定属性，方法是使用与\u003ccode\u003espring.cloud.vault\u003c/code\u003e记载的相同的属性名称，但使用\u003ccode\u003espring.cloud.config.server.vault\u003c/code\u003e前缀。请参阅\u003ca href=\"https://cloud.spring.io/spring-cloud-vault/reference/html/#vault.config.authentication\"\u003e《Spring Cloud Vault参考指南》\u003c/a\u003e了解更多细节。\u003c/p\u003e\n\u003cp\u003e如果你省略了\u003ccode\u003eX-Config-Token\u003c/code\u003e头并使用服务器属性来设置验证，配置服务器应用程序需要额外依赖\u003ccode\u003eSpring Vault\u003c/code\u003e来启用额外的验证选项。请参阅\u003ccode\u003eSpring Vault\u003c/code\u003e参考指南，了解如何添加该依赖关系。\u003c/p\u003e\n\u003ch4 id=\"2141-多个属性源\"\u003e2.1.4.1 多个属性源\u003c/h4\u003e\n\u003cp\u003e当使用Vault时，您可以为您的应用程序提供多个属性源。例如，假设你已将数据写入Vault的以下路径：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003esecret/myApp,dev\nsecret/myApp\nsecret/application,dev\nsecret/application\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e写入\u003ccode\u003esecret/application\u003c/code\u003e的属性对使用配置服务器的所有应用程序都是可用的。一个名称为myApp的应用程序将有任何写入\u003ccode\u003esecret/myApp和secret/application\u003c/code\u003e的属性对其可用。当myApp启用\u003ccode\u003edev\u003c/code\u003e \u003ccode\u003eprofile\u003c/code\u003e时，写入上述所有路径的属性对它来说都是可用的，列表中第一个路径中的属性比其他路径优先。\u003c/p\u003e\n\u003ch3 id=\"215-通过代理访问后端\"\u003e2.1.5. 通过代理访问后端\u003c/h3\u003e\n\u003cp\u003e配置服务器可以通过HTTP或HTTPS代理访问Git或Vault的后端。对于 Git 或 Vault 来说，这种行为由 \u003ccode\u003eproxy.http\u003c/code\u003e 和 \u003ccode\u003eproxy.https\u003c/code\u003e 下的设置来控制。这些设置是针对每个仓库的，所以如果你使用的是复合环境仓库，你必须为复合环境中的每个后端单独配置代理设置。如果使用的网络需要为HTTP和HTTPS URLs提供单独的代理服务器，你可以为一个后端同时配置HTTP和HTTPS代理设置。\u003c/p\u003e\n\u003cp\u003e下表描述了HTTP和HTTPS代理的代理配置属性。所有这些属性必须以\u003ccode\u003eproxy.http\u003c/code\u003e或\u003ccode\u003eproxy.https\u003c/code\u003e为前缀。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e表格2：代理配置属性\u003c/strong\u003e\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003e属性名称\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003ehost\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e代理的主机\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003eport\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e用于访问的端口\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003enonProxyHosts\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e配置服务器应该在代理之外访问的任何主机。如果同时为\u003ccode\u003eproxy.http.nonProxyHosts\u003c/code\u003e和\u003ccode\u003eproxy.https.nonProxyHosts\u003c/code\u003e提供了值，将使用\u003ccode\u003eproxy.http\u003c/code\u003e的值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003eusername\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e用来验证代理的用户名。如果\u003ccode\u003eproxy.http.username\u003c/code\u003e和\u003ccode\u003eproxy.https.username\u003c/code\u003e都提供了值，将使用\u003ccode\u003eproxy.http\u003c/code\u003e的值。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003epassword\u003c/strong\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e用来验证代理的密码。如果同时提供\u003ccode\u003eproxy.http.password\u003c/code\u003e和\u003ccode\u003eproxy.https.password\u003c/code\u003e的值，将使用\u003ccode\u003eproxy.http\u003c/code\u003e的值。.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e以下配置使用HTTPS代理访问Git仓库。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/spring-cloud-samples/config-repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eproxy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttps\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emy-proxy.host.io\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyproxypassword\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;3128\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyproxyusername\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003enonProxyHosts\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eexample.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"216-使用所有应用程序共享配置\"\u003e2.1.6. 使用所有应用程序共享配置\u003c/h3\u003e\n\u003cp\u003e所有应用程序之间的共享配置根据您所采取的方法而异，如以下主题中所述：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#spring-cloud-config-server-file-based-repositories\"\u003eFile Based Repositories\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#spring-cloud-config-server-vault-server\"\u003eVault Server\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"2161--基于文件的存储库\"\u003e2.1.6.1.  基于文件的存储库\u003c/h4\u003e\n\u003cp\u003e对于基于文件的（git、svn和本地）仓库，文件名为\u003ccode\u003eapplication\u003c/code\u003e的资源（\u003ccode\u003eapplication.properties\u003c/code\u003e、\u003ccode\u003eapplication.yml\u003c/code\u003e、\u003ccode\u003eapplication-.properties\u003c/code\u003e等）在所有客户端应用程序之间共享。你可以使用这些文件名的资源来配置全局默认值，并在必要时让它们被特定的应用程序文件所覆盖。\u003c/p\u003e\n\u003cp\u003e属性覆盖功能也可用于设置全局默认值，允许占位符应用程序在本地覆盖它们。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用“本机”配置文件（本地文件系统后端），您应该使用不属于服务器自己配置的显式搜索位置。 否则，默认搜索位置中的应用程序资源被删除，因为它们是服务器的一部分。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"2162-vault-服务器\"\u003e2.1.6.2. Vault 服务器\u003c/h4\u003e\n\u003cp\u003e当使用Vault作为后端时，您可以通过将配置放在\u003ccode\u003esecret/application\u003c/code\u003e中与所有应用程序共享配置。例如，如果你运行下面的Vault命令，所有使用配置服务器的应用程序将有属性foo和baz可供他们使用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003evault write secret/application \u003cspan class=\"nv\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ebar \u003cspan class=\"nv\"\u003ebaz\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ebam\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2163-credhub-服务器\"\u003e2.1.6.3. CredHub 服务器\u003c/h4\u003e\n\u003cp\u003e当使用\u003ccode\u003eCredHub\u003c/code\u003e作为后端时，你可以通过将配置放在\u003ccode\u003e/application/\u003c/code\u003e中，或将其放在应用程序的默认配置文件中，与所有应用程序共享配置。例如，如果你运行下面的CredHub命令，所有使用配置服务器的应用程序将有\u003ccode\u003eshared.color1\u003c/code\u003e和\u003ccode\u003eshared.color2\u003c/code\u003e的属性可供他们使用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003ecredhub \u003cspan class=\"nb\"\u003eset\u003c/span\u003e --name \u003cspan class=\"s2\"\u003e\u0026#34;/application/profile/master/shared\u0026#34;\u003c/span\u003e --type\u003cspan class=\"o\"\u003e=\u003c/span\u003ejson\nvalue: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;shared.color1\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;blue\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;shared.color\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;red\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003ecredhub \u003cspan class=\"nb\"\u003eset\u003c/span\u003e --name \u003cspan class=\"s2\"\u003e\u0026#34;/my-app/default/master/more-shared\u0026#34;\u003c/span\u003e --type\u003cspan class=\"o\"\u003e=\u003c/span\u003ejson\nvalue: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;shared.word1\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;shared.word2\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;world\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"217-jdbc-后端\"\u003e2.1.7. JDBC 后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持将JDBC（关系型数据库）作为配置属性的后端。你可以通过在\u003ccode\u003eclasspath\u003c/code\u003e中添加\u003ccode\u003espring-jdbc\u003c/code\u003e并使用jdbc配置文件或添加\u003ccode\u003eJdbcEnvironmentRepository\u003c/code\u003e类型的\u003ccode\u003ebean\u003c/code\u003e来启用该功能。如果你在\u003ccode\u003eclasspath\u003c/code\u003e上包含了正确的依赖关系（详情见用户指南），Spring Boot会配置一个数据源。\u003c/p\u003e\n\u003cp\u003e你可以通过将\u003ccode\u003espring.cloud.config.server.jdbc.enabled\u003c/code\u003e 属性设置为\u003ccode\u003efalse\u003c/code\u003e来禁用 \u003ccode\u003eJdbcEnvironmentRepository\u003c/code\u003e 的自动配置。\u003c/p\u003e\n\u003cp\u003e数据库需要有一个名为\u003ccode\u003ePROPERTIES\u003c/code\u003e的表，其列名为\u003ccode\u003eAPPLICATION\u003c/code\u003e、\u003ccode\u003ePROFILE\u003c/code\u003e和\u003ccode\u003eLABEL\u003c/code\u003e（具有通常的环境含义），另外还有KEY和VALUE，用于属性风格中的键和值对。所有字段都是Java中的String类型，所以你可以把它们变成任何你需要的长度的\u003ccode\u003eVARCHAR\u003c/code\u003e。属性值的行为与它们来自Spring Boot名为\u003ccode\u003e{application}-{profile}.properties\u003c/code\u003e的属性文件的行为相同，包括所有的加密和解密，这将作为后处理步骤应用（也就是说，不直接在版本库实现中应用）。\u003c/p\u003e\n\u003ch3 id=\"218-redis-后端\"\u003e2.1.8. Redis 后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持Redis作为配置属性的后端。你可以通过添加对\u003ccode\u003eSpring Data Redis\u003c/code\u003e的依赖性来启用这一功能。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-data-redis\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下配置使用\u003ccode\u003eSpring Data Redistemplate\u003c/code\u003e来访问Redis。 我们可以使用\u003ccode\u003espring.redis.*\u003c/code\u003e属性覆盖默认连接设置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eredis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eredis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e16379\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该属性应存储为哈希中的字段。 哈希名称应与\u003ccode\u003espring.application.name\u003c/code\u003e属性或\u003ccode\u003espring.application.name\u003c/code\u003e和\u003ccode\u003espring.profiles.active[n]\u003c/code\u003e相同。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003eHMSET sample-app server.port \u003cspan class=\"s2\"\u003e\u0026#34;8100\u0026#34;\u003c/span\u003e sample.topic.name \u003cspan class=\"s2\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e test.property1 \u003cspan class=\"s2\"\u003e\u0026#34;property1\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行以上可见的命令后，哈希应包含带有值的以下键：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eHGETALL sample-app\n{\n  \u0026#34;server.port\u0026#34;: \u0026#34;8100\u0026#34;,\n  \u0026#34;sample.topic.name\u0026#34;: \u0026#34;test\u0026#34;,\n  \u0026#34;test.property1\u0026#34;: \u0026#34;property1\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e当没有指定配置文件时，将使用默认值\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"219-aws-s3-后端\"\u003e2.1.9. AWS S3 后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持\u003ccode\u003eAWS S3\u003c/code\u003e作为配置属性的后端。 您可以通过向Amazon S3添加对AWS Java SDK的依赖性来启用此功能。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003ecom.amazonaws\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003eaws-java-sdk-s3\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下配置使用AWS S3客户端访问配置文件。 我们可以使用\u003ccode\u003espring.aws3.*\u003c/code\u003e属性以选择存储配置的存储桶。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eawss3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eawss3\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eregion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eus-east-1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ebucket\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebucket1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以指定一个AWS URL，用\u003ccode\u003espring.awss3.endpoint\u003c/code\u003e覆盖你的S3服务的标准端点。这允许支持S3的测试区，以及其他S3兼容的存储API。\u003c/p\u003e\n\u003cp\u003e使用\u003ca href=\"https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html\"\u003e默认的AWS凭据\u003c/a\u003e提供程序链找到凭据。 无需进一步配置，支持版本化和加密存储桶。\u003c/p\u003e\n\u003cp\u003e配置文件以\u003ccode\u003e{application}-{profile}.properties\u003c/code\u003e、\u003ccode\u003e{application}-{profile}.yml\u003c/code\u003e或\u003ccode\u003e{application}-{profile}.json\u003c/code\u003e的形式存储在你的桶中。可以提供一个可选的标签来指定文件的目录路径。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当没有指定配置文件时，将使用默认值\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"2110-credhub-后端\"\u003e2.1.10. CredHub 后端\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSpring Cloud Config Server\u003c/code\u003e支持CredHub作为配置属性的后端。你可以通过添加对\u003ccode\u003eSpring CredHub\u003c/code\u003e的依赖性来启用这一功能。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.credhub\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-credhub-starter\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下配置使用相互TLS访问CredHub：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecredhub\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecredhub\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://credhub:8844\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该属性应存储为JSON，例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003ecredhub set --name \u0026#34;/demo-app/default/master/toggles\u0026#34; --type=json\nvalue: {\u0026#34;toggle.button\u0026#34;: \u0026#34;blue\u0026#34;, \u0026#34;toggle.link\u0026#34;: \u0026#34;red\u0026#34;}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003ecredhub \u003cspan class=\"nb\"\u003eset\u003c/span\u003e --name \u003cspan class=\"s2\"\u003e\u0026#34;/demo-app/default/master/abs\u0026#34;\u003c/span\u003e --type\u003cspan class=\"o\"\u003e=\u003c/span\u003ejson\nvalue: \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;marketing.enabled\u0026#34;\u003c/span\u003e: true, \u003cspan class=\"s2\"\u003e\u0026#34;external.enabled\u0026#34;\u003c/span\u003e: false\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所有应用名称为\u003ccode\u003espring.cloud.config.name = demo-app\u003c/code\u003e将具有以下属性：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e{\n    toggle.button: \u0026#34;blue\u0026#34;,\n    toggle.link: \u0026#34;red\u0026#34;,\n    marketing.enabled: true,\n    external.enabled: false\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e当没有指定配置文件时，将使用默认值；当没有指定标签时，将使用主值作为默认值。注意：添加到应用程序的值将被所有应用程序共享。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"21101-oauth-20\"\u003e2.1.10.1 OAuth 2.0\u003c/h4\u003e\n\u003cp\u003e你可以使用\u003ca href=\"https://docs.cloudfoundry.org/concepts/architecture/uaa.html\"\u003eUAA\u003c/a\u003e作为提供程序使用\u003ca href=\"https://oauth.net/2/\"\u003eOAuth 2.0\u003c/a\u003e进行身份验证。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epom.xml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.security\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-security-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.security\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\t\t\u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-security-oauth2-client\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\t\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下配置使用OAuth 2.0和UAA访问CredHub：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecredhub\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecredhub\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://credhub:8844\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eregistration-id\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecredhub-client\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003esecurity\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eregistration\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ecredhub-client\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003euaa\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient-id\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecredhub_config_server\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient-secret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003easecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eauthorization-grant-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eclient_credentials\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eprovider\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euaa\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003etoken-uri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://uaa:8443/oauth/token\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e使用的UAA客户-ID应该有credhub.read作为范围。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"2111-复合环境仓库\"\u003e2.1.11. 复合环境仓库\u003c/h3\u003e\n\u003cp\u003e在某些情况下，你可能希望从多个环境仓库中提取配置数据。要做到这一点，你可以在配置服务器的应用程序属性或YAML文件中启用\u003ccode\u003ecomposite\u003c/code\u003e配置文件。例如，如果你想从一个\u003ccode\u003eSubversion\u003c/code\u003e 仓库以及两个 Git 仓库提取配置数据，你可以为你的配置服务器设置以下属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecomposite\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecomposite\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e-\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esvn\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:///path/to/svn/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e-\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:///path/to/rex/git/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e-\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:///path/to/walter/git/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用这种配置，优先级是由复合键下的仓库排列顺序决定的。在上面的例子中，Subversion 仓库被列在第一位，所以在 Subversion 仓库中发现的值会优先于在某个 Git 仓库中发现的相同属性的值。在\u003ccode\u003erex\u003c/code\u003e Git 仓库中找到的值会在\u003ccode\u003ewalter\u003c/code\u003e Git 仓库中找到的相同属性值之前使用。\u003c/p\u003e\n\u003cp\u003e如果你想只从不同类型的存储库中提取配置数据，你可以在配置服务器的应用程序属性或YAML文件中启用相应的配置文件，而不是\u003ccode\u003ecomposite\u003c/code\u003e配置文件。例如，如果你想从一个Git仓库和一个\u003ccode\u003eHashiCorp Vault\u003c/code\u003e服务器拉取配置数据，你可以为你的配置服务器设置以下属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003egit, vault\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003egit\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efile:///path/to/git/repo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eorder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003evault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e127.0.0.1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8200\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eorder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用这种配置，可以通过\u003ccode\u003eorder\u003c/code\u003e属性来确定优先权。你可以使用\u003ccode\u003eorder\u003c/code\u003e属性来为你的所有存储库指定优先顺序。\u003ccode\u003eorder\u003c/code\u003e属性的数值越低，它的优先级就越高。存储库的优先顺序有助于解决包含相同属性值的存储库之间的任何潜在冲突。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你的复合环境包括一个Vault服务器，就像前面的例子一样，您必须在向配置服务器发出的每个请求中包括一个Vault令牌。参见Vault后台。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e从环境资源库检索数值时，任何类型的失败都会导致整个复合环境的失败。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当使用复合环境时，重要的是所有版本库都包含相同的标签。如果你有一个类似于前面例子中的环境，你请求带有master标签的配置数据，但Subversion版本库不包含一个叫做master的分支，整个请求就会失败。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"21111自定义复合环境存储库\"\u003e2.1.11.1.自定义复合环境存储库\u003c/h4\u003e\n\u003cp\u003e除了使用Spring Cloud的一个环境库外，你还可以提供你自己的\u003ccode\u003eEnvironmentRepository Bean\u003c/code\u003e，作为复合环境的一部分。要做到这一点，你的\u003ccode\u003eBean\u003c/code\u003e必须实现\u003ccode\u003eEnvironmentRepository\u003c/code\u003e接口。如果你想在复合环境中控制你的自定义\u003ccode\u003eEnvironmentRepository\u003c/code\u003e的优先级，你也应该实现\u003ccode\u003eOrdered\u003c/code\u003e接口并重写\u003ccode\u003egetOrdered\u003c/code\u003e方法。如果你不实现\u003ccode\u003eOrdered\u003c/code\u003e接口，你的\u003ccode\u003eEnvironmentRepository\u003c/code\u003e将被赋予最低的优先级。\u003c/p\u003e\n\u003ch3 id=\"2112-属性覆盖\"\u003e2.1.12. 属性覆盖\u003c/h3\u003e\n\u003cp\u003e配置服务器有一个 \u0026ldquo;overrides \u0026ldquo;功能，可以让操作员为所有应用程序提供配置属性。被覆盖的属性不能被应用程序用正常的Spring Boot钩子方法改变。要声明覆盖，请向 \u003ccode\u003espring.cloud.config.server.overrides\u003c/code\u003e 添加一个\u003ccode\u003ekey-value\u003c/code\u003e对的映射，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eoverrides\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebar\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面的示例会导致配置客户端的所有应用程序读取foo = bar，与自己的配置无关。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e配置系统不能强制应用程序以任何特定方式使用配置数据。因此，覆盖是不可执行的。然而，它们确实为Spring Cloud Config客户端提供了有用的默认行为。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e通常情况下，带有\u003ccode\u003e${}\u003c/code\u003e的Spring环境占位符可以通过使用反斜杠\u003ccode\u003e（\\）\u003c/code\u003e来转义\u003ccode\u003e$\u003c/code\u003e或{来转义\u003ccode\u003e（\u003c/code\u003e。并在客户端解析）。例如，\u003ccode\u003e\\${app.foo:bar}\u003c/code\u003e会解析为\u003ccode\u003ebar\u003c/code\u003e，除非应用程序提供了自己的\u003ccode\u003eapp.foo\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在YAML中，你不需要转义反斜杠本身。然而，在属性文件中，当你在服务器上配置重写时，你确实需要转义反斜杠。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你可以通过在远程资源库中设置 \u003ccode\u003espring.cloud.config.overrideNone=true \u003c/code\u003e标志（默认为 false）来改变客户端中所有覆盖的优先级，使其更像默认值，让应用程序在环境变量或系统属性中提供自己的值。\u003c/p\u003e\n\u003ch3 id=\"22-健康指示器\"\u003e2.2. 健康指示器\u003c/h3\u003e\n\u003cp\u003e配置服务器带有一个健康指示器，用于检查配置的 \u003ccode\u003eEnvironmentRepository\u003c/code\u003e 是否在工作。默认情况下，它要求\u003ccode\u003eEnvironmentRepository\u003c/code\u003e提供一个名为\u003ccode\u003eapp\u003c/code\u003e的应用程序、\u003ccode\u003edefault\u003c/code\u003e配置文件和\u003ccode\u003eEnvironmentRepository\u003c/code\u003e实现提供的默认标签。\u003c/p\u003e\n\u003cp\u003e你可以配置健康指标，以检查更多的应用程序以及自定义配置文件和自定义标签，如以下例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003erepositories\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emyservice\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003elabel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emylabel\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emyservice-dev\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyservice\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edevelopment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过设置\u003ccode\u003eManagement.Health.config.enabled = false\u003c/code\u003e来禁用健康指示符。\u003c/p\u003e\n\u003ch3 id=\"23-security\"\u003e2.3. Security\u003c/h3\u003e\n\u003cp\u003e你可以用任何对你有意义的方式来保护你的配置服务器（从物理网络安全到OAuth2令牌），因为\u003ccode\u003eSpring Security\u003c/code\u003e和\u003ccode\u003eSpring Boot\u003c/code\u003e提供对许多安全安排的支持。\u003c/p\u003e\n\u003cp\u003e要使用默认的Spring Boot配置的\u003ccode\u003eHTTP Basic\u003c/code\u003e安全，请在\u003ccode\u003eclasspath\u003c/code\u003e上包含\u003ccode\u003eSpring Security\u003c/code\u003e（例如，通过\u003ccode\u003espring-boot-starter-security\u003c/code\u003e）。默认的用户名是\u003ccode\u003euser\u003c/code\u003e，密码是随机生成的。随机密码在实践中没有用，所以我们建议你配置密码（通过设置\u003ccode\u003espring.security.user.password\u003c/code\u003e），并对其进行加密（关于如何做到这一点，见下文的说明）。\u003c/p\u003e\n\u003ch3 id=\"24-加密和解密\"\u003e2.4. 加密和解密\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e为了使用加密和解密功能，你需要在你的JVM中安装全部的JCE（默认情况下不包括）。你可以从\u003ccode\u003eOracle \u003c/code\u003e公司下载 \u0026ldquo;Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files\u0026rdquo;，并遵循安装说明（基本上，你需要用你下载的文件替换\u003ccode\u003eJRE lib/security\u003c/code\u003e目录中的两个策略文件）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果远程属性源包含加密的内容（以\u003ccode\u003e{cipher}\u003c/code\u003e开头的值），它们在通过HTTP发送给客户端之前会被解密。这种设置的主要优点是，当属性值处于 \u0026ldquo;静止状态 \u0026ldquo;时（例如，在git仓库中），它们不需要是纯文本。如果一个值不能被解密，它就会被从属性源中删除，并添加一个额外的属性，其密钥相同，但前缀为\u003ccode\u003einvalid\u003c/code\u003e和一个表示 \u0026ldquo;not applicable \u0026ldquo;的值（通常是\u0026lt;n/a\u0026gt;）。这主要是为了防止密码文本被用作密码而意外地泄露出去。\u003c/p\u003e\n\u003cp\u003e如果你为配置客户端应用程序设置了一个远程配置仓库，它可能包含一个类似于下面的\u003ccode\u003eapplication.yml\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003edatasource\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edbuser\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;{cipher}FKSAJDFGYOS8F7GLHAKERGFHLSAJ\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eapplication.properties\u003c/code\u003e文件中的加密值不能用引号包裹。否则，该值将不会被解密。下面的例子显示了可以工作的值。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.datasource.username: dbuser\nspring.datasource.password: {cipher}FKSAJDFGYOS8F7GLHAKERGFHLSAJ\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以安全地把这个纯文本推送到共享的git仓库，而秘密密码仍然受到保护。\u003c/p\u003e\n\u003cp\u003e服务器还公开了\u003ccode\u003e/encrypt\u003c/code\u003e和\u003ccode\u003e/decrypt\u003c/code\u003e端点（假设这些端点是安全的，只有授权的代理才能访问）。如果你编辑一个远程配置文件，你可以使用配置服务器通过POST到\u003ccode\u003e/encrypt\u003c/code\u003e端点来加密数值，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ curl localhost:8888/encrypt -s -d mysecret\n682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果你用curl测试，那么使用\u003ccode\u003e--data-urlencode\u003c/code\u003e（而不是-d），并在要加密的值前加上\u003ccode\u003e=\u003c/code\u003e（curl需要这样做），或者设置一个明确的\u003ccode\u003eContent-Type: text/plain\u003c/code\u003e，以确保curl在有特殊字符（'+\u0026lsquo;特别棘手）时能正确编码数据。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e要确保在加密的值中不包括任何curl命令的统计信息，这就是为什么例子中使用-s选项来沉默它们。将数值输出到文件中可以帮助避免这个问题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e解密操作也可以通过/decrypt进行（前提是服务器配置了对称密钥或全密钥对），如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ curl localhost:8888/decrypt -s -d 682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\nmysecret\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在你把它放在YAML或属性文件中，以及在你提交和推送到远程（可能是不安全的）商店之前，采取加密的值并添加\u003ccode\u003e{cipher}\u003c/code\u003e前缀。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e/encrypt\u003c/code\u003e和\u003ccode\u003e/decrypt\u003c/code\u003e端点也都接受\u003ccode\u003e/*/{application}/{profiles}\u003c/code\u003e形式的路径，当客户端调用主环境资源时，可用于在每个应用（名称）和每个文件的基础上控制密码。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e为了以这种精细的方式控制加密，你还必须提供一个\u003ccode\u003eTextEncryptorLocator\u003c/code\u003e类型的\u003ccode\u003e@Bean\u003c/code\u003e，它可以为每个名字和配置文件创建一个不同的加密器。默认提供的那个没有这样做（所有的加密都使用同一个密钥）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ccode\u003espring\u003c/code\u003e命令行客户端（安装了\u003ccode\u003eSpring Cloud CLI\u003c/code\u003e扩展）也可以用来加密和解密，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ spring encrypt mysecret --key foo\n682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\n$ spring decrypt --key foo 682bc583f4641835fa2db009355293665d2647dade3375c0ee201de2a49f7bda\nmysecret\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要使用文件中的密钥（如用于加密的RSA公钥），在密钥值前加上\u0026rdquo;@\u0026quot;，并提供文件路径，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ spring encrypt mysecret --key @\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/.ssh/id_rsa.pub\nAQAjPgt3eFZQXwt8tsHAVv/QHiY5sI2dRcR+...\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003e--key\u003c/code\u003e参数是强制性的（尽管有一个\u003ccode\u003e--\u003c/code\u003e前缀）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"25-key管理\"\u003e2.5. Key管理\u003c/h3\u003e\n\u003cp\u003e配置服务器可以使用对称（共享）密钥或非对称密钥（RSA密钥对）。非对称的选择在安全性方面更胜一筹，但使用对称密钥通常更方便，因为它是在\u003ccode\u003ebootstrap.properties\u003c/code\u003e中配置的单一属性值。\u003c/p\u003e\n\u003cp\u003e要配置对称密钥，你需要将\u003ccode\u003eencrypt.key\u003c/code\u003e设置为一个秘密的String（或者使用\u003ccode\u003eENCRYPT_KEY\u003c/code\u003e环境变量来防止它进入纯文本配置文件）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你不能使用encrypt.key配置非对称密钥。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要配置非对称钥匙，请使用钥匙库（例如，由 JDK 附带的 keytool 工具创建）。密钥库的属性是 \u003ccode\u003eencrypt.keyStore.*\u003c/code\u003e，\u003ccode\u003e*\u003c/code\u003e可选以下属性:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:center\"\u003e属性\u003c/th\u003e\n\u003cth style=\"text-align:center\"\u003e描述\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e\u003ccode\u003eencrypt.keyStore.location\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e包含一个资源位置\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e\u003ccode\u003eencrypt.keyStore.password\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e解锁钥匙库的密码\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e\u003ccode\u003eencrypt.keyStore.alias\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e确定要使用商店中的哪个键\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e\u003ccode\u003eencrypt.keyStore.type\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e要创建的KeyStore的类型。默认为\u003ccode\u003ejks\u003c/code\u003e。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e加密是用公钥完成的，而解密则需要私钥。因此，原则上，如果你只想加密（并准备在本地用私钥解密），你可以只在服务器上配置公钥。在实践中，你可能不想在本地进行解密，因为它将密钥管理过程分散到所有的客户端，而不是集中在服务器上。另一方面，如果你的配置服务器相对不安全，而且只有少数客户需要加密的属性，这可能是一个有用的选择。\u003c/p\u003e\n\u003ch3 id=\"26-创建用于测试的key-store\"\u003e2.6. 创建用于测试的Key Store\u003c/h3\u003e\n\u003cp\u003e要创建用于测试的密钥库，可以使用类似于以下内容的命令：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e$ keytool -genkeypair -alias mytestkey -keyalg RSA \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e  -dname \u003cspan class=\"s2\"\u003e\u0026#34;CN=Web Server,OU=Unit,O=Organization,L=City,S=State,C=US\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e  -keypass changeme -keystore server.jks -storepass letmein\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当使用JDK 11或以上版本时，你在使用上述命令时可能会得到以下警告。在这种情况下，你可能要确保keypass和storepass的值一致。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003eWarning:  Different store and key passwords not supported \u003cspan class=\"k\"\u003efor\u003c/span\u003e PKCS12 KeyStores. Ignoring user-specified -keypass value.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把\u003ccode\u003eserver.jks\u003c/code\u003e文件放在\u003ccode\u003eclasspath\u003c/code\u003e中（例如），然后，在你的\u003ccode\u003ebootstrap.yml\u003c/code\u003e中，为配置服务器创建以下设置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eencrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ekeyStore\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003elocation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eclasspath:/server.jks\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eletmein\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ealias\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emytestkey\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esecret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003echangeme\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"27使用多个key-和-轮换-key\"\u003e2.7.使用多个Key 和 轮换 key\u003c/h3\u003e\n\u003cp\u003e除了加密属性值中的\u003ccode\u003e{cipher}\u003c/code\u003e前缀外，配置服务器在（Base64编码的）密码文本开始前寻找零个或多个\u003ccode\u003e{name:value}\u003c/code\u003e前缀。密钥被传递给\u003ccode\u003eTextEncryptorLocator\u003c/code\u003e，它可以做任何需要的逻辑来为密码定位一个\u003ccode\u003eTextEncryptor\u003c/code\u003e。如果你已经配置了一个钥匙库\u003ccode\u003e（encrypt.keystore.location\u003c/code\u003e），默认的定位器会寻找带有由钥匙前缀提供的别名的钥匙，其密码文本类似于以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ebar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e`{cipher}{key:testkey}...`\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该定位器寻找一个名为 \u0026ldquo;testkey \u0026ldquo;的密钥。也可以通过在前缀中使用\u003ccode\u003e{secret:...}\u003c/code\u003e值来提供一个秘密。然而，如果没有提供，默认情况下是使用钥匙库密码（当你建立一个钥匙库而没有指定一个秘密时，你会得到这样的密码）。如果你提供了一个秘密，你也应该用一个自定义的\u003ccode\u003eSecretLocator\u003c/code\u003e来加密这个秘密。\u003c/p\u003e\n\u003cp\u003e当钥匙只被用来加密几个字节的配置数据时（也就是说，它们没有被用在其他地方），从密码学的角度来看，钥匙的轮换几乎没有必要。然而，你可能偶尔需要改变密钥（例如，在安全漏洞的情况下）。在这种情况下，所有的客户端都需要改变他们的源配置文件（例如，在git中），并在所有密码中使用新的\u003ccode\u003e{key:...}\u003c/code\u003e前缀。请注意，客户需要首先检查配置服务器密钥库中的密钥别名是否可用。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你想让配置服务器处理所有的加密以及解密，\u003ccode\u003e{name:value}\u003c/code\u003e前缀也可以作为纯文本添加到\u003ccode\u003e/encrypt\u003c/code\u003e端点上。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"28-服务加密属性\"\u003e2.8. 服务加密属性\u003c/h3\u003e\n\u003cp\u003e有时你想让客户端在本地解密配置，而不是在服务器中进行解密。在这种情况下，如果你提供 \u003ccode\u003eencrypt.* \u003c/code\u003e配置来定位一个密钥，你仍然可以有\u003ccode\u003e /encrypt\u003c/code\u003e 和 \u003ccode\u003e/decrypt\u003c/code\u003e 端点，但你需要通过在 \u003ccode\u003ebootstrap.[yml|properties] \u003c/code\u003e中放置 \u003ccode\u003espring.cloud.config.server.encrypt.enabled=false\u003c/code\u003e 明确地关闭对出站属性的解密。如果你不关心端点，如果你不配置密钥或启用的标志，它应该可以工作。\u003c/p\u003e\n\u003ch2 id=\"3-提供其他形式的服务\"\u003e3. 提供其他形式的服务\u003c/h2\u003e\n\u003cp\u003e来自\u003ccode\u003eenvironment \u003c/code\u003e端点的默认JSON格式非常适合Spring应用程序使用，因为它直接映射到\u003ccode\u003eenvironment \u003c/code\u003e抽象。如果你愿意，你可以通过在资源路径中添加一个后缀（\u0026quot;.yml\u0026rdquo;、\u0026quot;.yaml \u0026ldquo;或\u0026rdquo;.properties\u0026rdquo;）来消费YAML或Java属性的相同数据。这对于那些不关心JSON端点的结构或其提供的额外元数据的应用程序的消费是非常有用的（例如，不使用Spring的应用程序可能会从这种方法的简单性中受益）。\u003c/p\u003e\n\u003cp\u003eYAML 和属性表示法有一个额外的标志（以\u003ccode\u003eboolean \u003c/code\u003e查询参数的形式提供，称为 \u003ccode\u003eresolvePlaceholders\u003c/code\u003e），表示源文档中的占位符（以标准的\u003ccode\u003eSpring ${...}\u003c/code\u003e形式）应该在渲染之前在输出中被解析，可能的话。对于不了解Spring占位符约定的消费者来说，这是一个有用的功能。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用YAML或属性格式有一些限制，主要是与元数据的损失有关。例如JSON的结构是一个有序的属性源列表，其名称与源相关。YAML和属性形式被凝聚成一张图，即使值的来源有多个，原始源文件的名称也会丢失。另外，YAML表示法也不一定是支持仓库中YAML源的可靠表示。它是由平面属性源的列表构建的，必须对键的形式做出假设。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"4-服务于纯文本\"\u003e4. 服务于纯文本\u003c/h2\u003e\n\u003cp\u003e你的应用程序可能需要为其环境量身定制的通用纯文本配置文件，而不是使用环境抽象（或YAML或properties格式中的一种替代表示）。配置服务器通过\u003ccode\u003e/{application}/{profile}/{label}/{path}\u003c/code\u003e的额外端点提供这些文件，其中\u003ccode\u003eapplication\u003c/code\u003e、\u003ccode\u003eprofile\u003c/code\u003e和\u003ccode\u003elabel\u003c/code\u003e的含义与常规环境端点相同，但path是一个文件名的路径（如\u003ccode\u003elog.xml\u003c/code\u003e）。这个端点的源文件的位置与环境端点的相同。属性和YAML文件也使用同样的搜索路径。然而，不是聚合所有匹配的资源，而是只返回第一个匹配的资源。\u003c/p\u003e\n\u003cp\u003e找到资源后，正常格式的占位符（\u003ccode\u003e${...}\u003c/code\u003e）通过使用提供的应用程序名称、配置文件和标签的有效环境来解决。通过这种方式，资源端点与环境端点紧密结合。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e与环境配置的源文件一样，配置文件被用来解决文件名。因此，如果你想要一个特定的配置文件，\u003ccode\u003e/*/development/*/logback.xml\u003c/code\u003e可以被一个叫做\u003ccode\u003elogback-development.xml\u003c/code\u003e的文件解决（优先于logback.xml）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你不想提供标签而让服务器使用默认标签，你可以提供一个\u003ccode\u003euseDefaultLabel\u003c/code\u003e请求参数。因此，前面的默认配置文件的例子可以是\u003ccode\u003e/sample/default/nginx.conf?useDefaultLabel\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e目前，Spring Cloud Config可以为git、SVN、本地后端和AWS S3提供纯文本。对git、SVN和本地后端的支持是相同的。AWS S3的工作方式有些不同。下面的章节展示了每一种的工作方式。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#spring-cloud-config-serving-plain-text-git-svn-native-backends\"\u003eGit, SVN, and Native Backends\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#spring-cloud-config-serving-plain-text-aws-s3\"\u003eAWS S3\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"41-gitsvn和native-后端\"\u003e4.1. GIT,SVN和Native 后端\u003c/h3\u003e\n\u003cp\u003eGit或SVN存储库或Native后端的以下示例：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eapplication.yml\nnginx.conf\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003enginx.conf\u003c/code\u003e类似于以下列表：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eserver {\n    listen              80;\n    server_name         ${nginx.server.name};\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eapplication.yml\u003c/code\u003e类似于以下列表：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003enginx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eexample.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edevelopment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003enginx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edevelop.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e/sample/default/master/nginx.conf\u003c/code\u003e资源类似如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eserver {\n    listen              80;\n    server_name         example.com;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e/sample/development/master/nginx.conf\u003c/code\u003e 类似如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eserver {\n    listen              80;\n    server_name         develop.com;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"42-aws-s3\"\u003e4.2. AWS S3\u003c/h3\u003e\n\u003cp\u003e要为AWS s3提供纯文本服务，配置服务器应用程序需要包括一个对Spring Cloud AWS的依赖。关于如何设置该依赖关系的详细信息，请参见《Spring Cloud AWS参考指南》。然后你需要配置Spring Cloud AWS，如《Spring Cloud AWS参考指南》中所述。\u003c/p\u003e\n\u003ch3 id=\"43-解密文本\"\u003e4.3. 解密文本\u003c/h3\u003e\n\u003cp\u003e默认情况下，纯文本文件中的加密值不会被解密。为了启用纯文本文件的解密，请在 bootstrap 中设置 \u003ccode\u003espring.cloud.config.server.encrypt.enabled=true\u003c/code\u003e 和 \u003ccode\u003espring.cloud.config.server.encrypt.plainTextEncrypt=true[yml|properties]\u003c/code\u003e 。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e解密纯文本文件只支持YAML、JSON和属性文件扩展名。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果该功能被启用，并且请求一个不支持的文件扩展，文件中的任何加密值将不会被解密。\u003c/p\u003e\n\u003ch2 id=\"5-嵌入配置服务器\"\u003e5. 嵌入配置服务器\u003c/h2\u003e\n\u003cp\u003e配置服务器最好作为一个独立的应用程序运行。然而，如果需要的话，你可以把它嵌入到另一个应用程序中。要做到这一点，请使用\u003ccode\u003e@EnableConfigServer\u003c/code\u003e注解。在这种情况下，一个名为\u003ccode\u003espring.cloud.config.server.bootstrap\u003c/code\u003e的可选属性会很有用。它是一个标志，表示服务器是否应该从自己的远程资源库配置自己。默认情况下，该标志是关闭的，因为它可能延迟启动。然而，当嵌入到另一个应用程序中时，以与其他应用程序相同的方式初始化是有意义的。当设置\u003ccode\u003e spring.cloud.config.server.bootstrap\u003c/code\u003e 为 true 时，你还必须使用复合环境资源库配置。例如\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfigserver\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eactive\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecomposite\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecomposite\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enative\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003esearch-locations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${HOME}/Desktop/config\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ebootstrap\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e​\t如果你使用 bootstrap 标志，配置服务器需要在\u003ccode\u003ebootstrap.yml\u003c/code\u003e 中配置其名称和版本库 URI。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要改变服务器端点的位置，你可以（选择性地）设置\u003ccode\u003espring.cloud.config.server.prefix\u003c/code\u003e（例如\u003ccode\u003e/config\u003c/code\u003e），以在一个前缀下提供资源。该前缀应以\u003ccode\u003e/\u003c/code\u003e开头，但不以\u003ccode\u003e/\u003c/code\u003e结尾。它被应用于配置服务器中的\u003ccode\u003e@RequestMappings\u003c/code\u003e（即在\u003ccode\u003eSpring Boot server.servletPath\u003c/code\u003e和\u003ccode\u003eserver.contextPath\u003c/code\u003e的前缀之下）。\u003c/p\u003e\n\u003cp\u003e如果你想直接从后端资源库（而不是从配置服务器）读取应用程序的配置，你基本上想要一个没有端点的嵌入式配置服务器。你可以通过不使用\u003ccode\u003e@EnableConfigServer\u003c/code\u003e注解（设置\u003ccode\u003espring.cloud.config.server.bootstrap=true\u003c/code\u003e）完全关闭端点。\u003c/p\u003e\n\u003ch2 id=\"6-推送通知和spring-cloud-bus\"\u003e6. 推送通知和Spring Cloud Bus\u003c/h2\u003e\n\u003cp\u003e许多源代码库提供商（如Github、Gitlab、Gitea、Gitee、Gogs或Bitbucket）通过webhook通知你库中的变化。你可以通过供应商的用户界面将\u003ccode\u003ewebhook\u003c/code\u003e配置为一个URL和一组你感兴趣的事件。例如，Github使用POST向webhook发送一个包含提交列表的JSON主体和一个设置为\u003ccode\u003epush\u003c/code\u003e的头（\u003ccode\u003eX-Github-Event\u003c/code\u003e）。如果你添加了对\u003ccode\u003espring-cloud-config-monitor\u003c/code\u003e库的依赖，并在你的配置服务器中激活了\u003ccode\u003eSpring Cloud Bus\u003c/code\u003e，那么就会启用一个\u003ccode\u003e/monitor\u003c/code\u003e端点。\u003c/p\u003e\n\u003cp\u003e当\u003ccode\u003ewebhook\u003c/code\u003e被激活时，配置服务器会向它认为可能发生变化的应用程序发送一个\u003ccode\u003eRefreshRemoteApplicationEvent\u003c/code\u003e。变化检测可以是战略性的。然而，默认情况下，它寻找与应用程序名称相匹配的文件中的变化（例如\u003ccode\u003efoo.properties\u003c/code\u003e是针对\u003ccode\u003efoo\u003c/code\u003e应用程序的，而\u003ccode\u003eapplication.properties\u003c/code\u003e是针对所有应用程序的）。当你想覆盖该行为时，要使用的策略是\u003ccode\u003ePropertyPathNotificationExtractor\u003c/code\u003e，它接受请求头和正文作为参数，并返回一个变化的文件路径列表。\u003c/p\u003e\n\u003cp\u003e默认配置可以在Github、Gitlab、Gitea、Gitee、Gogs或Bitbucket中使用。除了来自Github、Gitlab、Gitee或Bitbucket的JSON通知外，你还可以通过向\u003ccode\u003e/monitor\u003c/code\u003e发送带有表单编码的主体参数的\u003ccode\u003epath={application}\u003c/code\u003e模式来触发变更通知。这样做是为了向与\u003ccode\u003e{application}\u003c/code\u003e模式相匹配的应用程序进行广播（可以包含通配符）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e只有当配置服务器和客户端应用程序中的\u003ccode\u003espring-cloud-bus\u003c/code\u003e都被激活时，才会传输\u003ccode\u003eRefreshRemoteApplicationEven\u003c/code\u003et。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e默认配置也会检测本地git仓库的文件系统变化。在这种情况下，不使用webhook。然而，只要你编辑一个配置文件，就会有一个刷新广播。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"7-spring-cloud-config-client\"\u003e7. Spring Cloud Config Client\u003c/h2\u003e\n\u003cp\u003eSpring Boot应用程序可以立即利用Spring配置服务器（或由应用程序开发人员提供的其他外部属性源）。它还可以获得一些与环境变化事件有关的额外的有用功能。\u003c/p\u003e\n\u003ch3 id=\"71-spring-boot-config-数据导入\"\u003e7.1. Spring Boot Config 数据导入\u003c/h3\u003e\n\u003cp\u003eSpring Boot 2.4引入了一种通过·spring.config.import·属性导入配置数据的新方法。现在这是与配置服务器绑定的默认方式。\u003c/p\u003e\n\u003cp\u003e要选择连接到配置服务器，请在application.properties中设置以下内容：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=optional:configserver:\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在 \u0026ldquo;http://localhost:8888 \u0026ldquo;的默认位置连接到配置服务器。删除可选的: 前缀将导致配置客户端在无法连接到配置服务器时失败。要改变配置服务器的位置，可以设置\u003ccode\u003espring.cloud.config.uri\u003c/code\u003e或在\u003ccode\u003espring.config.import\u003c/code\u003e语句中添加url，如\u003ccode\u003espring.config.import=optional:configserver:http://myhost:8888\u003c/code\u003e。import属性中的位置优先于uri属性。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e通过\u003ccode\u003espring.config.import\u003c/code\u003e导入的Spring Boot配置数据方法不需要一个引导文件（properties或yaml）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"72-配置首个bootstrap\"\u003e7.2. 配置首个BootStrap\u003c/h3\u003e\n\u003cp\u003e要使用传统的引导方式连接到配置服务器，必须通过一个属性或 \u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e 启动器启用引导。该属性是\u003ccode\u003e spring.cloud.bootstrap.enabled=true\u003c/code\u003e。它必须被设置为系统属性或环境变量。一旦启用\u003ccode\u003ebootstrap\u003c/code\u003e，\u003ccode\u003eclasspath\u003c/code\u003e上有\u003ccode\u003eSpring Cloud Config Client\u003c/code\u003e的任何应用程序将按如下方式连接到配置服务器。当配置客户端启动时，它会绑定到配置服务器（通过\u003ccode\u003espring.cloud.config.uri bootstrap\u003c/code\u003e配置属性）并使用远程属性源初始化Spring环境。\u003c/p\u003e\n\u003cp\u003e这种行为的结果是，所有想要使用配置服务器的客户端应用程序都需要一个\u003ccode\u003ebootstrap.yml\u003c/code\u003e（或一个环境变量），并在\u003ccode\u003espring.cloud.config.uri \u003c/code\u003e中设置服务器地址（它默认为 \u0026ldquo;http://localhost:8888\u0026rdquo;）。\u003c/p\u003e\n\u003ch4 id=\"721-discovery-查找首个\"\u003e7.2.1 Discovery 查找首个\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003cp\u003e除非你使用\u003ccode\u003econfig first bootstrap\u003c/code\u003e，否则你需要在配置属性中设置\u003ccode\u003espring.config.import\u003c/code\u003e属性。例如，\u003ccode\u003espring.config.import=optional:configserver:\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e实现，如Spring Cloud Netflix和Eureka Service Discovery或Spring Cloud Consul，你可以让配置服务器向发现服务注册。\u003c/p\u003e\n\u003cp\u003e如果你喜欢使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e来定位配置服务器，你可以通过设置\u003ccode\u003espring.cloud.config.discovery.enabled=true\u003c/code\u003e（默认是false）来实现。例如，使用\u003ccode\u003eSpring Cloud Netflix\u003c/code\u003e，你需要定义Eureka服务器地址（例如，在\u003ccode\u003eeureka.client.serviceUrl.defaultZone\u003c/code\u003e中）。使用这个选项的代价是在启动时要进行额外的网络往返，以定位服务注册。其好处是，只要发现服务是一个固定点，配置服务器就可以改变其坐标。默认的服务ID是\u003ccode\u003econfigserver\u003c/code\u003e，但你可以在客户端通过设置\u003ccode\u003espring.cloud.config.discovery.serviceId\u003c/code\u003e来改变它（在服务器上，以服务的通常方式，如设置\u003ccode\u003espring.application.name\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e发现客户端的实现都支持某种\u003ccode\u003emetadata map\u003c/code\u003e（例如，我们有\u003ccode\u003eEureka.instance.metadataMap\u003c/code\u003e用于\u003ccode\u003eEureka\u003c/code\u003e）。配置服务器的一些额外属性可能需要在其服务注册元数据中进行配置，以便客户端能够正确连接。如果配置服务器用\u003ccode\u003eHTTP Basic\u003c/code\u003e来保证安全，你可以将凭证配置为\u003ccode\u003euser\u003c/code\u003e和\u003ccode\u003epassword\u003c/code\u003e。另外，如果配置服务器有一个上下文路径，你可以设置\u003ccode\u003econfigPath\u003c/code\u003e。例如，下面的YAML文件是针对作为Eureka客户端的配置服务器的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"l\"\u003e...\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadataMap\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eosufhalskjrtl\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elviuhlszvaorhvlo5847\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfigPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/config\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"722-使用eureka和webclient的第一次bootstrap-discovery\"\u003e7.2.2. 使用Eureka和WebClient的第一次Bootstrap Discovery\u003c/h4\u003e\n\u003cp\u003e如果你使用\u003ccode\u003eSpring Cloud Netflix\u003c/code\u003e的\u003ccode\u003eEureka DiscoveryClient\u003c/code\u003e，并且想使用\u003ccode\u003eWebClient\u003c/code\u003e而不是\u003ccode\u003eJersey\u003c/code\u003e或\u003ccode\u003eRestTemplate\u003c/code\u003e，你需要在\u003ccode\u003eclasspath\u003c/code\u003e上包含\u003ccode\u003eWebClient\u003c/code\u003e，并设置\u003ccode\u003eeureka.client.webclient.enabled=true\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"73-配置客户端快速失效\"\u003e7.3. 配置客户端快速失效\u003c/h3\u003e\n\u003cp\u003e在某些情况下，如果服务不能连接到配置服务器，你可能想让它启动失败。如果这是需要的行为，请设置\u003ccode\u003ebootstrap\u003c/code\u003e配置属性\u003ccode\u003espring.cloud.config.fail-fast=true\u003c/code\u003e，使客户端以异常停止。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e要使用\u003ccode\u003espring.config.import\u003c/code\u003e获得类似的功能，只需省略\u003ccode\u003eoptional: \u003c/code\u003e前缀。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"74-配置客户端重试\"\u003e7.4. 配置客户端重试\u003c/h3\u003e\n\u003cp\u003e如果你预计配置服务器在你的应用程序启动时可能偶尔不可用，你可以让它在失败后继续尝试。首先，你需要设置 \u003ccode\u003espring.cloud.config.fail-fast=true\u003c/code\u003e。然后你需要将 \u003ccode\u003espring-retry\u003c/code\u003e 和 \u003ccode\u003espring-boot-starter-aop\u003c/code\u003e 添加到你的 \u003ccode\u003eclasspath\u003c/code\u003e。默认行为是重试六次，初始回退间隔为1000ms，后续回退的指数乘数为\u003ccode\u003e1.1\u003c/code\u003e。你可以通过设置 \u003ccode\u003espring.cloud.config.retry.* \u003c/code\u003e配置属性来配置这些属性（以及其他属性）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e要想完全控制重试行为，并且使用传统的\u003ccode\u003ebootstrap\u003c/code\u003e，请添加一个\u003ccode\u003eRetryOperationsInterceptor\u003c/code\u003e类型的\u003ccode\u003e@Bean\u003c/code\u003e，ID为\u003ccode\u003econfigServerRetryInterceptor\u003c/code\u003e。\u003ccode\u003eSpring Retry\u003c/code\u003e有一个\u003ccode\u003eRetryInterceptorBuilder\u003c/code\u003e，支持创建一个。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"75-用springconfigimport配置客户端重试\"\u003e7.5. 用spring.config.import配置客户端重试\u003c/h3\u003e\n\u003cp\u003e重试在\u003ccode\u003eSpring Boot的spring.config.import\u003c/code\u003e语句中起作用，正常的属性也起作用。但是，如果导入语句是在配置文件中，比如\u003ccode\u003eapplication-prod.properties\u003c/code\u003e，那么你需要用不同的方式来配置重试。配置需要作为url参数放在导入语句中。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication-prod.properties\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=configserver:http://configserver.example.com?fail-fast=true\u0026amp;max-attempts=10\u0026amp;max-interval=1500\u0026amp;multiplier=1.2\u0026amp;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将设置 \u003ccode\u003espring.cloud.config.fail-fast=true\u003c/code\u003e（注意上面缺少前缀）和所有可用的 \u003ccode\u003espring.cloud.config.retry.*\u003c/code\u003e 配置属性。\u003c/p\u003e\n\u003ch3 id=\"76-定位远程配置资源\"\u003e7.6. 定位远程配置资源\u003c/h3\u003e\n\u003cp\u003e配置服务为来自\u003ccode\u003e/{application}/{profile}/{label}\u003c/code\u003e的属性源提供服务，其中客户端应用程序的默认绑定如下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;application\u0026rdquo; = \u003ccode\u003e${spring.application.name}\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;profile\u0026rdquo; = \u003ccode\u003e${spring.profiles.active}\u003c/code\u003e (actually \u003ccode\u003eEnvironment.getActiveProfiles()\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;label\u0026rdquo; = \u0026ldquo;master\u0026rdquo;\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e​\t当设置属性\u003ccode\u003e${spring.application.name}\u003c/code\u003e时，不要在你的应用程序名称前加上保留词\u003ccode\u003eapplication-\u003c/code\u003e，以防止在解决正确的属性源时出现问题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你可以通过设置\u003ccode\u003espring.cloud.config\u003c/code\u003e.\u003cem\u003e（其中\u003c/em\u003e是名称、配置文件或标签）来覆盖所有的配置。标签对于回滚到以前版本的配置非常有用。在默认的配置服务器实现中，它可以是一个git标签、分支名称或提交ID。标签也可以以逗号分隔的列表形式提供。在这种情况下，列表中的项目会被逐一尝试，直到有一个成功。这种行为在处理一个特性分支时很有用。例如，你可能想让配置标签与你的分支保持一致，但让它成为可选项（在这种情况下，使用 \u003ccode\u003espring.cloud.config.label=myfeature,develop\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e如果你在配置服务器上使用 HTTP 基本安全，目前只有在你将凭证嵌入您在 \u003ccode\u003espring.cloud.config.uri \u003c/code\u003e属性下指定的每个 URL 中时，才可能支持每个配置服务器的认证凭证。如果你使用任何其他类型的安全机制，你（目前）无法支持每台配置服务器的认证和授权。\u003c/p\u003e\n\u003ch3 id=\"77-配置超时\"\u003e7.7. 配置超时\u003c/h3\u003e\n\u003cp\u003e如果要配置超时阈值：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e读取超时可以通过使用属性\u003ccode\u003eSpring.cloud.config.Request-read-timeout\u003c/code\u003e来配置。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e可以通过使用属性\u003ccode\u003eSpring.cloud.config.Request-Connect-Timeout\u003c/code\u003e来配置连接超时。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"78-安全\"\u003e7.8. 安全\u003c/h3\u003e\n\u003cp\u003e如果你在服务器上使用\u003ccode\u003eHTTP Basic\u003c/code\u003e安全，客户需要知道密码（如果不是默认的，还需要知道用户名）。你可以通过配置服务器URI或通过单独的用户名和密码属性来指定用户名和密码，如下面的例子中所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://user:secret@myconfig.mycompany.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下示例显示了传递相同信息的备用方式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://myconfig.mycompany.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003espring.cloud.config.password\u003c/code\u003e 和 \u003ccode\u003espring.cloud.config.username\u003c/code\u003e 的值会覆盖 URI 中提供的任何内容。\u003c/p\u003e\n\u003cp\u003e如果您在 \u003ccode\u003eCloud Foundry\u003c/code\u003e 上部署应用程序，提供密码的最佳方式是通过服务凭证（如 URI 中，因为它不需要在配置文件中）。以下示例适用于本地和 \u003ccode\u003eCloud Foundry\u003c/code\u003e 上用户提供的名为 \u003ccode\u003econfigserver\u003c/code\u003e 的服务。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${vcap.services.configserver.credentials.uri:http://user:password@localhost:8888}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果\u003ccode\u003eConfig Server\u003c/code\u003e需要客户端TLS证书，则可以通过属性配置客户端TLS证书和信任库，如下示例所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://myconfig.myconfig.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etls\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;path-of-key-store\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;key-store-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;key-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;path-of-trust-store\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;trust-store-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003espring.cloud.config.tls.enabled\u003c/code\u003e需要为true，以启用配置客户端TLS。当\u003ccode\u003espring.cloud.config.tls.trust-store\u003c/code\u003e被省略时，会使用JVM默认的信任存储。\u003ccode\u003espring.cloud.config.tls.key-store-type \u003c/code\u003e和 \u003ccode\u003espring.cloud.config.tls.trust-store-type\u003c/code\u003e 的默认值是 PKCS12。当密码属性被省略时，假定为空密码。\u003c/p\u003e\n\u003cp\u003e如果你使用另一种形式的安全，你可能需要向\u003ccode\u003eConfigServicePropertySourceLocator\u003c/code\u003e提供一个\u003ccode\u003eRestTemplate\u003c/code\u003e（例如，通过在\u003ccode\u003ebootstrap\u003c/code\u003e上下文中抓取并注入它）。\u003c/p\u003e\n\u003ch4 id=\"781-健康指示器\"\u003e7.8.1. 健康指示器\u003c/h4\u003e\n\u003cp\u003e配置客户端提供了一个Spring Boot健康指示器，试图从配置服务器加载配置。可以通过设置\u003ccode\u003ehealth.config.enabled=false\u003c/code\u003e来禁用该健康指标。出于性能考虑，响应也会被缓存起来。默认的缓存生存时间是5分钟。要改变该值，请设置\u003ccode\u003ehealth.config.time-to-live\u003c/code\u003e属性（单位：毫秒）。\u003c/p\u003e\n\u003ch4 id=\"782-提供自定义resttemplate\"\u003e7.8.2. 提供自定义RestTemplate\u003c/h4\u003e\n\u003cp\u003e在某些情况下，你可能需要定制从客户端向配置服务器发出的请求。通常情况下，这样做涉及到传递特殊的授权头信息来验证对服务器的请求。要提供一个自定义的\u003ccode\u003eRestTemplate\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e创建一个具有PropertySourceLocator实现的新配置，如下例所示。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCustomConfigServiceBootstrapConfiguration.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomConfigServiceBootstrapConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eConfigServicePropertySourceLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003econfigServicePropertySourceLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eConfigClientProperties\u003c/span\u003e \u003cspan class=\"n\"\u003eclientProperties\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003econfigClientProperties\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n       \u003cspan class=\"n\"\u003eConfigServicePropertySourceLocator\u003c/span\u003e \u003cspan class=\"n\"\u003econfigServicePropertySourceLocator\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eConfigServicePropertySourceLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclientProperties\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003econfigServicePropertySourceLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclientProperties\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003econfigServicePropertySourceLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e对于添加授权头的简化方法，可以使用 \u003ccode\u003espring.cloud.config.headers.*\u003c/code\u003e属性来代替。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e在\u003ccode\u003eResources / META-INf\u003c/code\u003e中，创建一个名为\u003ccode\u003eSpring.factories\u003c/code\u003e的文件并指定您的自定义配置，如下示例所示：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003espring.factories\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eorg.springframework.cloud.bootstrap.BootstrapConfiguration = com.my.config.client.CustomConfigServiceBootstrapConfiguration\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"783-vault\"\u003e7.8.3. Vault\u003c/h4\u003e\n\u003cp\u003e当使用Vault作为配置服务器的后端时，客户端需要为服务器提供一个令牌，以便从Vault检索值。这个令牌可以通过在\u003ccode\u003ebootstrap.yml\u003c/code\u003e中设置\u003ccode\u003espring.cloud.config.token\u003c/code\u003e在客户端中提供，如以下例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etoken\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYourVaultToken\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"784-嵌套keys中的vault\"\u003e7.8.4. 嵌套Keys中的Vault\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eVault\u003c/code\u003e支持在存储在\u003ccode\u003eVault\u003c/code\u003e中的值中嵌套键的能力，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eecho -n \u0026#39;{\u0026#34;appA\u0026#34;: {\u0026#34;secret\u0026#34;: \u0026#34;appAsecret\u0026#34;}, \u0026#34;bar\u0026#34;: \u0026#34;baz\u0026#34;}\u0026#39; | vault write secret/myapp -\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个命令会将一个JSON对象写入你的Vault中。要在Spring中访问这些值，你可以使用传统的dot(.)注解，如以下例子所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Value\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${appA.secret}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;World\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的代码将设置\u003ccode\u003ename\u003c/code\u003e变量的值为\u003ccode\u003eappAsecret\u003c/code\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 4,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-consul/",
        title: "Spring Cloud Consul",
        description: "Spring Cloud Consul通过自动配置和与Spring环境及其他Spring编程模型成语的绑定，为Spring Boot应用程序提供Consul集成。通过一些简单的注解，你可以快速启用和配置你的应用程序内的常见模式，并使用Hashicorp的Consul构建大型分布式系统。提供的模式包括服务发现、分布式配置和控制总线。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月23日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-consul/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-consul\"\u003ehttps://github.com/spring-cloud/spring-cloud-consul\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e该项目通过自动配置和与Spring环境及其他Spring编程模型习语的绑定，为Spring Boot应用程序提供\u003ca href=\"https://consul.io/\"\u003eConsul\u003c/a\u003e集成。通过一些简单的注解，你可以在你的应用程序中快速启用和配置常见的模式，并使用基于Consul的组件构建大型分布式系统。提供的模式包括服务发现、控制总线和配置。通过与其他Spring Cloud项目的集成，提供了智能路由和客户端负载平衡、断路器。\u003c/p\u003e\n\u003ch2 id=\"1-快速开始\"\u003e1. 快速开始\u003c/h2\u003e\n\u003cp\u003e这篇快速入门指南介绍了如何使用Spring Cloud Consul进行服务发现和分布式配置。\u003c/p\u003e\n\u003cp\u003e首先，在你的机器上运行Consul Agent。然后你就可以访问它，并将其作为Spring Cloud Consul的服务注册和配置源。\u003c/p\u003e\n\u003ch3 id=\"11-服务发现\"\u003e1.1. 服务发现\u003c/h3\u003e\n\u003cp\u003e要在应用程序中使用这些功能，你可以将其构建为一个依赖\u003ccode\u003espring-cloud-consul-core\u003c/code\u003e的Spring Boot应用程序。添加依赖的最方便方式是使用Spring Boot启动器：\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-consul-discovery\u003c/code\u003e。我们建议使用依赖性管理和\u003ccode\u003espring-boot-starter-parent\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e下面的例子显示了一个典型的Maven配置。\u003c/p\u003e\n\u003cp\u003epom.xml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;project\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;parent\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-parent\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e{spring-boot-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;relativePath/\u0026gt;\u003c/span\u003e \u003cspan class=\"c\"\u003e\u0026lt;!-- lookup parent from repository --\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/parent\u0026gt;\u003c/span\u003e\n\n  \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-consul-discovery\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-test\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003etest\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${spring-cloud.version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;build\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;plugins\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;plugin\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-maven-plugin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/plugin\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/plugins\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/build\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/project\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子显示了一个典型的Gradle设置。\u003c/p\u003e\n\u003cp\u003ebuild.gradle\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"n\"\u003eplugins\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.boot\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"n\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eboot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;io.spring.dependency-management\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"n\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edependency\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emanagement\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;java\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003erepositories\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emavenCentral\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edependencies\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.cloud:spring-cloud-starter-consul-discovery\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003etestImplementation\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.boot:spring-boot-starter-test\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003edependencyManagement\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimports\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emavenBom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在你可以创建一个标准的Spring Boot应用程序，比如下面的HTTP服务器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当这个HTTP服务器运行时，它会连接到运行在本地默认8500端口的Consul Agent。要修改启动行为，你可以通过\u003ccode\u003eapplication.properties\u003c/code\u003e来改变Consul Agent的位置，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocalhost\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8500\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在你可以使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e、\u003ccode\u003e@LoadBalanced\u003c/code\u003e \u003ccode\u003eRestTemplate\u003c/code\u003e或\u003ccode\u003e@LoadBalanced\u003c/code\u003e \u003ccode\u003eWebClient.Builder\u003c/code\u003e来从\u003ccode\u003eConsul\u003c/code\u003e检索服务和实例数据，如以下例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eDiscoveryClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstances\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;STORES\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003egetUri\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"12-分布式配置\"\u003e1.2. 分布式配置\u003c/h3\u003e\n\u003cp\u003e要在应用程序中使用这些功能，您可以将其构建为依赖\u003ccode\u003espring-cloud-consul-core\u003c/code\u003e和\u003ccode\u003espring-cloud-consul-config\u003c/code\u003e的Spring Boot应用程序。添加依赖的最便捷方式是使用Spring Boot启动器：\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-consul-config\u003c/code\u003e。我们建议使用依赖性管理和\u003ccode\u003espring-boot-starter-parent\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e下面的例子展示了一个典型的Maven配置。\u003c/p\u003e\n\u003cp\u003epom.xml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;project\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;parent\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-parent\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e{spring-boot-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;relativePath/\u0026gt;\u003c/span\u003e \u003cspan class=\"c\"\u003e\u0026lt;!-- lookup parent from repository --\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/parent\u0026gt;\u003c/span\u003e\n\n  \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-consul-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-test\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003etest\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${spring-cloud.version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;build\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;plugins\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;plugin\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-maven-plugin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/plugin\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/plugins\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;/build\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/project\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子显示了一个典型的Gradle设置。\u003c/p\u003e\n\u003cp\u003ebuild.gradle\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-groovy\" data-lang=\"groovy\"\u003e\u003cspan class=\"n\"\u003eplugins\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.boot\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"n\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eboot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;io.spring.dependency-management\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eversion\u003c/span\u003e \u003cspan class=\"n\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edependency\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emanagement\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;java\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003erepositories\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003emavenCentral\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edependencies\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.cloud:spring-cloud-starter-consul-config\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"n\"\u003etestImplementation\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;org.springframework.boot:spring-boot-starter-test\u0026#39;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003edependencyManagement\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimports\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emavenBom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在你可以创建一个标准的Spring Boot应用程序，比如下面的HTTP服务器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该应用程序从Consul检索配置数据。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用Spring Cloud Consul配置，你需要设置\u003ccode\u003espring.config.import\u003c/code\u003e属性，以便与Consul绑定。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/#config-data-import\"\u003eSpring Boot配置数据导入部分\u003c/a\u003e阅读更多信息。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-安装consul\"\u003e2. 安装Consul\u003c/h2\u003e\n\u003cp\u003e请参阅\u003ca href=\"https://www.consul.io/intro/getting-started/install.html\"\u003e安装文档\u003c/a\u003e，了解如何安装Consul。\u003c/p\u003e\n\u003ch2 id=\"3-consul-agent\"\u003e3. Consul Agent\u003c/h2\u003e\n\u003cp\u003e所有Spring Cloud Consul应用程序必须有一个Consul Agent客户端。默认情况下，代理客户端应该在\u003ccode\u003elocalhost:8500\u003c/code\u003e。关于如何启动代理客户端以及如何连接到Consul代理服务器集群的具体细节，请参阅\u003ca href=\"https://consul.io/docs/agent/basics.html\"\u003e代理文档\u003c/a\u003e。对于开发来说，在你安装了consul之后，你可以使用以下命令启动一个Consul Agent。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e./src/main/bash/local_run_consul.sh\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在8500端口启动一个服务器模式的代理，用户界面在\u003ccode\u003elocalhost:8500\u003c/code\u003e可用。\u003c/p\u003e\n\u003ch2 id=\"4-使用consul进行服务发现\"\u003e4. 使用Consul进行服务发现\u003c/h2\u003e\n\u003cp\u003e服务发现是基于微服务的架构的关键原则之一。试图手工配置每个客户端或某种形式的约定是非常困难的，而且可能非常脆弱。Consul通过\u003ca href=\"https://www.consul.io/docs/agent/http.html\"\u003eHTTP API\u003c/a\u003e和\u003ca href=\"https://www.consul.io/docs/agent/dns.html\"\u003eDNS\u003c/a\u003e提供服务发现服务。Spring Cloud Consul利用HTTP API进行服务注册和发现。这并不妨碍非Spring Cloud应用程序利用DNS接口。Consul代理服务器在一个\u003ca href=\"https://www.consul.io/docs/internals/architecture.html\"\u003e集群\u003c/a\u003e中运行，该集群通过\u003ca href=\"https://www.consul.io/docs/internals/gossip.html\"\u003e流言协议\u003c/a\u003e进行通信并使用\u003ca href=\"https://www.consul.io/docs/internals/consensus.html\"\u003eRaft共识协议\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"41-如何激活\"\u003e4.1. 如何激活\u003c/h3\u003e\n\u003cp\u003e要激活Consul服务发现，请使用group为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和artifact id为\u003ccode\u003espring-cloud-starter-consul-discovery\u003c/code\u003e的\u003ccode\u003estarter\u003c/code\u003e。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解关于用当前Spring Cloud发布列车设置构建系统的细节。\u003c/p\u003e\n\u003ch3 id=\"42-注册到consul\"\u003e4.2. 注册到Consul\u003c/h3\u003e\n\u003cp\u003e当客户端在Consul注册时，它提供了关于自己的元数据，如主机和端口、ID、名称和标签。默认情况下，会创建一个HTTP检查，Consul每隔10秒会点击\u003ccode\u003e/actuator/health\u003c/code\u003e端点。如果健康检查失败，服务实例将被标记为关键。\u003c/p\u003e\n\u003cp\u003e示例Consul客户端。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello world\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpringApplicationBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eweb\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(即完全是正常的Spring Boot应用)。如果Consul客户端位于\u003ccode\u003elocalhost:8500\u003c/code\u003e以外的地方，则需要配置来定位该客户端。例子。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocalhost\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8500\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/#spring-cloud-consul-config\"\u003eSpring Cloud Consul Config\u003c/a\u003e，并且设置了\u003ccode\u003espring.cloud.bootstrap.enabled=true\u003c/code\u003e或\u003ccode\u003espring.config.use-legacy-processing=true\u003c/code\u003e或使用\u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e，那么上述值将需要放在\u003ccode\u003ebootstrap.yml\u003c/code\u003e而不是\u003ccode\u003eapplication.yml\u003c/code\u003e中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e默认的服务名称、实例ID和端口取自\u003ccode\u003eEnvironment\u003c/code\u003e，分别为\u003ccode\u003e${spring.application.name}\u003c/code\u003e、Spring Context ID和\u003ccode\u003e${server.port}\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要禁用Consul发现客户端，可以将\u003ccode\u003espring.cloud.consul.discovery.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。当\u003ccode\u003espring.cloud.discovery.enabled\u003c/code\u003e被设置为\u003ccode\u003efalse\u003c/code\u003e时，Consul发现客户端也将被禁用。\u003c/p\u003e\n\u003cp\u003e要禁用服务注册，你可以将\u003ccode\u003espring.cloud.consul.discovery.register\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"421-将管management为一项单独的服务进行注册\"\u003e4.2.1. 将管Management为一项单独的服务进行注册\u003c/h4\u003e\n\u003cp\u003e当管理服务器的端口被设置为与应用程序的端口不同时，通过设置\u003ccode\u003emanagement.server.port\u003c/code\u003e属性，管理服务将被注册为比应用程序服务单独的服务。比如说。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyApp\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emanagement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e4452\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上述配置将注册以下两个服务。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eApplication Service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eID: myApp\nName: myApp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eManagement Service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eID: myApp-management\nName: myApp-management\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eManagement Service将从Application Service继承其\u003ccode\u003einstanceId\u003c/code\u003e和\u003ccode\u003eserviceName\u003c/code\u003e。比如说。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyApp\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emanagement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e4452\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance-id\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecustom-service-id\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyprefix-${spring.application.name}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上述配置将注册以下两个服务。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eApplication Service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eID: custom-service-id\nName: myprefix-myApp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eManagement Service:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eID: custom-service-id-management\nName: myprefix-myApp-management\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e通过以下属性可以进行进一步的定制。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e/** Port to register the management service under (defaults to management port) */\nspring.cloud.consul.discovery.management-port\n\n/** Suffix to use when registering management service (defaults to \u0026#34;management\u0026#34; */\nspring.cloud.consul.discovery.management-suffix\n\n/** Tags to use when registering management service (defaults to \u0026#34;management\u0026#34; */\nspring.cloud.consul.discovery.management-tags\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"422-http健康检查\"\u003e4.2.2. HTTP健康检查\u003c/h4\u003e\n\u003cp\u003eConsul实例的健康检查默认为\u0026quot;/actuator/health\u0026quot;，这是Spring Boot Actuator应用程序中健康端点的默认位置。如果你使用非默认的上下文路径或servlet路径（如\u003ccode\u003eserver.servletPath=/foo\u003c/code\u003e）或管理端点路径（如\u003ccode\u003emanagement.server.servlet.context-path=/admin\u003c/code\u003e），你需要改变这一点，即使对于Actuator应用程序来说。\u003c/p\u003e\n\u003cp\u003e也可以配置Consul用于检查健康端点的时间间隔。\u0026ldquo;10s\u0026quot;和 \u0026ldquo;1m\u0026quot;分别代表10秒和1分钟。\u003c/p\u003e\n\u003cp\u003e这个例子说明了上述情况（更多选项请参见附录页中的 \u003ccode\u003espring.cloud.consul.discovery.health-check-*\u003c/code\u003e 属性）。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthCheckPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${management.server.servlet.context-path}/actuator/health\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthCheckInterval\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e15s\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过设置 \u003ccode\u003espring.cloud.consul.discovery.register-health-check=false\u003c/code\u003e 完全禁用 HTTP 健康检查。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eApplying Headers\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e头信息可以应用于健康检查请求。例如，如果你试图注册一个使用\u003ca href=\"https://github.com/spring-cloud/spring-cloud-config/blob/master/docs/src/main/asciidoc/spring-cloud-config.adoc#vault-backend\"\u003eVault Backend\u003c/a\u003e的\u003ca href=\"https://cloud.spring.io/spring-cloud-config/\"\u003eSpring Cloud Config\u003c/a\u003e服务器。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealth-check-headers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eX-Config-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e6442e58b-d1ea-182e-cfa5-cf9cddef0722\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据HTTP标准，每个header可以有多个值，在这种情况下，可以提供一个数组。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealth-check-headers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eX-Config-Token\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;6442e58b-d1ea-182e-cfa5-cf9cddef0722\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;Some other value\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"423-actuator-health-indicators\"\u003e4.2.3. Actuator Health Indicator(s)\u003c/h4\u003e\n\u003cp\u003e如果服务实例是一个Spring Boot执行器应用程序，可以向它提供以下的Actuator health indicator.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDiscoveryClientHealthIndicator\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e当Consul服务发现被激活时，一个\u003ca href=\"https://cloud.spring.io/spring-cloud-commons/2.2.x/reference/html/#health-indicator\"\u003eDiscoverClientHealthIndicator\u003c/a\u003e被配置并提供给执行器健康端点使用。关于配置选项，请看\u003ca href=\"https://cloud.spring.io/spring-cloud-commons/2.2.x/reference/html/#health-indicator\"\u003e这里\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConsulHealthIndicator\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e配置了一个指标来验证\u003ccode\u003eConsulClient\u003c/code\u003e的健康状况。\u003c/p\u003e\n\u003cp\u003e默认情况下，它检索Consul领导节点状态和所有注册服务。在有许多注册服务的部署中，每次健康检查都要检索所有的服务，成本很高。要跳过服务检索，只检查领导节点状态，请设置 \u003ccode\u003espring.cloud.consul.health-indicator.include-services-query=false\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要禁用该指标，请设置 \u003ccode\u003emanagement.health.consul.enabled=false\u003c/code\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当应用程序运行在\u003ca href=\"https://cloud.spring.io/spring-cloud-commons/2.2.x/reference/html/#the-bootstrap-application-context\"\u003ebootstrap context mode\u003c/a\u003e (默认情况下)，该指标被加载到bootstrap上下文中，不提供给执行器健康端点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"424-metadata\"\u003e4.2.4. Metadata\u003c/h4\u003e\n\u003cp\u003eConsul支持服务的元数据。Spring Cloud的\u003ccode\u003eServiceInstance\u003c/code\u003e有一个\u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e元数据字段，它是由服务元字段填充的。为了填充元字段，在\u003ccode\u003espring.cloud.consul.discovery.metadata\u003c/code\u003e或\u003ccode\u003espring.cloud.consul.discovery.management-metadata\u003c/code\u003e属性上设置值。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003emyfield\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyvalue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eanotherfield\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eanothervalue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上述配置将产生一个服务，其元字段包含\u003ccode\u003emyfield→myvalue\u003c/code\u003e和\u003ccode\u003eanotherfield→anothervalue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eGenerated Metadata\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eConsul\u003c/code\u003e 自动注册将自动生成一些条目。\u003c/p\u003e\n\u003cp\u003eTable 1. 自动生成的元数据\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eKey\u003c/th\u003e\n\u003cth\u003eValue\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003egroup\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e属性 \u003ccode\u003espring.cloud.consul.discovery.instance-group\u003c/code\u003e 。这个值只有在\u003ccode\u003einstance-group\u003c/code\u003e不是空的情况下才会生成。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003esecure\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e如果属性\u003ccode\u003espring.cloud.consul.discovery.scheme\u003c/code\u003e等于\u003ccode\u003ehttps\u003c/code\u003e则为真，否则为: \u003ccode\u003efalse\u003c/code\u003e。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e属性 \u003ccode\u003espring.cloud.consul.discovery.default-zone-metadata-name\u003c/code\u003e ，默认为 \u003ccode\u003ezone\u003c/code\u003e。\u003c/td\u003e\n\u003ctd\u003e属性 \u003ccode\u003espring.cloud.consul.discovery.instance-zone\u003c/code\u003e 。这个值只有在\u003ccode\u003einstance-zone\u003c/code\u003e不是空的情况下才会生成。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e旧版本的Spring Cloud Consul通过解析\u003ccode\u003espring.cloud.consul.discovery.tags\u003c/code\u003e属性，从Spring Cloud Commons填充\u003ccode\u003eServiceInstance.getMetadata（）\u003c/code\u003e方法。这已不再被支持，请迁移到使用\u003ccode\u003espring.cloud.consul.discovery.metadata\u003c/code\u003e Map。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"425-使consul实例的id唯一\"\u003e4.2.5. 使Consul实例的ID唯一\u003c/h4\u003e\n\u003cp\u003e默认情况下，consul实例的注册ID等于其Spring应用上下文ID。默认情况下，Spring应用上下文ID是\u003ccode\u003e${spring.application.name}:comma,separated,profiles:${server.port}\u003c/code\u003e。对于大多数情况，这将允许一个服务的多个实例在一台机器上运行。如果需要进一步的唯一性，使用Spring Cloud你可以通过在\u003ccode\u003espring.cloud.consul.discovery.instanceId\u003c/code\u003e中提供一个唯一的标识符来覆盖这一点。比如说。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ediscovery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003einstanceId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有了这个元数据，并且在 localhost 上部署了多个服务实例，随机值就会在那里启动，使实例独一无二。在 Cloudfoundry 中，\u003ccode\u003evcap.application.instance_id\u003c/code\u003e 将会在 Spring Boot 应用程序中自动填充，因此不需要随机值。\u003c/p\u003e\n\u003ch3 id=\"43-查阅服务\"\u003e4.3. 查阅服务\u003c/h3\u003e\n\u003ch4 id=\"431-使用负载均衡\"\u003e4.3.1. 使用负载均衡\u003c/h4\u003e\n\u003cp\u003eSpring Cloud支持\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix/blob/master/docs/src/main/asciidoc/spring-cloud-netflix.adoc#spring-cloud-feign\"\u003eFeign\u003c/a\u003e（一个REST客户端构建器）和\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#rest-template-loadbalancer-client\"\u003eSpring \u003ccode\u003eRestTemplate\u003c/code\u003e\u003c/a\u003e，用于使用逻辑服务名称/ID而不是物理URL来查找服务。Feign和具有发现意识的RestTemplate都利用\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer\"\u003eSpring Cloud LoadBalancer\u003c/a\u003e进行客户端的负载均衡。\u003c/p\u003e\n\u003cp\u003e如果你想使用RestTemplate访问\u003ccode\u003eSTORES\u003c/code\u003e服务，只需声明。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@LoadBalanced\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"nf\"\u003eloadbalancedRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e并像这样使用它（注意我们如何使用来自Consul的\u003ccode\u003eSTORES\u003c/code\u003e服务名称/ID，而不是一个完全合格的域名）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetFirstProduct\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetForObject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://STORES/products/1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你在多个数据中心有Consul集群，并且你想访问另一个数据中心的服务，仅有服务名称/ID是不够的。在这种情况下，你可以使用属性\u003ccode\u003espring.cloud.consul.discovery.datacenters.STORES=dc-west\u003c/code\u003e，其中STORES是服务名称/id，dc-west是STORES服务所在的数据中心，而不是一个完全合格的域名）。)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud现在还提供对\u003ca href=\"https://cloud.spring.io/spring-cloud-commons/reference/html/#_spring_resttemplate_as_a_load_balancer_client\"\u003eSpring Cloud LoadBalancer\u003c/a\u003e 的支持。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"432-使用discoveryclient\"\u003e4.3.2. 使用DiscoveryClient\u003c/h4\u003e\n\u003cp\u003e你也可以使用\u003ccode\u003eorg.springframework.cloud.client.discovery.DiscoveryClient\u003c/code\u003e，它为发现客户端提供了一个简单的API，而不是专门针对Netflix的，比如说\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eDiscoveryClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstances\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;STORES\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003egetUri\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"44-consul-catalog-watch\"\u003e4.4. Consul Catalog Watch\u003c/h3\u003e\n\u003cp\u003eConsul Catalog Watch利用了consul\u003ca href=\"https://www.consul.io/docs/agent/watches.html#services\"\u003e观察服务\u003c/a\u003e的能力。目录监视进行阻塞的Consul HTTP API调用，以确定是否有任何服务改变。如果有新的服务数据，就会发布心跳事件。\u003c/p\u003e\n\u003cp\u003e要改变配置观察被调用的频率，请改变\u003ccode\u003espring.cloud.consul.config.discovery.catalog-services-watch-delay\u003c/code\u003e。默认值是1000，单位是毫秒。延迟是指前一次调用结束后到下一次调用开始的时间量。\u003c/p\u003e\n\u003cp\u003e要禁用目录观察，请设置\u003ccode\u003espring.cloud.consul.discovery.catalogServicesWatch.enabled=false\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e该观察使用Spring的\u003ccode\u003eTaskScheduler\u003c/code\u003e来安排对consul的调用。默认情况下，它是一个\u003ccode\u003eThreadPoolTaskScheduler\u003c/code\u003e，\u003ccode\u003epoolSize\u003c/code\u003e为1。 要改变\u003ccode\u003eTaskScheduler\u003c/code\u003e，创建一个\u003ccode\u003eTaskScheduler\u003c/code\u003e类型的bean，用\u003ccode\u003eConsulDiscoveryClientConfiguration.CATALOG_WATCH_TASK_SCHEDULER_NAME\u003c/code\u003e常量命名。\u003c/p\u003e\n\u003ch2 id=\"5-使用consul的分布式配置\"\u003e5. 使用Consul的分布式配置\u003c/h2\u003e\n\u003cp\u003eConsul提供了一个\u003ca href=\"https://consul.io/docs/agent/http/kv.html\"\u003eKey/Value Store\u003c/a\u003e来存储配置和其他元数据。Spring Cloud Consul配置是\u003ca href=\"https://github.com/spring-cloud/spring-cloud-config\"\u003e配置服务器和客户端\u003c/a\u003e的替代品。在特殊的 \u0026ldquo;bootstrap\u0026rdquo; 阶段，配置被加载到Spring环境中。配置默认存储在\u003ccode\u003e/config\u003c/code\u003e文件夹中。多个 \u003ccode\u003ePropertySource\u003c/code\u003e 实例根据应用程序的名称和活动配置文件创建，模仿Spring Cloud Config的属性解析顺序。例如，一个名称为 \u0026ldquo;testApp \u0026ldquo;并使用 \u0026ldquo;dev \u0026ldquo;配置文件的应用程序将创建以下属性源。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003econfig/testApp,dev/\nconfig/testApp/\nconfig/application,dev/\nconfig/application/\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e最具体的属性来源在顶部，最不具体的在底部。\u003ccode\u003econfig/application\u003c/code\u003e文件夹中的属性适用于所有使用consul进行配置的应用程序。\u003ccode\u003econfig/testApp\u003c/code\u003e文件夹中的属性只适用于名为 \u0026ldquo;testApp \u0026ldquo;的服务实例。\u003c/p\u003e\n\u003cp\u003e目前，配置是在应用程序的启动时读取的。向\u003ccode\u003e/refresh\u003c/code\u003e发送HTTP POST将导致配置被重新加载。\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/#spring-cloud-consul-config-watch\"\u003eConfig Watch\u003c/a\u003e也将自动检测变化并重新加载应用程序上下文。\u003c/p\u003e\n\u003ch3 id=\"51-如何激活\"\u003e5.1. 如何激活\u003c/h3\u003e\n\u003cp\u003e要开始使用Consul配置，请使用 \u003ccode\u003eorg.springframework.cloud\u003c/code\u003e group和 \u003ccode\u003espring-cloud-starter-consul-config\u003c/code\u003e artifact id的starter。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解用当前的Spring Cloud Release Train设置构建系统的细节。\u003c/p\u003e\n\u003ch3 id=\"52-spring-boot配置数据导入\"\u003e5.2. Spring Boot配置数据导入\u003c/h3\u003e\n\u003cp\u003eSpring Boot 2.4引入了一种通过\u003ccode\u003espring.config.import\u003c/code\u003e属性导入配置数据的新方法。现在这是从Consul获取配置的默认方式。\u003c/p\u003e\n\u003cp\u003e要选择性地连接到Consul，请在\u003ccode\u003eapplication.properties\u003c/code\u003e中设置以下内容。\u003c/p\u003e\n\u003cp\u003eapplication.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=optional:consul:\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在 \u003ccode\u003ehttp://localhost:8500\u003c/code\u003e 的默认位置连接到Consul代理。移除\u003ccode\u003eoptional:\u003c/code\u003e前缀将导致Consul配置在无法连接到Consul时失败。要改变Consul配置的连接属性，可以设置\u003ccode\u003espring.cloud.consul.host\u003c/code\u003e和\u003ccode\u003espring.cloud.consul.port\u003c/code\u003e或者将主机/端口对添加到\u003ccode\u003espring.config.import\u003c/code\u003e语句中，例如，\u003ccode\u003espring.config.import=optional:consul:myhost:8500\u003c/code\u003e。import属性中的位置优先于host和port属性。\u003c/p\u003e\n\u003cp\u003eConsul配置将根据\u003ccode\u003espring.cloud.consul.config.name\u003c/code\u003e（默认为\u003ccode\u003espring.application.name\u003c/code\u003e属性的值）和\u003ccode\u003espring.cloud.consul.config.default-context\u003c/code\u003e（默认为\u003ccode\u003eapplication\u003c/code\u003e），尝试从四个自动上下文加载值。如果你想指定上下文而不是使用计算出来的上下文，你可以在\u003ccode\u003espring.config.import\u003c/code\u003e语句中添加这些信息。\u003c/p\u003e\n\u003cp\u003eapplication.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.config.import=optional:consul:myhost:8500/contextone;/context/two\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将有选择地只从\u003ccode\u003e/contextone\u003c/code\u003e和\u003ccode\u003e/context/two\u003c/code\u003e加载配置。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e通过\u003ccode\u003espring.config.import\u003c/code\u003e导入的Spring Boot配置数据方法不需要一个\u003ccode\u003ebootstrap\u003c/code\u003e文件（properties或yaml）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"53-定制化\"\u003e5.3. 定制化\u003c/h3\u003e\n\u003cp\u003eConsul配置可以使用以下属性进行定制。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eprefix\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfiguration\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultContext\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eapps\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofileSeparator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;::\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果你设置了\u003ccode\u003espring.cloud.bootstrap.enabled=true\u003c/code\u003e或\u003ccode\u003espring.config.use-legacy-processing=true\u003c/code\u003e，或者包含了\u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e，那么上述数值需要放在\u003ccode\u003ebootstrap.yml\u003c/code\u003e而不是\u003ccode\u003eapplication.yml\u003c/code\u003e中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eenabled\u003c/code\u003e将此值设置为 \u0026ldquo;false\u0026rdquo;，可禁用Consul配置。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eprefix\u003c/code\u003e设置配置值的基础文件夹\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edefaultContext\u003c/code\u003e设置所有应用程序使用的文件夹名称。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eprofileSeparator\u003c/code\u003e设置分隔符的值，用于在有配置文件的属性源中分隔配置文件的名称。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"54-config-watch\"\u003e5.4. Config Watch\u003c/h3\u003e\n\u003cp\u003eConsul Config Watch利用了consul \u003ca href=\"https://www.consul.io/docs/agent/watches.html#keyprefix\"\u003ewatch a key prefix\u003c/a\u003e 的能力。Config Watch进行阻塞式Consul HTTP API调用，以确定当前应用程序的任何相关配置数据是否发生了变化。如果有新的配置数据，就会发布一个刷新事件。这等同于调用\u003ccode\u003e/refresh\u003c/code\u003e执行器端点。\u003c/p\u003e\n\u003cp\u003e要改变配置观察被调用的频率，请改变\u003ccode\u003espring.cloud.consul.config.watch.delay\u003c/code\u003e。默认值是1000，单位是毫秒。延迟是指上一次调用结束后到下一次调用开始的时间量。\u003c/p\u003e\n\u003cp\u003e要禁用配置观察，请设置\u003ccode\u003espring.cloud.consul.config.watch.enabled=false\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e观察使用Spring的\u003ccode\u003eTaskScheduler\u003c/code\u003e来安排对consul的调用。默认情况下，它是一个\u003ccode\u003eThreadPoolTaskScheduler\u003c/code\u003e，\u003ccode\u003epoolSize\u003c/code\u003e为1。 要改变\u003ccode\u003eTaskScheduler\u003c/code\u003e，创建一个\u003ccode\u003eTaskScheduler\u003c/code\u003e类型的bean，用\u003ccode\u003eConsulConfigAutoConfiguration.CONFIG_WATCH_TASK_SCHEDULER_NAME\u003c/code\u003e常量命名。\u003c/p\u003e\n\u003ch3 id=\"55-yaml或properties的配置\"\u003e5.5. YAML或Properties的配置\u003c/h3\u003e\n\u003cp\u003e相对于单独的键/值对，以YAML或Properties格式来存储属性的blob可能更方便。设置\u003ccode\u003espring.cloud.consul.config.format\u003c/code\u003e属性为\u003ccode\u003eYAML\u003c/code\u003e或\u003ccode\u003eproperties\u003c/code\u003e。例如，使用YAML。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYAML\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果你设置了 \u003ccode\u003espring.cloud.bootstrap.enabled=true\u003c/code\u003e 或 \u003ccode\u003espring.config.use-legacy-processing=true\u003c/code\u003e，或者包含了 \u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e，那么上述值就需要放在 \u003ccode\u003ebootstrap.yml\u003c/code\u003e 而不是 \u003ccode\u003eapplication.yml\u003c/code\u003e 中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eYAML 必须设置在\u003ccode\u003econsul\u003c/code\u003e中适当的data \u003ccode\u003ekey\u003c/code\u003e中。使用上面的默认值，键会看起来像。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003econfig/testApp,dev/data\nconfig/testApp/data\nconfig/application,dev/data\nconfig/application/data\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以将YAML文档存储在上面列出的任何一个键中。\u003c/p\u003e\n\u003cp\u003e你可以使用\u003ccode\u003espring.cloud.consul.config.data-key\u003c/code\u003e改变data key。\u003c/p\u003e\n\u003ch3 id=\"56-git2consul的配置\"\u003e5.6. git2consul的配置\u003c/h3\u003e\n\u003cp\u003egit2consul是一个Consul社区项目，它将文件从git仓库加载到Consul的单个键中。默认情况下，键的名字就是文件的名字。支持YAML和属性文件，文件扩展名分别为\u003ccode\u003e.yml\u003c/code\u003e和\u003ccode\u003e.properties\u003c/code\u003e。设置\u003ccode\u003espring.cloud.consul.config.format\u003c/code\u003e属性为\u003ccode\u003eFILES\u003c/code\u003e。比如说。\u003c/p\u003e\n\u003cp\u003ebootstrap.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003econsul\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eformat\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eFILES\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e给出\u003ccode\u003e/config\u003c/code\u003e中的以下键，\u003ccode\u003edevelopment\u003c/code\u003e 配置文件和应用程序名称为\u003ccode\u003efoo\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e.gitignore\napplication.yml\nbar.properties\nfoo-development.properties\nfoo-production.yml\nfoo.properties\nmaster.ref\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e将创建以下配置资源。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003econfig/foo-development.properties\nconfig/foo.properties\nconfig/application.yml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e每个key的value需要是一个格式正确的YAML或属性文件。\u003c/p\u003e\n\u003ch3 id=\"57-快速失败\"\u003e5.7. 快速失败\u003c/h3\u003e\n\u003cp\u003e在某些情况下（如本地开发或某些测试场景），如果consul不能用于配置，可能会很方便，不会失败。设置\u003ccode\u003espring.cloud.consul.config.fail-fast=false\u003c/code\u003e将导致配置模块记录一个警告而不是抛出一个异常。这将允许应用程序继续正常启动。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你设置了\u003ccode\u003espring.cloud.bootstrap.enabled=true\u003c/code\u003e或\u003ccode\u003espring.config.use-legacy-processing=true\u003c/code\u003e，或者包含了\u003ccode\u003espring-cloud-starter-bootstrap\u003c/code\u003e，那么上述数值需要放在\u003ccode\u003ebootstrap.yml\u003c/code\u003e而不是\u003ccode\u003eapplication.yml\u003c/code\u003e中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"6-consul-重试\"\u003e6. Consul 重试\u003c/h2\u003e\n\u003cp\u003e如果你预计consul代理在你的应用程序启动时可能偶尔不可用，你可以要求它在失败后继续尝试。你需要把\u003ccode\u003espring-retry\u003c/code\u003e和\u003ccode\u003espring-boot-starter-aop\u003c/code\u003e添加到你的classpath中。默认行为是重试6次，初始回退间隔为1000ms，后续回退的指数乘数为1.1。你可以使用\u003ccode\u003espring.cloud.consul.retry.*\u003c/code\u003e配置属性来配置这些属性（以及其他）。这在Spring Cloud Consul配置和发现注册中都适用。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e为了完全控制重试，添加一个\u003ccode\u003e@Bean\u003c/code\u003e类型的\u003ccode\u003eRetryOperationsInterceptor\u003c/code\u003e，ID为 \u0026ldquo;consulRetryInterceptor\u0026rdquo;。Spring Retry有一个\u003ccode\u003eRetryInterceptorBuilder\u003c/code\u003e，可以很容易地创建一个。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"7-spring-cloud-bus-和-consul\"\u003e7. Spring Cloud Bus 和 Consul\u003c/h2\u003e\n\u003ch3 id=\"71-如何激活\"\u003e7.1. 如何激活\u003c/h3\u003e\n\u003cp\u003e要开始使用Consul Bus，请使用 \u0026ldquo;org.springframework.cloud\u0026rdquo; group和 \u003ccode\u003espring-cloud-starter-consul-bus\u003c/code\u003e artifact id的starter 。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解关于使用当前Spring Cloud发布列车设置构建系统的详细信息。\u003c/p\u003e\n\u003cp\u003e参见\u003ca href=\"https://cloud.spring.io/spring-cloud-bus/\"\u003eSpring Cloud Bus\u003c/a\u003e文档，了解可用的执行器端点以及如何发送自定义消息。\u003c/p\u003e\n\u003ch2 id=\"8-circuit-breaker-和-hystrix\"\u003e8. Circuit Breaker 和 Hystrix\u003c/h2\u003e\n\u003cp\u003e应用程序可以使用由Spring Cloud Netflix项目提供的Hystrix熔断器，方法是在项目的pom.xml中包括这个启动器。\u003ccode\u003espring-cloud-starter-hystrix\u003c/code\u003e 。Hystrix并不依赖Netflix发现客户端。\u003ccode\u003e@EnableHystrix\u003c/code\u003e注解应该放在一个配置类上（通常是主类）。然后方法可以用\u003ccode\u003e@HystrixCommand\u003c/code\u003e来注解，以受到熔断器的保护。更多细节见\u003ca href=\"https://projects.spring.io/spring-cloud/spring-cloud.html#_circuit_breaker_hystrix_clients\"\u003e文档\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"9-hystrix-metrics-aggregation-with-turbine-and-consul\"\u003e9. Hystrix metrics aggregation with Turbine and Consul\u003c/h3\u003e\n\u003cp\u003eTurbine（由Spring Cloud Netflix项目提供），聚合了多个实例Hystrix的指标流，因此仪表板可以显示一个聚合视图。Turbine使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e接口来查找相关实例。要在Spring Cloud Consul中使用Turbine，请以类似于以下例子的方式配置Turbine应用程序。\u003c/p\u003e\n\u003cp\u003epom.xml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-netflix-turbine\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-consul-discovery\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，Turbine的依赖关系不是一个启动器。 turbine starter包括对Netflix Eureka的支持。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.application.name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eturbine\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapplications\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econsulhystrixclient\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eturbine\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eaggregator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eclusterConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${applications}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eappConfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${applications}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eclusterConfig\u003c/code\u003e和\u003ccode\u003eappConfig\u003c/code\u003e部分必须匹配，所以把逗号分隔的服务ID列表放到一个单独的配置属性中是很有用的。\u003c/p\u003e\n\u003cp\u003eTurbine.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@EnableTurbine\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTurbine\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDemoturbinecommonsApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"10-配置属性\"\u003e10. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有与Consul有关的配置属性列表，请查看\u003ca href=\"https://docs.spring.io/spring-cloud-consul/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 5,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-gateway/",
        title: "Spring Cloud Gateway",
        description: "该项目提供了一个库，用于在Spring WebFlux之上构建API网关。Spring Cloud Gateway旨在提供一种简单而有效的方式来路由到API，并为其提供交叉关注，如：安全、监控/指标和弹性。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月23日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-gateway\"\u003ehttps://github.com/spring-cloud/spring-cloud-gateway\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这个项目提供了一个建立在Spring生态系统之上的API网关，包括。Spring 5、Spring Boot 2和Project Reactor。Spring Cloud Gateway旨在提供一种简单而有效的方式来路由到API，并提供跨领域的关注，如：安全、监控/指标和弹性。\u003c/p\u003e\n\u003ch2 id=\"1-添加spring-cloud-gateway\"\u003e1. 添加Spring Cloud Gateway\u003c/h2\u003e\n\u003cp\u003e要在你的项目中包含Spring Cloud Gateway，请使用grup ID为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和artifact ID为\u003ccode\u003espring-cloud-starter-gateway\u003c/code\u003e的starter。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解关于使用当前Spring Cloud发布列车设置构建系统的详细信息。\u003c/p\u003e\n\u003cp\u003e如果你包含了starter，但你不希望启用网关，请设置\u003ccode\u003espring.cloud.gateway.enabled=false\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Gateway建立在\u003ca href=\"https://spring.io/projects/spring-boot#learn\"\u003eSpring Boot 2.x\u003c/a\u003e、\u003ca href=\"https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html\"\u003eSpring WebFlux\u003c/a\u003e和\u003ca href=\"https://projectreactor.io/docs\"\u003eProject Reactor\u003c/a\u003e之上。因此，你所熟悉的许多同步库（例如Spring Data和Spring Security）和模式在你使用Spring Cloud Gateway时可能不适用。如果你不熟悉这些项目，我们建议你在使用Spring Cloud Gateway之前先阅读它们的文档，熟悉一些新的概念。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Gateway需要Spring Boot和Spring Webflux提供的Netty运行时间。它不能在传统的Servlet容器中工作，也不能以WAR的形式构建。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-术语表\"\u003e2. 术语表\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eRoute\u003c/strong\u003e。网关的基本构造块。它由一个ID、一个目的地URI、一个谓词集合和一个过滤器集合定义。如果集合谓词为真，则路由被匹配。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePredicate\u003c/strong\u003e。这是一个\u003ca href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html\"\u003eJava 8 Function Predicate\u003c/a\u003e。输入类型是一个\u003ca href=\"https://docs.spring.io/spring/docs/5.0.x/javadoc-api/org/springframework/web/server/ServerWebExchange.html\"\u003eSpring Framework \u003ccode\u003eServerWebExchange\u003c/code\u003e\u003c/a\u003e。这让你可以匹配HTTP请求中的任何内容，如头文件或参数。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFilter\u003c/strong\u003e。这些是\u003ca href=\"https://github.com/spring-cloud/spring-cloud-gateway/tree/main/spring-cloud-gateway-server/src/main/java/org/springframework/cloud/gateway/filter/GatewayFilter.java\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e\u003c/a\u003e的实例，已经用特定的工厂构建。在这里，你可以在发送下游请求之前或之后修改请求和响应。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"3-它是如何工作的\"\u003e3. 它是如何工作的\u003c/h2\u003e\n\u003cp\u003e下图提供了一个关于Spring Cloud Gateway如何工作的高层次概述。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/KevinBlandy/springcloud-images/2021/07/23/6026b5a0b1ad41a68dee61d1af1ff5d0.png\" alt=\"springcloud\"\u003e\u003c/p\u003e\n\u003cp\u003e客户端向Spring Cloud Gateway发出请求。如果Gateway处理程序映射确定一个请求与路由相匹配，它将被发送到Gateway Web处理程序。这个处理程序通过一个特定于该请求的过滤器链来运行该请求。过滤器被虚线划分的原因是，过滤器可以在代理请求发送之前和之后运行逻辑。所有的 \u0026ldquo;pre\u0026quot;过滤器逻辑都被执行。然后发出代理请求。在代理请求发出后，\u0026ldquo;post\u0026quot;过滤器逻辑被运行。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在路由中定义的没有端口的URI，其HTTP和HTTPS URI的默认端口值分别为80和443。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"4-配置-route-predicate-和-gateway-filter\"\u003e4. 配置 Route Predicate 和 Gateway Filter\u003c/h2\u003e\n\u003cp\u003e有两种方式可以配置谓词和过滤器：快捷方式和完全展开参数。下面的大多数例子使用的是快捷方式。\u003c/p\u003e\n\u003cp\u003e名称和参数名称将在每个部分的第一或第二句中以\u003ccode\u003ecode\u003c/code\u003e的形式列出。参数通常按照快捷方式配置所需的顺序列出。\u003c/p\u003e\n\u003ch3 id=\"41-快捷配置\"\u003e4.1. 快捷配置\u003c/h3\u003e\n\u003cp\u003e捷径配置是由过滤器名称识别的，后面是等号（\u003ccode\u003e=\u003c/code\u003e），后面是由逗号（\u003ccode\u003e,\u003c/code\u003e）分隔的参数值。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eafter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eCookie=mycookie,mycookievalue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的例子定义了\u003ccode\u003eCookie\u003c/code\u003e路由谓词工厂，有两个参数，cookie名称\u003ccode\u003emycookie\u003c/code\u003e和要匹配的值\u003ccode\u003emycookievalue\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"42-完整展开的参数配置\"\u003e4.2. 完整展开的参数配置\u003c/h3\u003e\n\u003cp\u003e完全展开的参数看起来更像标准的yaml配置，有name/vlue键值对。一般来说，会有一个\u003ccode\u003ename\u003c/code\u003e键和一个\u003ccode\u003eargs\u003c/code\u003e键。\u003ccode\u003eargs\u003c/code\u003e键是一个键值对的映射，用于配置谓词或过滤器。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eafter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCookie\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emycookie\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eregexp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emycookievalue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这是上面显示的\u003ccode\u003eCookie\u003c/code\u003e谓词的快捷配置的完整配置。\u003c/p\u003e\n\u003ch2 id=\"5-路由-predicate-工厂\"\u003e5. 路由 Predicate 工厂\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Gateway将路由作为Spring WebFlux \u003ccode\u003eHandlerMapping\u003c/code\u003e基础设施的一部分进行匹配。Spring Cloud Gateway包括许多内置的路由谓词工厂。所有这些谓词都与HTTP请求的不同属性相匹配。你可以用逻辑上的 \u0026ldquo;and \u0026ldquo;语句组合多个路由谓词工厂。\u003c/p\u003e\n\u003ch3 id=\"51-the-after-route-predicate-factory\"\u003e5.1. The After Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u0026ldquo;After\u0026rdquo; 路由谓词工厂需要一个参数，即 \u0026ldquo;datetime\u0026rdquo;（它是java的 \u0026ldquo;ZonedDateTime\u0026rdquo;）。这个谓词匹配发生在指定日期时间之后的请求。下面的例子配置了一个after路线谓词。\u003c/p\u003e\n\u003cp\u003eExample 1. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eafter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAfter=2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请求的时间只有在 \u003ccode\u003e2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/code\u003e 之后才会路由请求。\u003c/p\u003e\n\u003ch3 id=\"52-the-before-route-predicate-factory\"\u003e5.2. The Before Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u0026ldquo;Before\u0026quot;路由谓词工厂需要一个参数，即 \u0026ldquo;datetime\u0026rdquo;（它是一个java的 \u0026ldquo;ZonedDateTime\u0026rdquo;）。这个谓词匹配发生在指定的\u003ccode\u003edatetime\u003c/code\u003e之前的请求。下面的例子配置了一个before路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 2. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebefore_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eBefore=2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请求的时间只有在 \u003ccode\u003e2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/code\u003e 之前才会路由请求。\u003c/p\u003e\n\u003ch3 id=\"53-the-between-route-predicate-factory\"\u003e5.3. The Between Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eBetween\u003c/code\u003e路由谓词工厂需要两个参数，\u003ccode\u003edatetime1\u003c/code\u003e和\u003ccode\u003edatetime2\u003c/code\u003e，它们是java\u003ccode\u003eZonedDateTime\u003c/code\u003e对象。这个谓词匹配发生在\u003ccode\u003edatetime1\u003c/code\u003e之后和\u003ccode\u003edatetime2\u003c/code\u003e之前的请求。参数\u003ccode\u003edatetime2\u003c/code\u003e必须在\u003ccode\u003edatetime1\u003c/code\u003e之后。下面的例子配置了一个路由谓词之间。\u003c/p\u003e\n\u003cp\u003eExample 3. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebetween_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eBetween=2017-01-20T17:42:47.789-07:00[America/Denver], 2017-01-21T17:42:47.789-07:00[America/Denver]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这条路线匹配任何在\u003ccode\u003e2017-01-20T17:42:47.789-07:00[America/Denver]\u003c/code\u003e之后和\u003ccode\u003e2017-01-21T17:42:47.789-07:00[America/Denver]\u003c/code\u003e之前发起的请求。这对维护窗口可能是有用的。\u003c/p\u003e\n\u003ch3 id=\"54-the-cookie-route-predicate-factory\"\u003e5.4. The Cookie Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eCookie'路由谓词工厂接受两个参数，即cookie\u003c/code\u003e名称\u0026rsquo;和\u003ccode\u003eregexp\u003c/code\u003e（这是一个Java正则表达式）。这个谓词匹配具有给定名称且其值符合正则表达式的cookie。下面的例子配置了一个cookie路由谓词工厂。\u003c/p\u003e\n\u003cp\u003eExample 4. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecookie_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eCookie=chocolate, ch.p\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个路由匹配有一个名为 \u0026ldquo;chocolate\u0026quot;的cookie的请求，其值与 \u0026ldquo;ch.p\u0026quot;正则表达式匹配。\u003c/p\u003e\n\u003ch3 id=\"55-the-header-route-predicate-factory\"\u003e5.5. The Header Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e路由谓词工厂 \u0026ldquo;Header\u0026rdquo; 需要两个参数，header的 \u0026ldquo;name\u0026rdquo; 和 \u0026ldquo;regexp\u0026rdquo;（这是一个Java正则表达式）。这个谓词与具有给定名称且其值符合正则表达式的头匹配。下面的例子配置了一个hear的路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 5. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eHeader=X-Request-Id, \\d+\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求有一个名为\u003ccode\u003eX-Request-Id\u003c/code\u003e的头，其值与\u003ccode\u003ed+\u003c/code\u003e正则表达式相匹配（即，它有一个或多个数字的值），则该路由匹配。\u003c/p\u003e\n\u003ch3 id=\"56-the-host-route-predicate-factory\"\u003e5.6. The Host Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eHost\u003c/code\u003e路由谓词工厂接受一个参数：一个主机名称\u003ccode\u003epatterns\u003c/code\u003e的列表。模式是一个Ant风格的模式，以\u003ccode\u003e.\u003c/code\u003e作为分隔符。这个谓词匹配符合该模式的\u003ccode\u003eHost\u003c/code\u003e头。下面的例子配置了一个主机路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 6. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehost_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eHost=**.somehost.org,**.anotherhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也支持URI模板变量（如\u003ccode\u003e{sub}.myhost.org\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e如果请求有一个\u003ccode\u003eHost\u003c/code\u003e头，其值为\u003ccode\u003ewww.somehost.org\u003c/code\u003e或\u003ccode\u003ebeta.somehost.org\u003c/code\u003e或\u003ccode\u003ewww.anotherhost.org\u003c/code\u003e，则该路由匹配。\u003c/p\u003e\n\u003cp\u003e这个谓词提取URI模板变量（如\u003ccode\u003esub\u003c/code\u003e，在前面的例子中定义）作为名称和值的映射，并将其放在\u003ccode\u003eServerWebExchange.getAttributes()\u003c/code\u003e中，其键定义在\u003ccode\u003eServerWebExchangeUtils.URI_TEMPLATE_VARIABLES_ATTRIBUTE\u003c/code\u003e。然后，这些值可供\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-route-filters\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e factories\u003c/a\u003e 使用。\u003c/p\u003e\n\u003ch3 id=\"57-the-method-route-predicate-factory\"\u003e5.7. The Method Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e\u0026ldquo;Method\u0026quot;路由谓词工厂接受一个 \u0026ldquo;methods\u0026quot;参数，这是一个或多个参数：要匹配的HTTP方法。下面的例子配置了一个方法路径谓词。\u003c/p\u003e\n\u003cp\u003eExample 7. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emethod_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e- \u003cspan class=\"l\"\u003eMethod=GET,POST\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求方法是 \u0026ldquo;GET \u0026ldquo;或 \u0026ldquo;POST\u0026rdquo;，则该路由匹配。\u003c/p\u003e\n\u003ch3 id=\"58-the-path-route-predicate-factory\"\u003e5.8. The Path Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003ePath Route Predicate Factory需要两个参数：一个Spring \u003ccode\u003ePathMatcher\u003c/code\u003e模式的列表和一个可选的标志\u003ccode\u003ematchTrailingSlash\u003c/code\u003e（默认为\u003ccode\u003etrue\u003c/code\u003e）。下面的例子配置了一个路径路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 8. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/red/{segment},/blue/{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求路径是，例如：\u003ccode\u003e/red/1\u003c/code\u003e或\u003ccode\u003e/red/1/\u003c/code\u003e或\u003ccode\u003e/red/blue\u003c/code\u003e或\u003ccode\u003e/blue/green\u003c/code\u003e，则该路径匹配。\u003c/p\u003e\n\u003cp\u003e如果\u003ccode\u003ematchTrailingSlash\u003c/code\u003e被设置为\u003ccode\u003efalse\u003c/code\u003e，那么请求路径\u003ccode\u003e/red/1/\u003c/code\u003e将不被匹配。\u003c/p\u003e\n\u003cp\u003e这个谓词提取URI模板变量（如\u003ccode\u003esegment\u003c/code\u003e，在前面的例子中定义）作为名称和值的映射，并将其放在\u003ccode\u003eServerWebExchange.getAttributes()\u003c/code\u003e中，其键定义在\u003ccode\u003eServerWebExchangeUtils.URI_TEMPLATE_VARIABLES_ATTRIBUTE\u003c/code\u003e。这些值然后可供\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-route-filters\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e factories\u003c/a\u003e使用。\u003c/p\u003e\n\u003cp\u003e有一个实用的方法（称为 \u0026ldquo;get\u0026rdquo;），以使访问这些变量更加容易。下面的例子显示了如何使用\u003ccode\u003eget\u003c/code\u003e方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003euriVariables\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eServerWebExchangeUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetPathPredicateVariables\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003esegment\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003euriVariables\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;segment\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"59-the-query-route-predicate-factory\"\u003e5.9. The Query Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003e查询路由谓词工厂需要两个参数：一个必需的param和一个可选的regexp（这是一个Java正则表达式）。下面的例子配置了一个查询路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 9. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003equery_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eQuery=green\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求包含一个\u0026quot;green\u0026quot;的查询参数，前面的路由就会匹配。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003equery_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eQuery=red, gree.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求中包含一个\u003ccode\u003ered\u003c/code\u003e的查询参数，其值与\u003ccode\u003egree.\u003c/code\u003e的重合表达式相匹配，那么前面的路由就会匹配，所以\u003ccode\u003egreen\u003c/code\u003e和\u003ccode\u003egreet\u003c/code\u003e会匹配。\u003c/p\u003e\n\u003ch3 id=\"510-the-remoteaddr-route-predicate-factory\"\u003e5.10. The RemoteAddr Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003eRemoteAddr路由谓词工厂接受一个来源列表（最小尺寸为1），它是CIDR-注解（IPv4或IPv6）字符串，如192.168.0.1/16（其中192.168.0.1是一个IP地址，16是子网掩码）。下面的例子配置了一个RemoteAddr路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 10. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eremoteaddr_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRemoteAddr=192.168.1.1/24\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果请求的远程地址是，例如，192.168.1.10，则该路由匹配。\u003c/p\u003e\n\u003ch3 id=\"511-the-weight-route-predicate-factory\"\u003e5.11. The Weight Route Predicate Factory\u003c/h3\u003e\n\u003cp\u003eWeight路线谓语工厂需要两个参数：group 和weight （一个int）。weight 是按group计算的。下面的例子配置了一个权重路由谓词。\u003c/p\u003e\n\u003cp\u003eExample 11. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eweight_high\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://weighthigh.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eWeight=group1, 8\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eweight_low\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://weightlow.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eWeight=group1, 2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e此路由将转发~80%的流量到 \u003ccode\u003eweighthigh.org\u003c/code\u003e，~20%的流量到\u003ccode\u003eweightlow.org\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"5111-modifying-the-way-remote-addresses-are-resolved\"\u003e5.11.1. Modifying the Way Remote Addresses Are Resolved\u003c/h4\u003e\n\u003cp\u003e默认情况下，RemoteAddr路由谓语工厂使用传入请求中的远程地址。如果Spring Cloud Gateway位于代理层后面，这可能与实际的客户端IP地址不一致。\u003c/p\u003e\n\u003cp\u003e你可以通过设置自定义的\u003ccode\u003eRemoteAddressResolver\u003c/code\u003e来定制远程地址的解析方式。Spring Cloud Gateway有一个非默认的远程地址解析器，基于\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For\"\u003eX-Forwarded-For header\u003c/a\u003e，\u003ccode\u003eXForwardedRemoteAddressResolver\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eXForwardedRemoteAddressResolver\u003c/code\u003e有两个静态构造方法，它们采取不同的安全方法。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eXForwardedRemoteAddressResolver::trustAll\u003c/code\u003e返回一个\u003ccode\u003eRemoteAddressResolver\u003c/code\u003e，它总是采取在\u003ccode\u003eX-Forwarded-For\u003c/code\u003e头中发现的第一个IP地址。这种方法容易受到欺骗，因为恶意的客户可以为\u003ccode\u003eX-Forwarded-For\u003c/code\u003e设置一个初始值，这将被解析器所接受。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eXForwardedRemoteAddressResolver::maxTrustedIndex\u003c/code\u003e采取一个与Spring Cloud Gateway前面运行的受信任基础设施数量相关的索引。例如，如果Spring Cloud Gateway只能通过HAProxy访问，那么应该使用1的值。如果在Spring Cloud Gateway被访问之前需要两跳受信任的基础设施，那么应该使用2的值。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e考虑一下下面的标头值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eX-Forwarded-For: 0.0.0.1, 0.0.0.2, 0.0.0.3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以下\u003ccode\u003emaxTrustedIndex\u003c/code\u003e值产生以下远程地址。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003ccode\u003emaxTrustedIndex\u003c/code\u003e\u003c/th\u003e\n\u003cth\u003eresult\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e[ \u003ccode\u003eInteger.MIN_VALUE\u003c/code\u003e ,0]\u003c/td\u003e\n\u003ctd\u003e(invalid, \u003ccode\u003eIllegalArgumentException\u003c/code\u003e during initialization)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003e0.0.0.3\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003e0.0.0.2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003e0.0.0.1\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e[4, \u003ccode\u003eInteger.MAX_VALUE\u003c/code\u003e ]\u003c/td\u003e\n\u003ctd\u003e0.0.0.1\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e下面的例子显示了如何用Java实现同样的配置。\u003c/p\u003e\n\u003cp\u003eExample 12. GatewayConfig.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRemoteAddressResolver\u003c/span\u003e \u003cspan class=\"n\"\u003eresolver\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eXForwardedRemoteAddressResolver\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emaxTrustedIndex\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;direct-route\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eremoteAddr\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;10.1.1.1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;10.10.1.1/24\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://downstream1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;proxied-route\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eremoteAddr\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresolver\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;10.10.1.1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;10.10.1.1/24\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://downstream2\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"6-gatewayfilter-工厂\"\u003e6. GatewayFilter 工厂\u003c/h2\u003e\n\u003cp\u003e路由过滤器允许以某种方式修改传入的 HTTP 请求或传出的 HTTP 响应。路由过滤器的范围是一个特定的路由。Spring Cloud Gateway包括许多内置的GatewayFilter Factories。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关于如何使用以下任何过滤器的更详细的例子，请看\u003ca href=\"https://github.com/spring-cloud/spring-cloud-gateway/tree/master/spring-cloud-gateway-server/src/test/java/org/springframework/cloud/gateway/filter/factory\"\u003e单元测试\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"61-the-addrequestheader-gatewayfilter-factory\"\u003e6.1. The AddRequestHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eAddRequestHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂需要一个\u003ccode\u003ename\u003c/code\u003e和\u003ccode\u003evalue\u003c/code\u003e参数。下面的例子配置了一个\u003ccode\u003eAddRequestHeader\u003c/code\u003e的\u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 13. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_request_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddRequestHeader=X-Request-red, blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个列表将\u003ccode\u003eX-Request-red:blue\u003c/code\u003e头添加到所有匹配请求的下游请求的头文件中。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eAddRequestHeader\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并在运行时被扩展。下面的例子配置了一个\u003ccode\u003eAddRequestHeader``GatewayFilter\u003c/code\u003e，使用了一个变量。\u003c/p\u003e\n\u003cp\u003eExample 14. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_request_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/red/{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddRequestHeader=X-Request-Red, Blue-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"62-the-addrequestparameter-gatewayfilter-factory\"\u003e6.2. The AddRequestParameter GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eAddRequestParameter GatewayFilter Factory需要一个名称和值参数。下面的例子配置了一个AddRequestParameter GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 15. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_request_parameter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddRequestParameter=red, blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将为所有匹配的请求在下游请求的查询字符串中添加\u003ccode\u003ered=blue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eAddRequestParameter\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并在运行时被扩展。下面的例子配置了一个\u003ccode\u003eAddRequestParameter``GatewayFilter\u003c/code\u003e，使用了一个变量。\u003c/p\u003e\n\u003cp\u003eExample 16. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_request_parameter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e{\u003cspan class=\"l\"\u003esegment}.myhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddRequestParameter=foo, bar-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"63-the-addresponseheader-gatewayfilter-factory\"\u003e6.3. The AddResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eAddResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂需要一个\u003ccode\u003ename\u003c/code\u003e和\u003ccode\u003evalue\u003c/code\u003e参数。下面的例子配置了一个\u003ccode\u003eAddResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 17. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_response_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddResponseHeader=X-Response-Red, Blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将把\u003ccode\u003eX-Response-Foo:Bar\u003c/code\u003e头添加到所有匹配请求的下游响应的头文件中。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eAddResponseHeader\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并在运行时被扩展。下面的例子配置了一个\u003ccode\u003eAddResponseHeader``GatewayFilter\u003c/code\u003e，使用了一个变量。\u003c/p\u003e\n\u003cp\u003eExample 18. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eadd_response_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e{\u003cspan class=\"l\"\u003esegment}.myhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddResponseHeader=foo, bar-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"64-the-deduperesponseheader-gatewayfilter-factory\"\u003e6.4. The DedupeResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eDedupeResponseHeader GatewayFilter工厂接收一个\u003ccode\u003ename\u003c/code\u003e参数和一个可选的\u003ccode\u003estrategy\u003c/code\u003e参数。\u003ccode\u003ename\u003c/code\u003e可以包含一个以空格分隔的头名称列表。下面的例子配置了一个\u003ccode\u003eDedupeResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ededupe_response_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eDedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在网关CORS逻辑和下游逻辑都添加了\u003ccode\u003eAccess-Control-Allow-Credentials\u003c/code\u003e和\u003ccode\u003eAccess-Control-Allow-Origin\u003c/code\u003e响应头的情况下，这将删除重复的值。\u003c/p\u003e\n\u003cp\u003eDedupeResponseHeader 过滤器还接受一个可选的 \u003ccode\u003estrategy\u003c/code\u003e 参数。接受的值是\u003ccode\u003eRETAIN_FIRST\u003c/code\u003e（默认），\u003ccode\u003eRETAIN_LAST\u003c/code\u003e，和\u003ccode\u003eRETAIN_UNIQUE\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"65-spring-cloud-circuitbreaker-gatewayfilter-factory\"\u003e6.5. Spring Cloud CircuitBreaker GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker GatewayFilter工厂使用Spring Cloud CircuitBreaker APIs将Gateway路由包裹在一个断路器中。Spring Cloud CircuitBreaker支持多个可与Spring Cloud Gateway一起使用的库。Spring Cloud支持Resilience4J开箱即用。\u003c/p\u003e\n\u003cp\u003e要启用Spring Cloud CircuitBreaker过滤器，你需要将\u003ccode\u003espring-cloud-starter-circuitbreaker-reactor-resilience4j\u003c/code\u003e放在classpath上。下面的例子配置了一个Spring Cloud CircuitBreaker \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 20. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecircuitbreaker_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eCircuitBreaker=myCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要配置断路器，请参阅你所使用的底层断路器实现的配置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cloud.spring.io/spring-cloud-circuitbreaker/reference/html/spring-cloud-circuitbreaker.html\"\u003eResilience4J Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker过滤器也可以接受一个可选的\u003ccode\u003efallbackUri\u003c/code\u003e参数。目前，只支持\u003ccode\u003eforward:\u003c/code\u003e模式化的URI。如果回退被调用，请求将被转发到URI所匹配的控制器。下面的例子配置了这样一个fallback。\u003c/p\u003e\n\u003cp\u003eExample 21. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecircuitbreaker_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://backing-service:8088\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/consumingServiceEndpoint\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eforward:/inCaseOfFailureUseThis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRewritePath=/consumingServiceEndpoint, /backingServiceEndpoint\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的列表在Java中做同样的事情。\u003c/p\u003e\n\u003cp\u003eExample 22. Application.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;circuitbreaker_route\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/consumingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreaker\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;myCircuitBreaker\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;forward:/inCaseOfFailureUseThis\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erewritePath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/consumingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/backingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lb://backing-service:8088\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e本例在调用断路器回退时转发到\u003ccode\u003e/inCaseofFailureUseThis\u003c/code\u003e URI。请注意，这个例子还演示了（可选）Spring Cloud LoadBalancer的负载均衡（由目标URI上的\u003ccode\u003elb\u003c/code\u003e前缀定义）。\u003c/p\u003e\n\u003cp\u003e主要情况是使用\u003ccode\u003efallbackUri\u003c/code\u003e来定义网关应用中的内部控制器或处理器。然而，你也可以将请求重新路由到外部应用程序的控制器或处理程序，如下所示。\u003c/p\u003e\n\u003cp\u003eExample 23. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eingredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://ingredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=//ingredients/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efetchIngredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eforward:/fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eingredients-fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:9994\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个例子中，网关应用程序中没有 \u003ccode\u003efallback\u003c/code\u003e 端点或处理程序。然而，在另一个应用程序中有一个，在\u003ccode\u003elocalhost:9994\u003c/code\u003e下注册。\u003c/p\u003e\n\u003cp\u003e在请求被转发到回退的情况下，Spring Cloud CircuitBreaker Gateway过滤器也提供了引起该请求的\u003ccode\u003eThrowable\u003c/code\u003e。它作为 \u003ccode\u003eServerWebExchangeUtils.CIRCUITBREAKER_EXECUTION_EXCEPTION_ATTR\u003c/code\u003e 属性被添加到 \u003ccode\u003eServerWebExchange\u003c/code\u003e 中，在网关应用程序中处理fallback时可以使用。\u003c/p\u003e\n\u003cp\u003e对于外部控制器/处理程序的情况，可以添加带有异常细节的头文件。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#fallback-headers\"\u003eFallbackHeaders GatewayFilter Factory section\u003c/a\u003e 中找到更多关于这样做的信息。\u003c/p\u003e\n\u003ch4 id=\"651-状态码中的断路器熔断\"\u003e6.5.1. 状态码中的断路器熔断\u003c/h4\u003e\n\u003cp\u003e在某些情况下，你可能想根据它所包裹的路由返回的状态代码来熔断。断路器配置对象需要一个状态代码列表，如果返回这些代码将导致断路器熔断。当设置你想让断路器熔断的状态代码时，你可以使用一个带有状态代码值的整数或HttpStatus枚举的字符串表示。\u003c/p\u003e\n\u003cp\u003eExample 24. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecircuitbreaker_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://backing-service:8088\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/consumingServiceEndpoint\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eforward:/inCaseOfFailureUseThis\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003estatusCodes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e- \u003cspan class=\"m\"\u003e500\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e- \u003cspan class=\"s2\"\u003e\u0026#34;NOT_FOUND\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eExample 25. Application.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;circuitbreaker_route\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/consumingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecircuitBreaker\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;myCircuitBreaker\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;forward:/inCaseOfFailureUseThis\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eaddStatusCode\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;INTERNAL_SERVER_ERROR\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erewritePath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/consumingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/backingServiceEndpoint\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;lb://backing-service:8088\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"66-the-fallbackheaders-gatewayfilter-factory\"\u003e6.6. The FallbackHeaders GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e通过\u003ccode\u003eFallbackHeaders\u003c/code\u003e工厂，你可以在转发到外部应用程序中的\u003ccode\u003efallbackUri\u003c/code\u003e的请求的标题中添加\u003ccode\u003eSpring Cloud CircuitBreaker\u003c/code\u003e的执行异常细节，如以下场景。\u003c/p\u003e\n\u003cp\u003eExample 26. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eingredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://ingredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=//ingredients/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eCircuitBreaker\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efetchIngredients\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efallbackUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eforward:/fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eingredients-fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:9994\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/fallback\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eFallbackHeaders\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eexecutionExceptionTypeHeaderName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eTest-Header\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个例子中，在运行断路器时发生执行异常后，请求被转发到运行在\u003ccode\u003elocalhost:9994\u003c/code\u003e的应用程序中的\u003ccode\u003efallback\u003c/code\u003e端点或处理器。带有异常类型、消息和（如果有）根本原因的异常类型和消息的头文件被\u003ccode\u003eFallbackHeaders\u003c/code\u003e过滤器添加到该请求中。\u003c/p\u003e\n\u003cp\u003e你可以通过设置以下参数的值来覆盖配置中的头文件名称（显示为默认值）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eexecutionExceptionTypeHeaderName\u003c/code\u003e ( \u003ccode\u003e\u0026quot;Execution-Exception-Type\u0026quot;\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eexecutionExceptionMessageHeaderName\u003c/code\u003e ( \u003ccode\u003e\u0026quot;Execution-Exception-Message\u0026quot;\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erootCauseExceptionTypeHeaderName\u003c/code\u003e ( \u003ccode\u003e\u0026quot;Root-Cause-Exception-Type\u0026quot;\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erootCauseExceptionMessageHeaderName\u003c/code\u003e ( \u003ccode\u003e\u0026quot;Root-Cause-Exception-Message\u0026quot;\u003c/code\u003e )\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e关于断路器和网关的更多信息，请参阅\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#spring-cloud-circuitbreaker-filter-factory\"\u003eSpring Cloud CircuitBreaker Factory部分\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"67-the-maprequestheader-gatewayfilter-factory\"\u003e6.7. The MapRequestHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eMapRequestHeader GatewayFilter工厂接受fromHeader和toHeader参数。它创建一个新的命名头（toHeader），并从传入的http请求的现有命名头（fromHeader）中提取值。如果输入的头不存在，过滤器没有任何影响。如果新的命名头信息已经存在，它的值就会被增加新的值。下面的例子配置了一个MapRequestHeader。\u003c/p\u003e\n\u003cp\u003eExample 27. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emap_request_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eMapRequestHeader=Blue, X-Request-Red\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在下游请求中添加\u003ccode\u003eX-Request-Red:\u0026lt;values\u0026gt;\u003c/code\u003e头，并从传入的HTTP请求的\u003ccode\u003eBlue\u003c/code\u003e头中更新数值。\u003c/p\u003e\n\u003ch3 id=\"68-the-prefixpath-gatewayfilter-factory\"\u003e6.8. The PrefixPath GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003ePrefixPath GatewayFilter工厂需要一个前缀参数。下面的例子配置了一个PrefixPath GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 28. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eprefixpath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePrefixPath=/mypath\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将把\u003ccode\u003e/mypath\u003c/code\u003e作为所有匹配请求的路径的前缀。因此，一个到\u003ccode\u003e/hello\u003c/code\u003e的请求将被发送到\u003ccode\u003e/mypath/hello\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"69-the-preservehostheader-gatewayfilter-factory\"\u003e6.9. The PreserveHostHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003ePreserveHostHeader GatewayFilter工厂没有参数。这个过滤器设置一个请求属性，路由过滤器会检查该属性，以确定是否应该发送原始的主机头，而不是由HTTP客户端确定的主机头。下面的例子配置了一个PreserveHostHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 29. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epreserve_host_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePreserveHostHeader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"610-the-requestratelimiter-gatewayfilter-factory\"\u003e6.10. The RequestRateLimiter GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRequestRateLimiter``GatewayFilter\u003c/code\u003e工厂使用\u003ccode\u003eRateLimiter\u003c/code\u003e实现来确定是否允许当前请求继续进行。如果不允许，将返回 \u0026ldquo;HTTP 429 - Too Many Requests\u0026rdquo;（默认）的状态。\u003c/p\u003e\n\u003cp\u003e这个过滤器需要一个可选的\u003ccode\u003ekeyResolver\u003c/code\u003e参数和特定于速率限制器的参数（在本节后面描述）。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ekeyResolver\u003c/code\u003e是一个实现\u003ccode\u003eKeyResolver\u003c/code\u003e接口的bean。在配置中，使用SpEL来引用Bean的名字。\u003ccode\u003e#{@myKeyResolver}\u003c/code\u003e是一个SpEL表达式，它引用了一个名为\u003ccode\u003emyKeyResolver\u003c/code\u003e的bean。下面的列表显示了\u003ccode\u003eKeyResolver\u003c/code\u003e的接口。\u003c/p\u003e\n\u003cp\u003eExample 30. KeyResolver.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eKeyResolver\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eresolve\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eServerWebExchange\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eKeyResolver\u003c/code\u003e接口让可插拔的策略得出限制请求的密钥。在未来的里程碑版本中，会有一些\u003ccode\u003eKeyResolver\u003c/code\u003e的实现。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eKeyResolver\u003c/code\u003e的默认实现是\u003ccode\u003ePrincipalNameKeyResolver\u003c/code\u003e，它从\u003ccode\u003eServerWebExchange\u003c/code\u003e中检索\u003ccode\u003ePrincipal\u003c/code\u003e并调用\u003ccode\u003ePrincipal.getName()\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e默认情况下，如果\u003ccode\u003eKeyResolver\u003c/code\u003e没有找到一个密钥，请求将被拒绝。你可以通过设置\u003ccode\u003espring.cloud.gateway.filter.request-rate-limiter.deny-empty-key\u003c/code\u003e（\u003ccode\u003etrue\u003c/code\u003e或\u003ccode\u003efalse\u003c/code\u003e）和\u003ccode\u003espring.cloud.gateway.filter.request-rate-limiter.empty-key-status-code\u003c/code\u003e属性调整这种行为。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eRequestRateLimiter\u003c/code\u003e 不能用 \u0026ldquo;快捷方式\u0026rdquo; 符号来配置。下面的例子是无效的\u003c/p\u003e\n\u003cp\u003eExample 31. application.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e# INVALID SHORTCUT CONFIGURATION\nspring.cloud.gateway.routes[0].filters[0]=RequestRateLimiter=2, 2, #{@userkeyresolver}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"6101-redis-ratelimiter\"\u003e6.10.1. Redis RateLimiter\u003c/h4\u003e\n\u003cp\u003eRedis的实现是基于\u003ca href=\"https://stripe.com/blog/rate-limiters\"\u003eStripe\u003c/a\u003e的工作。它需要使用\u003ccode\u003espring-boot-starter-data-redis-reactive\u003c/code\u003e Spring Boot启动器。\u003c/p\u003e\n\u003cp\u003e使用的算法是\u003ca href=\"https://en.wikipedia.org/wiki/Token_bucket\"\u003eToken Bucket Algorithm\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eredis-rate-limiter.replenishRate\u003c/code\u003e属性是你希望用户每秒可以做多少个请求，而不允许有任何放弃的请求。这就是代币桶被填充的速度。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eredis-rate-limiter.burstCapacity\u003c/code\u003e属性是允许一个用户在一秒钟内完成的最大请求数。这是代币桶可以容纳的代币数量。将此值设置为零，可以阻止所有请求。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eredis-rate-limiter.requestedTokens\u003c/code\u003e属性是一个请求需要花费多少代币。这是每次请求时从桶中取出的代币数量，默认为\u003ccode\u003e1\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e稳定的速率是通过在\u003ccode\u003ereplenishRate\u003c/code\u003e和\u003ccode\u003eburstCapacity\u003c/code\u003e中设置相同的值来完成的。通过设置\u003ccode\u003eburstCapacity'高于\u003c/code\u003ereplenishRate'，可以允许临时的突发。在这种情况下，速率限制器需要在突发之间允许一些时间（根据\u003ccode\u003ereplenishRate\u003c/code\u003e），因为连续两次突发将导致请求被放弃（\u003ccode\u003eHTTP 429 - Too Many Requests\u003c/code\u003e）。下面的列表配置了一个\u003ccode\u003eredis-rate-limiter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e通过设置 \u003ccode\u003ereplenishRate\u003c/code\u003e 为想要的请求数，\u003ccode\u003erequestedTokens\u003c/code\u003e 为秒数，\u003ccode\u003eburstCapacity\u003c/code\u003e 为 \u003ccode\u003ereplenishRate\u003c/code\u003e 和 \u003ccode\u003erequestedTokens\u003c/code\u003e 的乘积，来实现低于 \u003ccode\u003e1 request/s\u003c/code\u003e 的速率限制，例如，设置 \u003ccode\u003ereplenishRate=1\u003c/code\u003e，\u003ccode\u003erequestedTokens=60\u003c/code\u003e 和 \u003ccode\u003eburstCapacity=60\u003c/code\u003e 将导致限制为 \u003ccode\u003e1 request/min\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 32. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erequestratelimiter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRequestRateLimiter\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis-rate-limiter.replenishRate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis-rate-limiter.burstCapacity\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eredis-rate-limiter.requestedTokens\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子在Java中配置了一个KeyResolver。\u003c/p\u003e\n\u003cp\u003eExample 33. Config.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eKeyResolver\u003c/span\u003e \u003cspan class=\"nf\"\u003euserKeyResolver\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetQueryParams\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetFirst\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这定义了每个用户的请求率限制为10。爆发20次是允许的，但是，在下一秒，只有10个请求可以使用。\u003ccode\u003eKeyResolver\u003c/code\u003e 是一个简单的，获得 \u003ccode\u003euser\u003c/code\u003e 请求参数（注意，不建议在生产中这样做）。\u003c/p\u003e\n\u003cp\u003e你也可以把速率限制器定义为一个实现\u003ccode\u003eRateLimiter\u003c/code\u003e接口的bean。在配置中，你可以用SpEL来引用bean的名字。\u003ccode\u003e#{@myRateLimiter}\u003c/code\u003e是一个SpEL表达式，引用一个名为\u003ccode\u003emyRateLimiter\u003c/code\u003e的bean。下面的列表定义了一个速率限制器，它使用了前面列表中定义的\u003ccode\u003eKeyResolver\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 34. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erequestratelimiter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRequestRateLimiter\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003erate-limiter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;#{@myRateLimiter}\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-resolver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;#{@userKeyResolver}\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"611-the-redirectto-gatewayfilter-factory\"\u003e6.11. The RedirectTo GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRedirectTo\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂需要两个参数，\u003ccode\u003estatus\u003c/code\u003e和\u003ccode\u003eurl\u003c/code\u003e。\u003ccode\u003estatus\u003c/code\u003e参数应该是一个300系列的重定向HTTP代码，如301。\u003ccode\u003eurl\u003c/code\u003e参数应该是一个有效的URL。这是\u003ccode\u003eLocation\u003c/code\u003e头的值。对于相对重定向，你应该使用\u003ccode\u003euri: no://op\u003c/code\u003e作为路由定义的URI。下面的列表配置了一个\u003ccode\u003eRedirectTo\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 35. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eprefixpath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRedirectTo=302, https://acme.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将发送一个带有\u003ccode\u003eLocation:https://acme.org\u003c/code\u003e头的状态302来执行重定向。\u003c/p\u003e\n\u003ch3 id=\"612-the-removerequestheader-gatewayfilter-factory\"\u003e6.12. The RemoveRequestHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRemoveRequestHeader GatewayFilter工厂需要一个name参数。它是要删除的头的名称。下面的列表配置了一个RemoveRequestHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 36. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eremoverequestheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRemoveRequestHeader=X-Request-Foo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这在向下游发送之前删除了\u003ccode\u003eX-Request-Foo\u003c/code\u003e标头。\u003c/p\u003e\n\u003ch3 id=\"613-removeresponseheader-gatewayfilter-factory\"\u003e6.13. RemoveResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRemoveResponseHeader GatewayFilter工厂需要一个name参数。它是要删除的头的名称。下面的列表配置了一个RemoveResponseHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 37. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eremoveresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRemoveResponseHeader=X-Response-Foo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e他将在响应返回到网关客户端之前从响应中删除\u003ccode\u003eX-Response-Foo\u003c/code\u003e头。\u003c/p\u003e\n\u003cp\u003e要删除任何种类的敏感头，你应该为任何你可能想这样做的路由配置这个过滤器。此外，你可以通过使用\u003ccode\u003espring.cloud.gateway.default-filters\u003c/code\u003e来配置一次这个过滤器，并让它应用于所有路由。\u003c/p\u003e\n\u003ch3 id=\"614-the-removerequestparameter-gatewayfilter-factory\"\u003e6.14. The RemoveRequestParameter GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRemoveRequestParameter GatewayFilter工厂需要一个名称参数。它是要删除的查询参数的名称。下面的例子配置了一个RemoveRequestParameter GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 38. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eremoverequestparameter_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRemoveRequestParameter=red\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将在向下游发送之前删除\u003ccode\u003ered\u003c/code\u003e参数。\u003c/p\u003e\n\u003ch3 id=\"615-the-rewritepath-gatewayfilter-factory\"\u003e6.15. The RewritePath GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRewritePath\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂接收一个路径\u003ccode\u003eregexp\u003c/code\u003e参数和一个\u003ccode\u003ereplacement\u003c/code\u003e参数。这是用Java正则表达式来重写请求路径的一种灵活方式。下面的列表配置了一个\u003ccode\u003eRewritePath\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 39. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erewritepath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/red/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRewritePath=/red/?(?\u0026lt;segment\u0026gt;.*), /$\\{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于一个\u003ccode\u003e/red/blue\u003c/code\u003e的请求路径，在进行下游请求之前将路径设置为\u003ccode\u003e/blue\u003c/code\u003e。注意，由于YAML规范，\u003ccode\u003e$\u003c/code\u003e应该被替换成\u003ccode\u003e$\\\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"616-rewritelocationresponseheader-gatewayfilter-factory\"\u003e6.16. RewriteLocationResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRewriteLocationResponseHeader GatewayFilter工厂修改Location响应头的值，通常是为了去掉后台的特定细节。它需要 \u003ccode\u003estripVersionMode\u003c/code\u003e、\u003ccode\u003elocationHeaderName\u003c/code\u003e、\u003ccode\u003ehostValue\u003c/code\u003e 和 \u003ccode\u003eprotocolsRegex\u003c/code\u003e 参数。下面的列表配置了一个RewriteLocationResponseHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 40. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erewritelocationresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRewriteLocationResponseHeader=AS_IN_REQUEST, Location, ,\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e例如，对于一个\u003ccode\u003ePOST api.example.com/some/object/name\u003c/code\u003e的请求，\u003ccode\u003eLocation\u003c/code\u003e的响应头值\u003ccode\u003eobject-service.prod.example.net/v2/some/object/id\u003c/code\u003e被改写为\u003ccode\u003eapi.example.com/some/object/id\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003estripVersionMode\u003c/code\u003e参数有以下可能的值。\u003ccode\u003eNEVER_STRIP\u003c/code\u003e, \u003ccode\u003eAS_IN_REQUEST\u003c/code\u003e (默认), 和 \u003ccode\u003eALWAYS_STRIP\u003c/code\u003e 。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNEVER_STRIP\u003c/code\u003e : 即使原始请求路径不包含版本，版本也不会被剥离。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eAS_IN_REQUEST\u003c/code\u003e 只有在原始请求路径不包含版本的情况下，版本才会被剥离。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eALWAYS_STRIP\u003c/code\u003e 即使原始请求路径包含版本，版本也会被剥离。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003ehostValue\u003c/code\u003e参数，如果提供的话，用于替换响应\u003ccode\u003eLocation\u003c/code\u003e头的\u003ccode\u003ehost:port\u003c/code\u003e部分。如果没有提供，则使用\u003ccode\u003eHost\u003c/code\u003e请求头的值。\u003c/p\u003e\n\u003cp\u003e参数 \u003ccode\u003eprotocolsRegex\u003c/code\u003e 必须是一个有效的正则 \u003ccode\u003eString\u003c/code\u003e，与协议名称相匹配。如果没有匹配，过滤器不做任何事情。默认是\u003ccode\u003ehttp|https|ftp|ftps\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"617-the-rewriteresponseheader-gatewayfilter-factory\"\u003e6.17. The RewriteResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eRewriteResponseHeader GatewayFilter工厂接受名称、regexp和替换参数。它使用Java正则表达式，以一种灵活的方式重写响应头的值。下面的例子配置了一个RewriteResponseHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 41. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erewriteresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eRewriteResponseHeader=X-Response-Red, , password=[^\u0026amp;]+, password=***\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于一个头值为\u003ccode\u003e/42?user=ford\u0026amp;password=omg!what\u0026amp;flag=true\u003c/code\u003e，它在发出下游请求后被设置为\u003ccode\u003e/42?user=ford\u0026amp;password=***\u0026amp;flag=true\u003c/code\u003e。由于YAML的规范，你必须用\u003ccode\u003e$\\\u003c/code\u003e来表示\u003ccode\u003e$\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"618-the-savesession-gatewayfilter-factory\"\u003e6.18. The SaveSession GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSaveSession GatewayFilter工厂在转发下游调用之前强制进行\u003ccode\u003eWebSession::save\u003c/code\u003e操作。这在使用类似\u003ccode\u003eSpring Session\u003c/code\u003e的懒惰数据存储时特别有用，因为你需要确保在进行转发调用之前已经保存了会话状态。下面的例子配置了一个SaveSession GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 42. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esave_session\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/foo/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSaveSession\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你将\u003ca href=\"https://projects.spring.io/spring-security/\"\u003eSpring Security\u003c/a\u003e与Spring Session集成，并希望确保安全细节已被转发给远程进程，这一点至关重要。\u003c/p\u003e\n\u003ch3 id=\"619-the-secureheaders-gatewayfilter-factory\"\u003e6.19. The SecureHeaders GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSecureHeaders\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂根据\u003ca href=\"https://blog.appcanary.com/2017/http-security-headers.html\"\u003e本博文\u003c/a\u003e的建议，在响应中添加了一些头信息。\u003c/p\u003e\n\u003cp\u003e添加了以下标题（显示的是其默认值）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eX-Xss-Protection:1 (mode=block\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eStrict-Transport-Security (max-age=631138519\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX-Frame-Options (DENY)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX-Content-Type-Options (nosniff)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eReferrer-Policy (no-referrer)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eContent-Security-Policy (default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src https:; style-src 'self' https: 'unsafe-inline)'\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX-Download-Options (noopen)\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX-Permitted-Cross-Domain-Policies (none)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e要改变默认值，请在\u003ccode\u003espring.cloud.gateway.filter.secure-headers\u003c/code\u003e命名空间中设置相应的属性。以下属性是可用的。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003exss-protection-header\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estrict-transport-security\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex-frame-options\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex-content-type-options\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereferrer-policy\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econtent-security-policy\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex-download-options\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ex-permitted-cross-domain-policies\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e要禁用默认值，请用逗号分隔的值设置\u003ccode\u003espring.cloud.gateway.filter.secure-headers.disable\u003c/code\u003e属性。下面的例子显示了如何做到这一点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.gateway.filter.secure-headers.disable=x-frame-options,strict-transport-security\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e需要使用安全头的小写全名来禁用它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"620-the-setpath-gatewayfilter-factory\"\u003e6.20. The SetPath GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSetPath GatewayFilter工厂接受一个路径模板参数。它提供了一种简单的方法，通过允许模板化的路径段来操作请求路径。这使用了Spring Framework的URI模板。允许多个匹配段。下面的例子配置了一个SetPath GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 43. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetpath_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/red/{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetPath=/{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于请求路径为\u003ccode\u003e/red/blue\u003c/code\u003e的情况，在进行下游请求前将路径设置为\u003ccode\u003e/blue\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"621-the-setrequestheader-gatewayfilter-factory\"\u003e6.21. The SetRequestHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSetRequestHeader GatewayFilter工厂接受name和value参数。下面的列表配置了一个SetRequestHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 44. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetrequestheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetRequestHeader=X-Request-Red, Blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个\u003ccode\u003eGatewayFilter\u003c/code\u003e替换（而不是添加）所有给定名称的头信息。因此，如果下游服务器响应的是\u003ccode\u003eX-Request-Red:1234\u003c/code\u003e，这将被替换为\u003ccode\u003eX-Request-Red:Blue\u003c/code\u003e，这就是下游服务将收到的内容。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSetRequestHeader\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并在运行时被扩展。下面的例子配置了一个使用变量的\u003ccode\u003eSetRequestHeader``GatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 45. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetrequestheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e{\u003cspan class=\"l\"\u003esegment}.myhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetRequestHeader=foo, bar-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"622-the-setresponseheader-gatewayfilter-factory\"\u003e6.22. The SetResponseHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eSetResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂接受\u003ccode\u003ename\u003c/code\u003e和\u003ccode\u003evalue\u003c/code\u003e参数。下面的列表配置了一个\u003ccode\u003eSetResponseHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 46. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetResponseHeader=X-Response-Red, Blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个GatewayFilter会替换（而不是添加）所有给定名称的头信息。因此，如果下游服务器响应的是\u003ccode\u003eX-Response-Red:1234\u003c/code\u003e，这将被替换为\u003ccode\u003eX-Response-Red:Blue\u003c/code\u003e，这就是网关客户端将收到的内容。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eSetResponseHeader\u003c/code\u003e知道用于匹配路径或主机的URI变量。URI变量可以在值中使用，并将在运行时被扩展。下面的例子配置了一个\u003ccode\u003eSetResponseHeader``GatewayFilter\u003c/code\u003e，使用了一个变量。\u003c/p\u003e\n\u003cp\u003eExample 47. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetresponseheader_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003eHost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e{\u003cspan class=\"l\"\u003esegment}.myhost.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetResponseHeader=foo, bar-{segment}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"623-the-setstatus-gatewayfilter-factory\"\u003e6.23. The SetStatus GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eSetStatus GatewayFilter工厂只接受一个参数，即status。它必须是一个有效的Spring HttpStatus。它可以是\u003ccode\u003e404\u003c/code\u003e的整数值或枚举的字符串表示。\u003ccode\u003eNOT_FOUND\u003c/code\u003e。下面的列表配置了一个SetStatus GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 48. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetstatusstring_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetStatus=BAD_REQUEST\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetstatusint_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetStatus=401\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这两种情况下，响应的HTTP状态被设置为401。\u003c/p\u003e\n\u003cp\u003e你可以配置\u003ccode\u003eSetStatus\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e，在响应中的一个头中返回代理请求的原始HTTP状态代码。如果配置了以下属性，该头会被添加到响应中。\u003c/p\u003e\n\u003cp\u003eExample 49. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eset-status\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eoriginal-status-header-name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eoriginal-http-status\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"624-the-stripprefix-gatewayfilter-factory\"\u003e6.24. The StripPrefix GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eStripPrefix GatewayFilter工厂需要一个参数，即parts。parts参数表示在向下游发送请求之前要从路径中剥离的部分的数量。下面的列表配置了一个StripPrefix GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 50. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enameRoot\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://nameservice\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/name/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eStripPrefix=2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当通过网关向\u003ccode\u003e/name/blue/red\u003c/code\u003e发出请求时，向\u003ccode\u003enameservice\u003c/code\u003e发出的请求看起来像\u003ccode\u003enameservice/red\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"625-the-retry-gatewayfilter-factory\"\u003e6.25. The Retry GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRetry\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂支持以下参数。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eretries\u003c/code\u003e : 应该尝试的重试次数。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estatuses\u003c/code\u003e : 应该重试的HTTP状态代码，用\u003ccode\u003eorg.springframework.http.HttpStatus\u003c/code\u003e表示。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emethods\u003c/code\u003e：应该重试的HTTP方法，用\u003ccode\u003eorg.springframework.http.HttpMethod\u003c/code\u003e表示。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eseries\u003c/code\u003e：要重试的状态代码系列，用\u003ccode\u003eorg.springframework.http.HttpStatus.Series\u003c/code\u003e表示。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eexceptions\u003c/code\u003e : 抛出的异常列表，应该被重新尝试。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebackoff\u003c/code\u003e：为重试配置的指数后验。重试的时间间隔为\u003ccode\u003efirstBackoff * (factor ^ n)\u003c/code\u003e，其中\u003ccode\u003en\u003c/code\u003e是迭代次数。如果配置了 \u0026ldquo;maxBackoff\u0026rdquo;，应用的最大后退时间限制为 \u003ccode\u003emaxBackoff\u003c/code\u003e。如果\u003ccode\u003ebasedOnPreviousValue\u003c/code\u003e为真，后退是通过\u003ccode\u003eprevBackoff * factor\u003c/code\u003e计算的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果启用了 \u003ccode\u003eRetry\u003c/code\u003e 过滤器，下列默认值被配置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eretries\u003c/code\u003e : Three times\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eseries\u003c/code\u003e : 5XX series\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emethods\u003c/code\u003e : GET method\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eexceptions\u003c/code\u003e : \u003ccode\u003eIOException\u003c/code\u003e and \u003ccode\u003eTimeoutException\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebackoff\u003c/code\u003e : disabled\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e下面的列表配置了一个重试的\u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 51. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eretry_test\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:8080/flakey\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eHost=*.retry.com\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRetry\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eretries\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003estatuses\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eBAD_GATEWAY\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emethods\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eGET,POST\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ebackoff\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003efirstBackoff\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e10ms\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003emaxBackoff\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e50ms\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003efactor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ebasedOnPreviousValue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e当使用带有\u003ccode\u003eforward:\u003c/code\u003e前缀的URL的重试过滤器时，应仔细编写目标端点，以便在出现错误时，它不会做任何可能导致响应被发送到客户端并提交的事情。例如，如果目标端点是一个有注释的控制器，目标控制器方法不应该返回\u003ccode\u003eResponseEntity\u003c/code\u003e，并带有错误状态代码。相反，它应该抛出一个\u003ccode\u003eException\u003c/code\u003e或发出一个错误信号（例如，通过\u003ccode\u003eMono.error(ex)\u003c/code\u003e返回值），重试过滤器可以被配置为通过重试来处理。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当对任何带有请求体的HTTP方法使用重试过滤器时，请求体将被缓存，网关将变得内存有限。请求体被缓存在一个由\u003ccode\u003eServerWebExchangeUtils.CACHED_REQUEST_BODY_ATTR\u003c/code\u003e定义的请求属性中。该对象的类型是\u003ccode\u003eorg.springframework.core.io.buffer.DataBuffer\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"626-the-requestsize-gatewayfilter-factory\"\u003e6.26. The RequestSize GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e当请求的大小超过允许的限制时，\u003ccode\u003eRequestSize\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂可以限制请求到达下游服务。该过滤器需要一个\u003ccode\u003emaxSize\u003c/code\u003e参数。\u003ccode\u003emaxSize\u003c/code\u003e是一个\u003ccode\u003eDataSize\u003c/code\u003e类型，所以值可以定义为一个数字，后面有一个可选的\u003ccode\u003eDataUnit\u003c/code\u003e后缀，如\u003ccode\u003eKB\u003c/code\u003e或\u003ccode\u003eMB\u003c/code\u003e。默认值是\u003ccode\u003eB\u003c/code\u003e，表示字节数。它是以字节为单位定义的请求的可允许的大小限制。下面的列表配置了一个\u003ccode\u003eRequestSize\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 52. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erequest_size_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:8080/upload\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/upload\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRequestSize\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003emaxSize\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRequestSize GatewayFilter工厂将响应状态设置为413 Payload Too Large，当请求由于大小而被拒绝时，会有一个额外的头 errorMessage。下面的例子显示了这样一个errorMessage。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eerrorMessage` : `Request size is larger than permissible limit. Request size is 6.0 MB where permissible limit is 5.0 MB\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果在路由定义中没有提供过滤参数，默认请求大小被设置为5MB。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"627-the-setrequesthostheader-gatewayfilter-factory\"\u003e6.27. The SetRequestHostHeader GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e在某些情况下，host header可能需要被重写。在这种情况下，SetRequestHostHeader GatewayFilter工厂可以将现有的host header替换成指定的vaue。该过滤器需要一个\u003ccode\u003ehost\u003c/code\u003e参数。下面的列表配置了一个SetRequestHostHeader GatewayFilter。\u003c/p\u003e\n\u003cp\u003eExample 53. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eset_request_host_header_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:8080/headers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/headers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSetRequestHostHeader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eexample.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eSetRequestHostHeader\u003c/code\u003e \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂将主机头的值替换为\u003ccode\u003eexample.org\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"628-modify-a-request-body-gatewayfilter-factory\"\u003e6.28. Modify a Request Body GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e你可以使用ModifyRequestBody过滤器，在网关向下游发送请求体之前对其进行修改。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这个过滤器只能通过使用Java DSL来配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下面的列表显示了如何修改一个请求体GatewayFilter。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;rewrite_request_obj\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*.rewriterequestobj.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprefixPath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/httpbin\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emodifyRequestBody\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eHello\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMediaType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eAPPLICATION_JSON_VALUE\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eHello\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e())))).\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHello\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eHello\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eHello\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003esetMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果请求没有正文，\u003ccode\u003eRewriteFilter\u003c/code\u003e将被传递为空。应该返回\u003ccode\u003eMono.empty()\u003c/code\u003e来指定请求中缺少的主体。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"629-modify-a-response-body-gatewayfilter-factory\"\u003e6.29. Modify a Response Body GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003e你可以使用ModifyResponseBody过滤器来修改响应体，然后再把它送回给客户端。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这个过滤器只能通过使用Java DSL来配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下面的列表显示了如何修改一个响应体GatewayFilter。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;rewrite_response_upper\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*.rewriteresponseupper.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprefixPath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/httpbin\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emodifyResponseBody\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e()))).\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果响应没有正文，\u003ccode\u003eRewriteFilter\u003c/code\u003e将被传递为空。应该返回\u003ccode\u003eMono.empty()\u003c/code\u003e来指定响应中缺少的主体。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"630-token-relay-gatewayfilter-factory\"\u003e6.30. Token Relay GatewayFilter Factory\u003c/h3\u003e\n\u003cp\u003eToken Relay是指OAuth2消费者作为客户端，将传入的令牌转发给传出的资源请求。消费者可以是一个纯粹的客户端（如SSO应用程序）或一个资源服务器。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Gateway可以将OAuth2访问令牌转发到它所代理的服务的下游。要在网关中添加这个功能，你需要像这样添加TokenRelayGatewayFilterFactory。\u003c/p\u003e\n\u003cp\u003eApp.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomRouteLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;resource\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/resource\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etokenRelay\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://localhost:9000\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者这样\u003c/p\u003e\n\u003cp\u003eapplication.yaml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eresource\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:9000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/resource\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eTokenRelay=\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它将（除了登录用户和抓取令牌外）把认证令牌传递给下游的服务（在这里是\u003ccode\u003e/resource\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e要为Spring Cloud Gateway启用这个功能，需要添加以下依赖项\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.boot:spring-boot-starter-oauth2-client\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e它是如何工作的？{githubmaster}/src/main/java/org/springframework/cloud/gateway/security/TokenRelayGatewayFilterFactory.java[filter]从当前认证的用户中提取访问令牌，并将其放入下游请求的请求头。\u003c/p\u003e\n\u003cp\u003e完整的工作样本见\u003ca href=\"https://github.com/spring-cloud-samples/sample-gateway-oauth2login\"\u003e该项目\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e只有当适当的\u003ccode\u003espring.security.oauth2.client.*\u003c/code\u003e属性被设置时，TokenRelayGatewayFilterFactory Bean才会被创建，这将触发\u003ccode\u003eReactiveClientRegistrationRepository\u003c/code\u003e Bean的创建。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eTokenRelayGatewayFilterFactory\u003c/code\u003e使用的\u003ccode\u003eReactiveOAuth2AuthorizedClientService\u003c/code\u003e的默认实现使用了一个内存数据存储。如果你需要一个更强大的解决方案，你将需要提供你自己的实现\u003ccode\u003eReactiveOAuth2AuthorizedClientService\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"631-default-filters\"\u003e6.31. Default Filters\u003c/h3\u003e\n\u003cp\u003e要添加一个过滤器并将其应用于所有路由，可以使用 \u003ccode\u003espring.cloud.gateway.default-filters\u003c/code\u003e。这个属性需要一个过滤器的列表。下面的列表定义了一组默认过滤器。\u003c/p\u003e\n\u003cp\u003eExample 54. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefault-filters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003eAddResponseHeader=X-Response-Default-Red, Default-Blue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"l\"\u003ePrefixPath=/httpbin\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"7-global-filters\"\u003e7. Global Filters\u003c/h2\u003e\n\u003cp\u003eGlobalFilter接口的签名与GatewayFilter相同。这些是特殊的过滤器，有条件地应用于所有路由。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这个接口和它的用法在未来的里程碑版本中可能会有变化。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"71-combined-global-filter-and-gatewayfilter-ordering\"\u003e7.1. Combined Global Filter and GatewayFilter Ordering\u003c/h3\u003e\n\u003cp\u003e当一个请求与路由匹配时，过滤网络处理器将\u003ccode\u003eGlobalFilter\u003c/code\u003e的所有实例和\u003ccode\u003eGatewayFilter\u003c/code\u003e的所有路由特定实例添加到一个过滤链中。这个组合的过滤器链由\u003ccode\u003eorg.springframework.core.Ordered\u003c/code\u003e接口进行排序，你可以通过实现\u003ccode\u003egetOrder()\u003c/code\u003e方法来设置这个接口。\u003c/p\u003e\n\u003cp\u003e由于Spring Cloud Gateway区分了过滤器逻辑执行的 \u0026ldquo;pre\u0026quot;和 \u0026ldquo;post\u0026quot;阶段（见如何工作），优先级最高的过滤器在 \u0026ldquo;pre\u0026quot;阶段是第一个，在 \u0026ldquo;post\u0026quot;阶段是最后一个。\u003c/p\u003e\n\u003cp\u003e下面的列表配置了一个过滤器链。\u003c/p\u003e\n\u003cp\u003eExample 55. ExampleConfiguration.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGlobalFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomGlobalFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomGlobalFilter\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eGlobalFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eOrdered\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eVoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eServerWebExchange\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eGatewayFilterChain\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;custom global filter\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003egetOrder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"72-forward-routing-filter\"\u003e7.2. Forward Routing Filter\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eForwardRoutingFilter\u003c/code\u003e在exchange attribute \u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e中寻找一个URI。如果URL有一个\u003ccode\u003eforward\u003c/code\u003e方案（如\u003ccode\u003eforward:///localendpoint\u003c/code\u003e），它将使用Spring的\u003ccode\u003eDispatcherHandler\u003c/code\u003e来处理请求。请求URL的路径部分被转发URL中的路径所覆盖。未修改的原始URL被附加到\u003ccode\u003eServerWebExchangeUtils.GATEWAY_ORIGINAL_REQUEST_URL_ATTR\u003c/code\u003e属性的列表中。\u003c/p\u003e\n\u003ch3 id=\"73-the-reactiveloadbalancerclientfilter\"\u003e7.3. The ReactiveLoadBalancerClientFilter\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eReactiveLoadBalancerClientFilter\u003c/code\u003e在名为\u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e的交换属性中寻找一个URI。如果URL有一个\u003ccode\u003elb\u003c/code\u003e方案（如\u003ccode\u003elb://myservice\u003c/code\u003e），它使用Spring Cloud的\u003ccode\u003eReactorLoadBalancer\u003c/code\u003e将名称（本例中的\u003ccode\u003emyservice\u003c/code\u003e）解析为实际的主机和端口，并替换同一属性中的URI。未修改的原始URL被追加到\u003ccode\u003eServerWebExchangeUtils.GATEWAY_ORIGINAL_REQUEST_URL_ATTR\u003c/code\u003e属性的列表中。过滤器也会查看\u003ccode\u003eServerWebExchangeUtils.GATEWAY_SCHEME_PREFIX_ATTR\u003c/code\u003e属性，看它是否等于\u003ccode\u003elb\u003c/code\u003e。如果是的话，同样的规则也适用。下面的列表配置了一个\u003ccode\u003eReactiveLoadBalancerClientFilter\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eExample 56. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyRoute\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elb://service\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/service/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e默认情况下，当服务实例不能被\u003ccode\u003eReactorLoadBalancer\u003c/code\u003e找到时，会返回\u003ccode\u003e503\u003c/code\u003e。你可以通过设置\u003ccode\u003espring.cloud.gateway.loadbalancer.use404=true\u003c/code\u003e将网关配置为返回\u003ccode\u003e404\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e从\u003ccode\u003eReactiveLoadBalancerClientFilter\u003c/code\u003e返回的\u003ccode\u003eServiceInstance\u003c/code\u003e的\u003ccode\u003eisSecure\u003c/code\u003e值覆盖了向网关发出的请求中指定的方案。例如，如果请求通过HTTPS进入Gateway，但\u003ccode\u003eServiceInstance\u003c/code\u003e表明它不安全，那么下游请求将通过HTTP进行。相反的情况也可以适用。然而，如果在网关配置中为路由指定了 \u003ccode\u003eGATEWAY_SCHEME_PREFIX_ATTR\u003c/code\u003e，那么前缀将被剥离，来自路由 URL 的结果方案将覆盖 \u003ccode\u003eServiceInstance\u003c/code\u003e 的配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eGateway支持所有的LoadBalancer功能。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer\"\u003eSpring Cloud Commons documentation\u003c/a\u003e中阅读更多关于它们的信息。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"74-the-netty-routing-filter\"\u003e7.4. The Netty Routing Filter\u003c/h3\u003e\n\u003cp\u003e如果位于\u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e exchange attribute 中的URL有一个http或https方案，Netty路由过滤器就会运行。它使用Netty HttpClient来进行下游代理请求。响应被放在\u003ccode\u003eServerWebExchangeUtils.CLIENT_RESPONSE_ATTR\u003c/code\u003e exchange attribute中，供以后的过滤器使用。(还有一个实验性的WebClientHttpRoutingFilter，执行同样的功能，但不需要Netty。)\u003c/p\u003e\n\u003ch3 id=\"75-the-netty-write-response-filter\"\u003e7.5. The Netty Write Response Filter\u003c/h3\u003e\n\u003cp\u003e如果在\u003ccode\u003eServerWebExchangeUtils.CLIENT_RESPONSE_ATTR\u003c/code\u003e exchange attribute中有一个Netty HttpClientResponse，NettyWriteResponseFilter就会运行。它在所有其他过滤器完成后运行，并将代理响应写回网关客户端响应。(还有一个实验性的WebClientWriteResponseFilter，执行同样的功能，但不需要Netty。)\u003c/p\u003e\n\u003ch3 id=\"76-the-routetorequesturl-filter\"\u003e7.6. The RouteToRequestUrl Filter\u003c/h3\u003e\n\u003cp\u003e如果在\u003ccode\u003eServerWebExchangeUtils.GATEWAY_ROUTE_ATTR\u003c/code\u003e exchange attribute中有一个Route对象，RouteToRequestUrlFilter会运行。它创建了一个新的URI，基于请求URI，但用路由对象的URI属性进行更新。新的URI被放置在\u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e exchange attribute`中。\u003c/p\u003e\n\u003cp\u003e如果URI有一个方案前缀，如\u003ccode\u003elb:ws://serviceid\u003c/code\u003e，lb方案将从URI中剥离，并放在\u003ccode\u003eServerWebExchangeUtils.GATEWAY_SCHEME_PREFIX_ATTR\u003c/code\u003e中，以便以后在过滤器链中使用。\u003c/p\u003e\n\u003ch3 id=\"77-the-websocket-routing-filter\"\u003e7.7. The Websocket Routing Filter\u003c/h3\u003e\n\u003cp\u003e如果位于\u003ccode\u003eServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR\u003c/code\u003e exchange attribute中的URL有ws或wss方案，则运行websocket路由过滤器。它使用Spring WebSocket基础设施来转发下游的websocket请求。\u003c/p\u003e\n\u003cp\u003e你可以通过在URI前加上lb，如\u003ccode\u003elb:ws://serviceid\u003c/code\u003e，来平衡websocket的负载。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ca href=\"https://github.com/sockjs\"\u003eSockJS\u003c/a\u003e作为普通HTTP的后备方案，你应该配置一个普通的HTTP路由以及websocket路由。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e下面的列表配置了一个websocket路由过滤器。\u003c/p\u003e\n\u003cp\u003eExample 57. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"c\"\u003e# SockJS route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ewebsocket_sockjs_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:3001\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/websocket/info/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"c\"\u003e# Normal Websocket route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ewebsocket_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ews://localhost:3001\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/websocket/**\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"78-the-gateway-metrics-filter\"\u003e7.8. The Gateway Metrics Filter\u003c/h3\u003e\n\u003cp\u003e要启用网关指标，请添加\u003ccode\u003espring-boot-starter-actuator\u003c/code\u003e作为项目依赖。然后，默认情况下，只要属性\u003ccode\u003espring.cloud.gateway.metrics.enabled\u003c/code\u003e没有设置为\u003ccode\u003efalse\u003c/code\u003e，网关指标过滤器就会运行。这个过滤器添加了一个名为\u003ccode\u003egateway.requests\u003c/code\u003e的定时器指标，标签如下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erouteId\u003c/code\u003e : 路径ID。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erouteUri\u003c/code\u003e : API被路由到的URI。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eoutcome\u003c/code\u003e : 结果，由\u003ca href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/HttpStatus.Series.html\"\u003eHttpStatus.Series\u003c/a\u003e分类。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estatus\u003c/code\u003e : 返回给客户端的请求的HTTP状态。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehttpStatusCode\u003c/code\u003e : 返回给客户端的请求的HTTP状态。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehttpMethod\u003c/code\u003e : 请求使用的HTTP方法。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这些指标可以从\u003ccode\u003e/actuator/metrics/gateway.requests\u003c/code\u003e中获取，并可以很容易地与Prometheus集成，创建一个\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/images/gateway-grafana-dashboard.jpeg\"\u003eGrafana\u003c/a\u003e \u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/gateway-grafana-dashboard.json\"\u003e仪表盘\u003c/a\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e要启用Prometheus端点，请添加\u003ccode\u003emicrometer-registry-prometheus\u003c/code\u003e作为项目依赖。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"79-marking-an-exchange-as-routed\"\u003e7.9. Marking An Exchange As Routed\u003c/h3\u003e\n\u003cp\u003e在网关路由了一个\u003ccode\u003eServerWeb Exchange\u003c/code\u003e后，它通过在exchange attributes中添加\u003ccode\u003egatewayAlreadyRouted\u003c/code\u003e来标记该交换为 \u0026ldquo;routed\u0026rdquo;。一旦一个请求被标记为已路由，其他的路由过滤器将不再对该请求进行路由，基本上是跳过该过滤器。有一些方便的方法，你可以用来标记一个交换为路由，或者检查一个交换是否已经被路由。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eServerWebExchangeUtils.isAlreadyRouted\u003c/code\u003e接收一个\u003ccode\u003eServerWebExchange\u003c/code\u003e对象并检查它是否已经被 \u0026ldquo;routed\u0026rdquo;。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eServerWebExchangeUtils.setAlreadyRouted\u003c/code\u003e接收一个\u003ccode\u003eServerWebExchange\u003c/code\u003e对象并将其标记为 \u0026ldquo;routed\u0026rdquo;。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"8-httpheadersfilters\"\u003e8. HttpHeadersFilters\u003c/h2\u003e\n\u003cp\u003eHttpHeadersFilters在向下游发送请求之前被应用于请求，例如在NettyRoutingFilter。\u003c/p\u003e\n\u003ch3 id=\"81-forwarded-headers-filter\"\u003e8.1. Forwarded Headers Filter\u003c/h3\u003e\n\u003cp\u003eForwarded Headers Filter创建一个Forwarded header来发送给下游的服务。它将当前请求的主机头、方案和端口添加到任何现有的转发头中。\u003c/p\u003e\n\u003ch3 id=\"82-removehopbyhop-headers-filter\"\u003e8.2. RemoveHopByHop Headers Filter\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eRemoveHopByHop Headers Filter\u003c/code\u003e 从转发的请求中删除头信息。被移除的默认头信息列表来自\u003ca href=\"https://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging-14#section-7.1.3\"\u003eIETF\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e默认删除的header是:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eConnection\u003c/li\u003e\n\u003cli\u003eKeep-Alive\u003c/li\u003e\n\u003cli\u003eProxy-Authenticate\u003c/li\u003e\n\u003cli\u003eProxy-Authorization\u003c/li\u003e\n\u003cli\u003eTE\u003c/li\u003e\n\u003cli\u003eTrailer\u003c/li\u003e\n\u003cli\u003eTransfer-Encoding\u003c/li\u003e\n\u003cli\u003eUpgrade\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e要改变这一点，请将\u003ccode\u003espring.cloud.gateway.filter.remove-hop-by-hop.headers\u003c/code\u003e属性设置为要删除的头名称列表。\u003c/p\u003e\n\u003ch3 id=\"83-xforwarded-headers-filter\"\u003e8.3. XForwarded Headers Filter\u003c/h3\u003e\n\u003cp\u003eXForwarded Headers Filter创建各种\u003ccode\u003eX-Forwarded-*\u003c/code\u003e头，以发送到下游服务。它使用当前请求的Host头、方案、端口和路径来创建各种头。\u003c/p\u003e\n\u003cp\u003e创建各个头信息可以由以下布尔属性控制（默认为true）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.for-enabled\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.host-enabled\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.port-enabled\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.proto-enabled\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.prefix-enabled\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e附加多个header可以由以下布尔属性控制（默认为真）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.for-append\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.host-append\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.port-append\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.proto-append\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.gateway.x-forwarded.prefix-append\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"9-tls-and-ssl\"\u003e9. TLS and SSL\u003c/h2\u003e\n\u003cp\u003e网关可以通过遵循通常的Spring服务器配置来监听HTTPS请求。下面的例子显示了如何做到这一点。\u003c/p\u003e\n\u003cp\u003eExample 58. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-alias\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003escg\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003escg1234\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eclasspath:scg-keystore.p12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以将网关路由到HTTP和HTTPS后端。如果你要路由到HTTPS后端，你可以通过以下配置将网关配置为信任所有下游的证书。\u003c/p\u003e\n\u003cp\u003eExample 59. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003euseInsecureTrustManager\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用不安全的信任管理器不适合于生产。对于生产部署，你可以用一组已知的证书来配置网关，它可以通过以下配置来信任。\u003c/p\u003e\n\u003cp\u003eExample 60. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etrustedX509Certificates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"l\"\u003ecert1.pem\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"l\"\u003ecert2.pem\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果Spring Cloud Gateway没有配置受信任的证书，就会使用默认的信任存储（你可以通过设置\u003ccode\u003ejavax.net.ssl.trustStore\u003c/code\u003e系统属性来覆盖它）。\u003c/p\u003e\n\u003ch3 id=\"91-tls-handshake\"\u003e9.1. TLS Handshake\u003c/h3\u003e\n\u003cp\u003e网关维护着一个客户端池，它用来路由到后端。当通过HTTPS进行通信时，客户端发起了一个TLS握手。一些超时与这个握手相关。你可以对这些超时进行配置（默认值显示），如下。\u003c/p\u003e\n\u003cp\u003eExample 61. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003essl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ehandshake-timeout-millis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eclose-notify-flush-timeout-millis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e3000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eclose-notify-read-timeout-millis\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"10-configuration\"\u003e10. Configuration\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Gateway的配置是由\u003ccode\u003eRouteDefinitionLocator\u003c/code\u003e实例的集合驱动的。下面的列表显示了\u003ccode\u003eRouteDefinitionLocator\u003c/code\u003e接口的定义。\u003c/p\u003e\n\u003cp\u003eExample 62. RouteDefinitionLocator.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eRouteDefinitionLocator\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteDefinition\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetRouteDefinitions\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认情况下，\u003ccode\u003ePropertiesRouteDefinitionLocator\u003c/code\u003e通过使用Spring Boot的\u003ccode\u003e@ConfigurationProperties\u003c/code\u003e机制加载属性。\u003c/p\u003e\n\u003cp\u003e前面的配置例子都使用了一种快捷的符号，即使用位置参数而不是命名参数。下面的两个例子是等价的。\u003c/p\u003e\n\u003cp\u003eExample 63. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetstatus_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSetStatus\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003estatus\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e401\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esetstatusshortcut_route\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eSetStatus=401\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于网关的某些用途来说，属性已经足够了，但一些生产用例会从外部来源（如数据库）加载配置中受益。未来的里程碑版本将有基于Spring数据存储库的\u003ccode\u003eRouteDefinitionLocator\u003c/code\u003e实现，如\u003ccode\u003eRedis\u003c/code\u003e、\u003ccode\u003eMongoDB\u003c/code\u003e和\u003ccode\u003eCassandra\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"11-route-metadata-configuration\"\u003e11. Route Metadata Configuration\u003c/h2\u003e\n\u003cp\u003e你可以通过使用元数据为每个途径配置额外的参数，如下所示。\u003c/p\u003e\n\u003cp\u003eExample 64. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eroute_with_metadata\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eoptionName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;OptionValue\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003ecompositeObject\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eiAmNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以从一个exchange所获取所有的元数据属性，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRoute\u003c/span\u003e \u003cspan class=\"n\"\u003eroute\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetAttribute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eGATEWAY_ROUTE_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// get all metadata properties\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetMetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// get a single metadata property\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetMetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esomeKey\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"12-http-timeouts-configuration\"\u003e12. Http timeouts configuration\u003c/h2\u003e\n\u003cp\u003e可以为所有路由配置Http超时（响应和连接），也可以为每个特定的路由重写。\u003c/p\u003e\n\u003ch3 id=\"121-全局超时\"\u003e12.1. 全局超时\u003c/h3\u003e\n\u003cp\u003e要配置全局http超时。\n\u003ccode\u003econnect-timeout\u003c/code\u003e 必须以毫秒为单位指定。\n\u003ccode\u003eresponse-timeout\u003c/code\u003e 必须以\u003ccode\u003ejava.time.Duration\u003c/code\u003e的形式指定。\u003c/p\u003e\n\u003cp\u003e全局超时\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003econnect-timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eresponse-timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e5s\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"122-每个路由的超时\"\u003e12.2. 每个路由的超时\u003c/h3\u003e\n\u003cp\u003e要配置每个路由的超时。\n\u003ccode\u003econnect-timeout\u003c/code\u003e必须以毫秒为单位指定。\n\u003ccode\u003eresponse-timeout\u003c/code\u003e 必须以毫秒为单位指定。\u003c/p\u003e\n\u003cp\u003e通过yaml配置每个路由的超时\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-YAML\" data-lang=\"YAML\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eper_route_timeouts\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://example.org\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePath\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eargs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003epattern\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/delay/{timeout}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eresponse-timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e200\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003econnect-timeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e200\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用Java DSL配置每个路由的超时\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003eimport static\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.cloud.gateway.support.RouteMetadataUtils.CONNECT_TIMEOUT_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport static\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.cloud.gateway.support.RouteMetadataUtils.RESPONSE_TIMEOUT_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n      \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomRouteLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003erouteBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e){\u003c/span\u003e\n         \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erouteBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n               \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;*.somehost.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eand\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/somepath\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddRequestHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;header1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;header-value-1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://someuri\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRESPONSE_TIMEOUT_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCONNECT_TIMEOUT_ATTR\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n               \u003cspan class=\"o\"\u003e})\u003c/span\u003e\n               \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"123-fluent-java-routes-api\"\u003e12.3. Fluent Java Routes API\u003c/h3\u003e\n\u003cp\u003e为了允许在Java中进行简单的配置，RouteLocatorBuilder Bean包括一个fluent的API。下面的列表显示了它是如何工作的。\u003c/p\u003e\n\u003cp\u003eExample 65. GatewaySampleApplication.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// static imports from GatewayFilters and RoutePredicates\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomRouteLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eThrottleGatewayFilterFactory\u003c/span\u003e \u003cspan class=\"n\"\u003ethrottle\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;**.abc.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eand\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/image/png\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddResponseHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;X-TestHeader\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;foobar\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://httpbin.org:80\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/image/webp\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddResponseHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;X-AnotherHeader\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;baz\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://httpbin.org:80\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eorder\u003c/span\u003e\u003cspan class=\"o\"\u003e(-\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehost\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;**.throttle.org\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eand\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/get\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ethrottle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                        \u003cspan class=\"n\"\u003eTimeUnit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSECONDS\u003c/span\u003e\u003cspan class=\"o\"\u003e)))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://httpbin.org:80\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emetadata\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;key\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这种风格也允许更多的自定义谓词断言。由\u003ccode\u003eRouteDefinitionLocator\u003c/code\u003e Bean定义的谓词使用逻辑上的和来组合。通过使用流畅的Java API，你可以在\u003ccode\u003ePredicate\u003c/code\u003e类上使用\u003ccode\u003eand()\u003c/code\u003e、\u003ccode\u003eor()\u003c/code\u003e和\u003ccode\u003enegate()\u003c/code\u003e操作符。\u003c/p\u003e\n\u003ch3 id=\"124-the-discoveryclient-route-definition-locator\"\u003e12.4. The DiscoveryClient Route Definition Locator\u003c/h3\u003e\n\u003cp\u003e你可以将网关配置为基于在\u003ccode\u003eDiscoveryClient\u003c/code\u003e兼容的服务注册中心注册的服务来创建路由。\u003c/p\u003e\n\u003cp\u003e要启用这一点，请设置\u003ccode\u003espring.cloud.gateway.discovery.locator.enabled=true\u003c/code\u003e，并确保\u003ccode\u003eDiscoveryClien\u003c/code\u003et`实现（如Netflix Eureka、Consul或Zookeeper）位于classpath上并已启用。\u003c/p\u003e\n\u003ch4 id=\"1241-为discoveryclient路由配置谓词和过滤器\"\u003e12.4.1. 为DiscoveryClient路由配置谓词和过滤器\u003c/h4\u003e\n\u003cp\u003e默认情况下，网关为用\u003ccode\u003eDiscoveryClient\u003c/code\u003e创建的路由定义了一个谓词和过滤器。\u003c/p\u003e\n\u003cp\u003e默认谓词是用\u003ccode\u003e/serviceId/**\u003c/code\u003e模式定义的路径谓词，其中\u003ccode\u003eserviceId\u003c/code\u003e是来自\u003ccode\u003eDiscoveryClient\u003c/code\u003e的服务的ID。\u003c/p\u003e\n\u003cp\u003e默认过滤器是一个重写路径过滤器，采用重写词\u003ccode\u003e/serviceId/?(?\u0026lt;remaining\u0026gt;.*)\u003c/code\u003e和替换词\u003ccode\u003e/${remaining}\u003c/code\u003e。在请求被发送到下游之前，这将从路径中剥离服务ID。\u003c/p\u003e\n\u003cp\u003e如果你想自定义\u003ccode\u003eDiscoveryClient\u003c/code\u003e路由使用的谓词或过滤器，请设置\u003ccode\u003espring.cloud.gateway.discovery.locator.predicates[x]\u003c/code\u003e 和 \u003ccode\u003espring.cloud.gateway.discovery.locator.filters[y]\u003c/code\u003e。这样做时，如果你想保留该功能，你需要确保包括前面显示的默认谓词和过滤器。下面的例子显示了这是什么样子。\u003c/p\u003e\n\u003cp\u003eExample 66. application.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.gateway.discovery.locator.predicates[0].name: Path\nspring.cloud.gateway.discovery.locator.predicates[0].args[pattern]: \u0026#34;\u0026#39;/\u0026#39;+serviceId+\u0026#39;/**\u0026#39;\u0026#34;\nspring.cloud.gateway.discovery.locator.predicates[1].name: Host\nspring.cloud.gateway.discovery.locator.predicates[1].args[pattern]: \u0026#34;\u0026#39;**.foo.com\u0026#39;\u0026#34;\nspring.cloud.gateway.discovery.locator.filters[0].name: CircuitBreaker\nspring.cloud.gateway.discovery.locator.filters[0].args[name]: serviceId\nspring.cloud.gateway.discovery.locator.filters[1].name: RewritePath\nspring.cloud.gateway.discovery.locator.filters[1].args[regexp]: \u0026#34;\u0026#39;/\u0026#39; + serviceId + \u0026#39;/?(?\u0026lt;remaining\u0026gt;.*)\u0026#39;\u0026#34;\nspring.cloud.gateway.discovery.locator.filters[1].args[replacement]: \u0026#34;\u0026#39;/${remaining}\u0026#39;\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"13-reactor-netty-访问日志\"\u003e13. Reactor Netty 访问日志\u003c/h2\u003e\n\u003cp\u003e要启用 Reactor Netty 访问日志，设置 \u003ccode\u003e-Dreactor.netty.http.server.accessLogEnabled=true\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e它必须是一个Java系统属性，而不是一个Spring Boot属性。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你可以配置日志系统，使其有一个单独的访问日志文件。下面的例子创建了一个Logback配置。\u003c/p\u003e\n\u003cp\u003eExample 67. logback.xml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;accessLog\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.FileAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;file\u0026gt;\u003c/span\u003eaccess_log.log\u003cspan class=\"nt\"\u003e\u0026lt;/file\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;encoder\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e%msg%n\u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/encoder\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;async\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.classic.AsyncAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;appender-ref\u003c/span\u003e \u003cspan class=\"na\"\u003eref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;accessLog\u0026#34;\u003c/span\u003e \u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"nt\"\u003e\u0026lt;logger\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;reactor.netty.http.server.AccessLog\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003elevel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;INFO\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eadditivity=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;false\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;appender-ref\u003c/span\u003e \u003cspan class=\"na\"\u003eref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;async\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/logger\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"14-cors-跨域配置\"\u003e14. CORS 跨域配置\u003c/h2\u003e\n\u003cp\u003e你可以配置网关来控制CORS行为。全局CORS配置是URL模式与\u003ca href=\"https://docs.spring.io/spring/docs/5.0.x/javadoc-api/org/springframework/web/cors/CorsConfiguration.html\"\u003eSpring Framework \u003ccode\u003eCorsConfiguration\u003c/code\u003e\u003c/a\u003e的映射。下面的例子配置了CORS。\u003c/p\u003e\n\u003cp\u003eExample 68. application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eglobalcors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ecors-configurations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#39;[/**]\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eallowedOrigins\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://docs.spring.io\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eallowedMethods\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"l\"\u003eGET\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的例子中，对于所有 GET 请求路径，允许来自 \u003ccode\u003edocs.spring.io\u003c/code\u003e 的请求的 CORS 请求。\u003c/p\u003e\n\u003cp\u003e要为未被某些网关路由谓词处理的请求提供相同的 CORS 配置，请将 s\u003ccode\u003epring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping\u003c/code\u003e 属性设置为 \u003ccode\u003etrue\u003c/code\u003e。当你试图支持 CORS 预检请求，而你的路由谓词因为 HTTP 方法是选项而不能评估为 true 时，这很有用。\u003c/p\u003e\n\u003ch2 id=\"15-actuator-api\"\u003e15. Actuator API\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003e/gateway\u003c/code\u003e执行器端点可以让你监控并与Spring Cloud Gateway应用互动。要进行远程访问，端点必须在应用程序属性中\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-endpoints-enabling-endpoints\"\u003e启用\u003c/a\u003e和\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-endpoints-exposing-endpoints\"\u003e通过HTTP或JMX暴露\u003c/a\u003e。下面的列表显示了如何做到这一点。\u003c/p\u003e\n\u003cp\u003eExample 69. application.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003emanagement.endpoint.gateway.enabled=true # default value\nmanagement.endpoints.web.exposure.include=gateway\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"151-verbose-actuator-format\"\u003e15.1. Verbose Actuator Format\u003c/h3\u003e\n\u003cp\u003e在Spring Cloud Gateway中增加了一种新的、更粗略的格式。它为每个路由添加了更多细节，让你查看与每个路由相关的谓词和过滤器，以及任何可用的配置。下面的例子配置了\u003ccode\u003e/actuator/gateway/routes\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;predicate\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;(Hosts: [**.addrequestheader.org] \u0026amp;\u0026amp; Paths: [/headers], match trailing slash: true)\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;route_id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;add_request_header_test\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;filters\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;[[AddResponseHeader X-Response-Default-Foo = \u0026#39;Default-Bar\u0026#39;], order = 1]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;[[AddRequestHeader X-Request-Foo = \u0026#39;Bar\u0026#39;], order = 1]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;[[PrefixPath prefix = \u0026#39;/httpbin\u0026#39;], order = 2]\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;uri\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;lb://testservice\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;order\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个功能默认是启用的。要禁用它，请设置以下属性。\u003c/p\u003e\n\u003cp\u003eExample 70. application.properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.gateway.actuator.verbose.enabled=false\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在未来的版本中，这将默认为\u003ccode\u003etrue\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"152-retrieving-route-filters\"\u003e15.2. Retrieving Route Filters\u003c/h3\u003e\n\u003cp\u003e本节详细介绍了如何检索路由过滤器，包括。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-global-filters\"\u003eGlobal Filters\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-route-filters\"\u003e[gateway-route-filters]\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"1521-global-filters\"\u003e15.2.1. Global Filters\u003c/h4\u003e\n\u003cp\u003e要检索应用于所有路由的\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#global-filters\"\u003e全局过滤器\u003c/a\u003e，向\u003ccode\u003e/actuator/gateway/globalfilters\u003c/code\u003e发出\u003ccode\u003eGET\u003c/code\u003e请求。得到的响应类似于以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@77856cc5\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e10100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter@4f6fd101\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.NettyWriteResponseFilter@32d22650\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e-1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.ForwardRoutingFilter@106459d9\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2147483647\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.NettyRoutingFilter@1fbd5e0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2147483647\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.ForwardPathFilter@33a71d23\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter@135064ea\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2147483637\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;org.springframework.cloud.gateway.filter.WebsocketRoutingFilter@23c05889\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e2147483646\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e响应包含全局过滤器的细节，这些过滤器已经到位。对于每个全局过滤器，有一个过滤器对象的字符串表示（例如，\u003ccode\u003eorg.springframework.cloud.gateway.filter.ReactiveLoadBalancerClientFilter@77856cc5\u003c/code\u003e）和过滤器链中相应的\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-combined-global-filter-and-gatewayfilter-ordering\"\u003eorder\u003c/a\u003e。 }。\u003c/p\u003e\n\u003ch4 id=\"1522-route-filters\"\u003e15.2.2. Route Filters\u003c/h4\u003e\n\u003cp\u003e要检索应用于路由的\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e工厂\u003c/a\u003e，向\u003ccode\u003e/actuator/gateway/routefilters\u003c/code\u003e发出\u003ccode\u003eGET\u003c/code\u003e请求。得到的响应类似于以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;[AddRequestHeaderGatewayFilterFactory@570ed9c configClass = AbstractNameValueGatewayFilterFactory.NameValueConfig]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;[SecureHeadersGatewayFilterFactory@fceab5d configClass = Object]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;[SaveSessionGatewayFilterFactory@4449b273 configClass = Object]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e响应包含应用于任何特定路由的\u003ccode\u003eGatewayFilter\u003c/code\u003e工厂的细节。对于每个工厂，有一个相应对象的字符串表示（例如，\u003ccode\u003e[SecureHeadersGatewayFilterFactory@fceab5d configClass = Object]\u003c/code\u003e）。请注意，\u003ccode\u003enull\u003c/code\u003e 是由于端点控制器的不完整实现，因为它试图设置过滤器链中的对象的顺序，这不适用于\u003ccode\u003eGatewayFilter\u003c/code\u003e工厂对象。\u003c/p\u003e\n\u003ch3 id=\"153-刷新路由缓存\"\u003e15.3. 刷新路由缓存\u003c/h3\u003e\n\u003cp\u003e要清除路由缓存，请向\u003ccode\u003e/actuator/gateway/refresh\u003c/code\u003e发出一个\u003ccode\u003ePOST\u003c/code\u003e请求。该请求返回一个200，没有响应体。\u003c/p\u003e\n\u003ch3 id=\"154-检索网关中定义的路由\"\u003e15.4. 检索网关中定义的路由\u003c/h3\u003e\n\u003cp\u003e要检索网关中定义的路由，请向\u003ccode\u003e/actuator/gateway/routes\u003c/code\u003e发出\u003ccode\u003eGET\u003c/code\u003e请求。得到的响应类似于以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e[{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;route_id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;first_route\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;route_object\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;predicate\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory$$Lambda$432/1736826640@1e9d7e7d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;filters\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\u0026#34;OrderedGatewayFilter{delegate=org.springframework.cloud.gateway.filter.factory.PreserveHostHeaderGatewayFilterFactory$$Lambda$436/674480275@6631ef72, order=0}\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;order\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;route_id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;second_route\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;route_object\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;predicate\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory$$Lambda$432/1736826640@cd8d298\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;filters\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;order\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e响应包含网关中定义的所有路由的详细信息。下表描述了响应中每个元素的结构（每个都是一个路由）。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroute_id\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eString\u003c/td\u003e\n\u003ctd\u003e路由ID\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroute_object.predicate\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eObject\u003c/td\u003e\n\u003ctd\u003e路由 predicate\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroute_object.filters\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eArray\u003c/td\u003e\n\u003ctd\u003e应用于路由的\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories\"\u003e\u003ccode\u003eGatewayFilter\u003c/code\u003e工厂\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eorder\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumber\u003c/td\u003e\n\u003ctd\u003e路由 order\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"155-检索指定路由的信息\"\u003e15.5. 检索指定路由的信息\u003c/h3\u003e\n\u003cp\u003e要检索一条路由的信息，请向\u003ccode\u003e/actuator/gateway/routes/{id}\u003c/code\u003e发出一个GET请求。(例如，\u003ccode\u003e/actuator/gateway/routes/first_route)\u003c/code\u003e。得到的响应类似于下面的内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;first_route\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;predicates\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Path\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026#34;args\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#34;_genkey_0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/first\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}],\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;filters\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;uri\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;https://www.uri-destination.org\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026#34;order\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"err\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下表描述了响应的结构。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003ePath\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eString\u003c/td\u003e\n\u003ctd\u003e路由ID\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003epredicates\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eArray\u003c/td\u003e\n\u003ctd\u003e路由谓词的集合。每一项都定义了一个给定谓词的名称和参数。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003efilters\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eArray\u003c/td\u003e\n\u003ctd\u003e应用于路由的过滤器集合。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eString\u003c/td\u003e\n\u003ctd\u003e路由的目的地URI。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eorder\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eNumber\u003c/td\u003e\n\u003ctd\u003e路由的顺序\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"156-创建和删除一个指定的路由\"\u003e15.6. 创建和删除一个指定的路由\u003c/h3\u003e\n\u003cp\u003e要创建一个路由，请向\u003ccode\u003e/gateway/routes/{id_route_to_create}\u003c/code\u003e发出\u003ccode\u003ePOST\u003c/code\u003e请求，并以JSON为主体指定路由的字段（见\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-retrieving-information-about-a-particular-route\"\u003e检索特定路由的信息\u003c/a\u003e）。\u003c/p\u003e\n\u003cp\u003e要删除一个路由，请向\u003ccode\u003e/gateway/routes/{id_route_to_delete}\u003c/code\u003e发出\u003ccode\u003eDELETE\u003c/code\u003e请求。\u003c/p\u003e\n\u003ch3 id=\"157-总结所有端点的清单\"\u003e15.7. 总结：所有端点的清单\u003c/h3\u003e\n\u003cp\u003e下面的表格总结了Spring Cloud Gateway的执行器端点（注意，每个端点都有\u003ccode\u003e/actuator/gateway\u003c/code\u003e作为基本路径）。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eID\u003c/th\u003e\n\u003cth\u003eHTTP Method\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eglobalfilters\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e显示应用于路由的全局过滤器的列表。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutefilters\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e显示应用于特定路由的 \u003ccode\u003eGatewayFilter\u003c/code\u003e工厂的列表。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003erefresh\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e清楚路由缓存\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutes\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003eD显示网关中定义的路由列表\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutes/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eGET\u003c/td\u003e\n\u003ctd\u003e显示指定路由的详细信息\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutes/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003ePOST\u003c/td\u003e\n\u003ctd\u003e添加一个新的路由到网关\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eroutes/{id}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eDELETE\u003c/td\u003e\n\u003ctd\u003e从网关删除一个路由\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"16-故障排除\"\u003e16. 故障排除\u003c/h2\u003e\n\u003cp\u003e本节涵盖了你在使用Spring Cloud Gateway时可能出现的常见问题。\u003c/p\u003e\n\u003ch3 id=\"161-日志级别\"\u003e16.1. 日志级别\u003c/h3\u003e\n\u003cp\u003e在\u003ccode\u003eDEBUG\u003c/code\u003e和\u003ccode\u003eTRACE\u003c/code\u003e级别，以下记录器可能包含有价值的故障排除信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud.gateway\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.http.server.reactive\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.web.reactive\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.boot.autoconfigure.web\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereactor.netty\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eredisratelimiter\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"162-wiretap\"\u003e16.2. Wiretap\u003c/h3\u003e\n\u003cp\u003eReactor Netty的HttpClient和HttpServer可以启用wiretap。当与 reactor.netty 日志级别设置为 DEBUG 或 TRACE 相结合时，它能够记录信息，例如通过线路发送和接收的头信息和正文。要启用 wiretap，请分别为 HttpServer 和 HttpClient 设置 \u003ccode\u003espring.cloud.gateway.httpserver.wiretap=true\u003c/code\u003e 或 \u003ccode\u003espring.cloud.gateway.httpclient.wiretap=true\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"17-开发者指南\"\u003e17. 开发者指南\u003c/h2\u003e\n\u003cp\u003e这些是编写网关的一些自定义组件的基本指南。\u003c/p\u003e\n\u003ch3 id=\"171-编写自定义路由谓语工厂\"\u003e17.1. 编写自定义路由谓语工厂\u003c/h3\u003e\n\u003cp\u003e为了编写一个Route Predicate，你将需要实现\u003ccode\u003eRoutePredicateFactory\u003c/code\u003e。有一个抽象的类叫做\u003ccode\u003eAbstractRoutePredicateFactory\u003c/code\u003e，你可以扩展它。\u003c/p\u003e\n\u003cp\u003eMyRoutePredicateFactory.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyRoutePredicateFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eAbstractRoutePredicateFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eHeaderRoutePredicateFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eMyRoutePredicateFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003ePredicate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eServerWebExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// grab configuration from Config object\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//grab the request\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003eServerHttpRequest\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//take information from the request to see if it\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"c1\"\u003e//matches configuration.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ematches\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//Put the configuration properties for your filter here\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"172-编写自定义gatewayfilter工厂\"\u003e17.2. 编写自定义GatewayFilter工厂\u003c/h3\u003e\n\u003cp\u003e要写一个\u003ccode\u003eGatewayFilter\u003c/code\u003e，你必须实现\u003ccode\u003eGatewayFilterFactory\u003c/code\u003e。你可以扩展一个名为\u003ccode\u003eAbstractGatewayFilterFactory\u003c/code\u003e的抽象类。下面的例子展示了如何做到这一点。\u003c/p\u003e\n\u003cp\u003eExample 71. PreGatewayFilterFactory.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePreGatewayFilterFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eAbstractGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ePreGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003ePreGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGatewayFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// grab configuration from Config object\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//If you want to build a \u0026#34;pre\u0026#34; filter you need to manipulate the\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"c1\"\u003e//request before calling chain.filter\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003eServerHttpRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003emutate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e//use builder to manipulate the request\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emutate\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e()).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//Put the configuration properties for your filter here\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePostGatewayFilterFactory.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePostGatewayFilterFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eAbstractGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ePostGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003ePostGatewayFilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGatewayFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eConfig\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// grab configuration from Config object\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ethen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efromRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eServerHttpResponse\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e//Manipulate the response in some way\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"o\"\u003e}));\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//Put the configuration properties for your filter here\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"1721-在配置中命名自定义过滤器和引用\"\u003e17.2.1. 在配置中命名自定义过滤器和引用\u003c/h4\u003e\n\u003cp\u003e自定义过滤器的类名应该以\u003ccode\u003eGatewayFilterFactory\u003c/code\u003e结尾。\u003c/p\u003e\n\u003cp\u003e例如，要在配置文件中引用一个名为\u003ccode\u003eSomething\u003c/code\u003e的过滤器，该过滤器必须在一个名为\u003ccode\u003eSomethingGatewayFilterFactory\u003c/code\u003e的类中。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e可以创建一个没有\u003ccode\u003eGatewayFilterFactory\u003c/code\u003e后缀的网关过滤器，如\u003ccode\u003eAnotherThing\u003c/code\u003e类。这个过滤器可以在配置文件中被引用为\u003ccode\u003eAnotherThing\u003c/code\u003e。这不是一个被支持的命名惯例，这种语法可能在未来的版本中被删除。请更新过滤器的名称，使其符合要求。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"173-writing-custom-global-filters\"\u003e17.3. Writing Custom Global Filters\u003c/h3\u003e\n\u003cp\u003e要编写一个自定义的全局过滤器，你必须实现\u003ccode\u003eGlobalFilter\u003c/code\u003e接口。这将过滤器应用于所有的请求。\u003c/p\u003e\n\u003cp\u003e下面的例子分别展示了如何设置全局前置和后置过滤器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGlobalFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomGlobalFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetPrincipal\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePrincipal\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003egetName\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edefaultIfEmpty\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Default User\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euserName\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e//adds header to proxied request\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003emutate\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eheader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;CUSTOM-REQUEST-HEADER\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003euserName\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e})\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eflatMap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eGlobalFilter\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomGlobalPostFilter\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003echain\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eexchange\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserverWebExchange\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e//adds header to response\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"n\"\u003eserverWebExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetHeaders\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;CUSTOM-RESPONSE-HEADER\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n              \u003cspan class=\"n\"\u003eHttpStatus\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eOK\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eequals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserverWebExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetStatusCode\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;It worked\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;It did not work\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eserverWebExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e})\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ethen\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"18-通过使用spring-mvc或webflux构建一个简单的网关\"\u003e18. 通过使用Spring MVC或Webflux构建一个简单的网关\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e下面描述的是另一种风格的网关。之前的文档都不适用于下面的内容。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSpring Cloud Gateway提供了一个名为\u003ccode\u003eProxyExchange\u003c/code\u003e的实用对象。你可以在常规的Spring网络处理程序中作为一个方法参数使用它。它通过反映HTTP动词的方法支持基本的下游HTTP交换。在MVC中，它还支持通过\u003ccode\u003eforward()\u003c/code\u003e方法转发到本地处理程序。要使用\u003ccode\u003eProxyExchange\u003c/code\u003e，在你的classpath中包含正确的模块（\u003ccode\u003espring-cloud-gateway-mvc或spring-cloud-gateway-webflux\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e下面的MVC例子将一个到/test的请求代理到一个远程服务器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eGatewaySampleApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Value\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${remote.home}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eURI\u003c/span\u003e \u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/image/png\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子用Webflux做同样的事情。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eGatewaySampleApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Value\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${remote.home}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eURI\u003c/span\u003e \u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/image/png\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eProxyExchange\u003c/code\u003e上的便利方法使处理方法能够发现并增强传入请求的URI路径。例如，你可能想提取路径的尾部元素，将它们传递到下游。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/proxy/path/**\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxyPath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eProxyExchange\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/proxy/path/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eproxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/foos/\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSpring MVC和Webflux的所有功能都可用于网关处理方法。因此，你可以注入请求头和查询参数，例如，你可以通过映射注解中的声明来限制传入的请求。关于这些功能的更多细节，请参见Spring MVC中\u003ccode\u003e@RequestMapping\u003c/code\u003e的文档。\u003c/p\u003e\n\u003cp\u003e你可以通过使用\u003ccode\u003eProxyExchange\u003c/code\u003e上的\u003ccode\u003eheader()\u003c/code\u003e方法向下游响应添加头信息。\u003c/p\u003e\n\u003cp\u003e你也可以通过给\u003ccode\u003eget()\u003c/code\u003e方法（和其他方法）添加一个映射器来操作响应头（以及响应中你喜欢的其他东西）。映射器是一个 \u0026ldquo;函数\u0026rdquo;，它接收传入的 \u0026ldquo;ResponseEntity \u0026ldquo;并将其转换为传出的。\u003c/p\u003e\n\u003cp\u003e对 \u0026ldquo;敏感 \u0026ldquo;头信息（默认情况下，\u003ccode\u003ecookie\u003c/code\u003e和\u003ccode\u003eauthorization\u003c/code\u003e）提供一流的支持，这些头信息不会向下游传递，对 \u0026ldquo;代理\u0026rdquo;（\u003ccode\u003ex-forwarded-*\u003c/code\u003e）头信息也是如此。\u003c/p\u003e\n\u003ch2 id=\"19-配置属性\"\u003e19. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有与Spring Cloud Gateway相关的配置属性列表，请参见\u003ca href=\"https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/appendix.html\"\u003e附录\u003c/a\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 6,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-kubernetes/",
        title: "Spring Cloud Kubernetes",
        description: "Spring Cloud Kubernetes提供了众所周知的Spring Cloud接口的实现，允许开发者在Kubernetes上构建和运行Spring Cloud应用。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：2.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月24日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-projects/spring-cloud\"\u003ehttps://github.com/spring-projects/spring-cloud\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1-为什么需要spring-cloud-kubernetes\"\u003e1. 为什么需要Spring Cloud Kubernetes？\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Kubernetes提供了众所周知的Spring Cloud接口的实现，允许开发者在Kubernetes上构建和运行Spring Cloud应用。虽然这个项目在构建云原生应用时可能对你有用，但它也不是在Kubernetes上部署Spring Boot应用的必要条件。如果你刚刚开始在Kubernetes上运行你的Spring Boot应用，你只需要一个基本的Spring Boot应用和Kubernetes本身就可以完成很多事情。要想了解更多，你可以通过阅读\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#cloud-deployment-kubernetes\"\u003eSpring Boot部署到Kubernetes的参考文档\u003c/a\u003e，以及通过研讨会材料\u003ca href=\"https://hackmd.io/@ryanjbaxter/spring-on-k8s-workshop\"\u003eSpring和Kubernetes\u003c/a\u003e来开始。\u003c/p\u003e\n\u003ch2 id=\"2-starters\"\u003e2. Starters\u003c/h2\u003e\n\u003cp\u003eStarters是方便的依赖性描述符，你可以在你的应用程序中包含它。包括一个starter，以获得功能集的依赖性和Spring Boot自动配置。以\u003ccode\u003espring-cloud-starter-kubernetes-fabric8\u003c/code\u003e开头的启动器提供了使用\u003ca href=\"https://github.com/fabric8io/kubernetes-client\"\u003eFabric8 Kubernetes Java Client\u003c/a\u003e的实现。以\u003ccode\u003espring-cloud-starter-kubernetes-client\u003c/code\u003e开头的启动器提供了使用\u003ca href=\"https://github.com/kubernetes-client/java\"\u003eKubernetes Java Client\u003c/a\u003e的实现。\u003c/p\u003e\n\u003ch3 id=\"21-服务发实\"\u003e2.1. 服务发实\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-client\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#discoveryclient-for-kubernetes\"\u003eDiscovery Client\u003c/a\u003e实现，将服务名称解析为Kubernetes服务。\u003c/p\u003e\n\u003ch3 id=\"22-配置中心\"\u003e2.2. 配置中心\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-client-config\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从Kubernetes\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#configmap-propertysource\"\u003eConfigMaps\u003c/a\u003e和\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#secrets-propertysource\"\u003eSecrets\u003c/a\u003e加载应用属性。当ConfigMap或Secret发生变化时，\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#propertysource-reload\"\u003e重新加载\u003c/a\u003e应用程序属性。\u003c/p\u003e\n\u003ch3 id=\"23-所有spring-cloud-kubernetes功能\"\u003e2.3. 所有Spring Cloud Kubernetes功能。\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8-all\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-client-all\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-用于kubernetes的discoveryclient\"\u003e3. 用于Kubernetes的DiscoveryClient\u003c/h2\u003e\n\u003cp\u003e该项目为\u003ca href=\"https://kubernetes.io/\"\u003eKubernetes\u003c/a\u003e提供了\u003ca href=\"https://github.com/spring-cloud/spring-cloud-commons/blob/master/spring-cloud-commons/src/main/java/org/springframework/cloud/client/discovery/DiscoveryClient.java\"\u003eDiscovery Client\u003c/a\u003e的实现。这个客户端可以让你按名称查询Kubernetes端点（见\u003ca href=\"https://kubernetes.io/docs/user-guide/services/\"\u003eservices\u003c/a\u003e）。服务通常由Kubernetes API服务器公开，作为代表 \u003ccode\u003ehttp\u003c/code\u003e 和 \u003ccode\u003ehttps\u003c/code\u003e 地址的端点的集合，客户端可以从作为pod运行的Spring Boot应用程序中访问。\u003c/p\u003e\n\u003cp\u003e通过在你的项目中添加以下依赖关系，你可以免费获得这个东西。\u003c/p\u003e\n\u003cp\u003eFabric8 Kubernetes Client\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eKubernetes Java Client\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003edependency\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003egroupId\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eorg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espringframework\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecloud\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003egroupId\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eartifactId\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ecloud\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003estarter\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ekubernetes\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003eartifactId\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"n\"\u003edependency\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要启用\u003ccode\u003eDiscoveryClient\u003c/code\u003e的加载，请将\u003ccode\u003e@EnableDiscoveryClient\u003c/code\u003e添加到相应的配置或应用类中，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableDiscoveryClient\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如下面的例子所示，你可以简单地通过自装配将客户端注入你的代码中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eDiscoveryClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过在\u003ccode\u003eapplication.properties\u003c/code\u003e中设置以下属性来选择从所有命名空间启用\u003ccode\u003eDiscoveryClient\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.discovery.all-namespaces=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要发现未被kubernetes api服务器标记为 \u0026ldquo;ready\u0026rdquo; 的服务端点地址，可以在\u003ccode\u003eapplication.properties\u003c/code\u003e中设置以下属性（默认：\u003ccode\u003efalse\u003c/code\u003e）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.discovery.include-not-ready-addresses=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e这在为监控目的而发现服务时可能很有用，并能检查未准备好的服务实例的\u003ccode\u003e/health\u003c/code\u003e端点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你的服务暴露了多个端口，你将需要指定\u003ccode\u003eDiscoveryClient\u003c/code\u003e应该使用哪个端口。\u003ccode\u003eDiscoveryClient\u003c/code\u003e将使用以下逻辑选择端口。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e如果服务有一个标签\u003ccode\u003eprimary-port-name\u003c/code\u003e，它将使用标签值中指定名称的端口。\u003c/li\u003e\n\u003cli\u003e如果没有标签，那么将使用\u003ccode\u003espring.cloud.kubernetes.discovery.primary-port-name\u003c/code\u003e中指定的端口名称。\u003c/li\u003e\n\u003cli\u003e如果以上两者都没有指定，它将使用名为 \u003ccode\u003ehttps\u003c/code\u003e 的端口。\u003c/li\u003e\n\u003cli\u003e如果上述条件都不满足，它将使用名为 \u003ccode\u003ehttp\u003c/code\u003e 的端口。\u003c/li\u003e\n\u003cli\u003e作为最后手段，它将选择端口列表中的第一个端口。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003e最后一个选项可能会导致非确定性的行为。请确保对你的服务和/或应用程序进行相应的配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e默认情况下，所有的端口及其名称将被添加到\u003ccode\u003eServiceInstance\u003c/code\u003e的元数据中。\u003c/p\u003e\n\u003cp\u003e如果出于任何原因，你需要禁用\u003ccode\u003eDiscoveryClient\u003c/code\u003e，你可以在\u003ccode\u003eapplication.properties\u003c/code\u003e中设置以下属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.discovery.enabled=false\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一些Spring Cloud组件使用\u003ccode\u003eDiscoveryClient\u003c/code\u003e，以获取本地服务实例的信息。要做到这一点，你需要将Kubernetes服务名称与\u003ccode\u003espring.application.name\u003c/code\u003e属性对齐。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003espring.application.name\u003c/code\u003e对于在Kubernetes中为应用程序注册的名称没有影响。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSpring Cloud Kubernetes还可以观察Kubernetes服务目录的变化，并相应地更新\u003ccode\u003eDiscoveryClient\u003c/code\u003e实现。为了启用这一功能，你需要在你的应用程序中的配置类上添加\u003ccode\u003e@EnableScheduling\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"4-kubernetes本地服务发现\"\u003e4. Kubernetes本地服务发现\u003c/h2\u003e\n\u003cp\u003eKubernetes本身能够进行（服务器端）服务发现（参见：\u003ca href=\"https://kubernetes.io/docs/concepts/services-networking/service/#discovering-services\"\u003ekubernetes.io/docs/concepts/services-networking/service/#discovering-services\u003c/a\u003e）。使用原生的kubernetes服务发现可以确保与其他工具的兼容性，例如Istio（\u003ca href=\"https://istio.io/\"\u003eistio.io\u003c/a\u003e），一个能够实现负载均衡、断路器、故障转移等功能的服务网。\u003c/p\u003e\n\u003cp\u003e然后，调用者服务只需要引用特定Kubernetes集群中可解析的名称。一个简单的实现可以使用一个指向完全合格域名（FQDN）的spring \u003ccode\u003eRestTemplate\u003c/code\u003e，例如\u003ccode\u003e{service-name}.{namespace}.svc.{cluster}.local:{service-port}\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e此外，你可以使用Hystrix进行熔断。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e通过在spring boot应用类中注解\u003ccode\u003e@EnableCircuitBreaker\u003c/code\u003e，在调用方实现熔断器。\u003c/li\u003e\n\u003cli\u003eFallback 功能，通过用\u003ccode\u003e@HystrixCommand(fallbackMethod=\u003c/code\u003e) 注释相应的方法。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"5-kubernetes-propertysource的实现\"\u003e5. Kubernetes PropertySource的实现\u003c/h2\u003e\n\u003cp\u003e配置Spring Boot应用程序的最常见方法是创建\u003ccode\u003eapplication.properties\u003c/code\u003e或\u003ccode\u003eapplication.yaml\u003c/code\u003e或\u003ccode\u003eapplication-profile.properties\u003c/code\u003e或\u003ccode\u003eapplication-profile.yaml\u003c/code\u003e文件，其中包含为应用程序或Spring Boot启动器提供定制值的键值对。你可以通过指定系统属性或环境变量来覆盖这些属性。\u003c/p\u003e\n\u003ch3 id=\"51-使用configmap-propertysource\"\u003e5.1. 使用ConfigMap PropertySource\u003c/h3\u003e\n\u003cp\u003eKubernetes提供了一个名为\u003ca href=\"https://kubernetes.io/docs/user-guide/configmap/\"\u003e\u003ccode\u003eConfigMap\u003c/code\u003e\u003c/a\u003e的资源，以键值对或嵌入的\u003ccode\u003eapplication.properties\u003c/code\u003e或\u003ccode\u003eapplication.yaml\u003c/code\u003e文件的形式将参数外化，传递给你的应用程序。\u003ca href=\"https://github.com/spring-cloud/spring-cloud-kubernetes/tree/master/spring-cloud-kubernetes-fabric8-config\"\u003eSpring Cloud Kubernetes Config\u003c/a\u003e项目使Kubernetes的\u003ccode\u003eConfigMap\u003c/code\u003e实例在应用启动过程中可用，并在发现观察到的\u003ccode\u003eConfigMap\u003c/code\u003e实例发生变化时，触发Bean或Spring上下文的热重载。\u003c/p\u003e\n\u003cp\u003e默认行为是基于Kubernete的\u003ccode\u003eConfigMap\u003c/code\u003e创建\u003ccode\u003eFabric8ConfigMapPropertySource\u003c/code\u003e，其\u003ccode\u003emetadata.name\u003c/code\u003e值为Spring应用程序的名称（由其\u003ccode\u003espring.application.name\u003c/code\u003e属性定义）或在\u003ccode\u003ebootstrap.properties\u003c/code\u003e文件中定义的自定义名称，键为：\u003ccode\u003espring.cloud.kubernetes.config.name\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e然而，更高级的配置是可能的，你可以使用多个\u003ccode\u003eConfigMap\u003c/code\u003e实例。\u003ccode\u003espring.cloud.kubernetes.config.sources\u003c/code\u003e列表使这成为可能。例如，你可以定义以下\u003ccode\u003eConfigMap\u003c/code\u003e实例。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecloud-k8s-app\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekubernetes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault-namespace\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003esources\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a ConfigMap named c1 in namespace default-namespace\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ec1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a ConfigMap named default-name in whatever namespace n2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003en2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a ConfigMap named c3 in namespace n3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003en3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e           \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ec3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的例子中，如果没有设置\u003ccode\u003espring.cloud.kubernetes.config.namespace\u003c/code\u003e，名为\u003ccode\u003ec1\u003c/code\u003e的\u003ccode\u003eConfigMap\u003c/code\u003e将在应用程序运行的命名空间中被查找。\u003c/p\u003e\n\u003cp\u003e找到的任何匹配的\u003ccode\u003eConfigMap\u003c/code\u003e将被处理如下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e应用单个配置属性。\u003c/li\u003e\n\u003cli\u003e将任何名为\u003ccode\u003eapplication.yaml\u003c/code\u003e的属性内容作为\u003ccode\u003eyaml\u003c/code\u003e应用。\u003c/li\u003e\n\u003cli\u003e将任何名为\u003ccode\u003eapplication.properties\u003c/code\u003e的属性内容作为一个属性文件应用。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e上述流程的唯一例外是，当\u003ccode\u003eConfigMap\u003c/code\u003e包含一个表明文件是YAML或属性文件的\u003cstrong\u003esingle\u003c/strong\u003e key时。在这种情况下，键的名称不必是\u003ccode\u003eapplication.yaml\u003c/code\u003e或\u003ccode\u003eapplication.properties\u003c/code\u003e（它可以是任何东西），并且属性的值被正确处理。这一特点有助于通过使用类似以下内容来创建\u003ccode\u003eConfigMap\u003c/code\u003e的用例。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl create configmap game-config --from-file\u003cspan class=\"o\"\u003e=\u003c/span\u003e/path/to/app-config.yaml\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e假设我们有一个名为\u003ccode\u003edemo\u003c/code\u003e的Spring Boot应用程序，它使用以下属性来读取其线程池配置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e`pool.size.core\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epool.size.maximum\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这可以外化为\u003ccode\u003eyaml\u003c/code\u003e格式的config map，如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epool.size.core\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epool.size.max\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e16\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e单独的属性在大多数情况下都能正常工作。然而，有时，嵌入\u003ccode\u003eyaml\u003c/code\u003e更方便。在这种情况下，我们使用一个名为\u003ccode\u003eapplication.yaml\u003c/code\u003e的单一属性来嵌入我们的\u003ccode\u003eyaml\u003c/code\u003e，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yaml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    pool:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      size:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e        core: 1\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e        max:16\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子也可以。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecustom-name.yaml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    pool:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      size:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e        core: 1\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e        max:16\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你也可以根据读取\u003ccode\u003eConfigMap\u003c/code\u003e时合并在一起的活动配置文件，以不同方式配置Spring Boot应用程序。你可以通过使用\u003ccode\u003eapplication.properties\u003c/code\u003e或\u003ccode\u003eapplication.yaml\u003c/code\u003e属性，为不同的profile提供不同的属性值，指定特定的profile值，每个都在自己的文档中（用\u003ccode\u003e---\u003c/code\u003e序列表示），如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the World\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    ---\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    spring:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      profiles: development\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the Developers\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye to the Developers\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    ---\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    spring:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      profiles: production\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the Ops\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的案例中，通过开发配置文件加载到你的Spring应用程序的配置是这样的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSay Hello to the Developers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003efarewell\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSay Goodbye to the Developers\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然而，如果\u003ccode\u003eproduction\u003c/code\u003e配置文件处于\u003ccode\u003eactive\u003c/code\u003e状态，配置就会变成。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSay Hello to the Ops\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003efarewell\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSay Goodbye\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果两个配置文件都处于活动状态，在\u003ccode\u003eConfigMap\u003c/code\u003e中最后出现的属性将覆盖前面的任何值。\u003c/p\u003e\n\u003cp\u003e另一个选择是为每个配置文件创建一个不同的配置map，spring boot会根据活动的配置文件自动获取它\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the World\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo-development\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    spring:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      profiles: development\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the Developers\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye to the Developers\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edemo-production\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.yml\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    spring:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      profiles: production\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    greeting:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Hello to the Ops\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    farewell:\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e      message: Say Goodbye\u003c/span\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要告诉Spring Boot在启动时应该启用哪个配置文件，你可以通过\u003ccode\u003eSPRING_PROFILES_ACTIVE\u003c/code\u003e环境变量。要做到这一点，你可以用环境变量启动你的Spring Boot应用程序，你可以在容器规范的\u003ccode\u003ePodSpec\u003c/code\u003e中定义它。部署资源文件，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eapps/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDeployment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edeployment-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edeployment-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ereplicas\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edeployment-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etemplate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edeployment-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econtainer-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eyour-image\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSPRING_PROFILES_ACTIVE\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;development\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e你应该检查安全配置部分。要从pod内部访问配置maps，你需要有正确的Kubernetes服务账户、角色和角色绑定。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e使用\u003ccode\u003eConfigMap\u003c/code\u003e实例的另一个选择是通过运行Spring Cloud Kubernetes应用程序并让Spring Cloud Kubernetes从文件系统中读取它们，将它们挂载到Pod中。这种行为是由\u003ccode\u003espring.cloud.kubernetes.config.paths\u003c/code\u003e属性控制的。你可以使用它来补充或替代前面描述的机制。你可以在\u003ccode\u003espring.cloud.kubernetes.config.paths\u003c/code\u003e中使用\u003ccode\u003e,\u003c/code\u003e分隔符来指定多个（精确）文件路径。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你必须提供每个属性文件的完整准确路径，因为目录没有被递归解析。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ccode\u003espring.cloud.kubernetes.config.paths\u003c/code\u003e或\u003ccode\u003espring.cloud.kubernetes.secrets.path\u003c/code\u003e，自动重载功能将不起作用。你将需要向\u003ccode\u003e/actuator/refresh\u003c/code\u003e端点发出\u003ccode\u003ePOST\u003c/code\u003e请求，或者重新启动/重新部署应用程序。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eTable 1. Properties:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDefault\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.enabled\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用ConfigMaps \u003ccode\u003ePropertySource\u003c/code\u003e。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.name\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e${spring.application.name}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置 \u003ccode\u003eConfigMap\u003c/code\u003e 的名称以进行查询。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.namespace\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eClient namespace\u003c/td\u003e\n\u003ctd\u003e设置查询的Kubernetes命名空间\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.paths\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eList\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置 \u003ccode\u003eConfigMap\u003c/code\u003e 实例的挂载路径。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.config.enableApi\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用或禁用通过API消费\u003ccode\u003eConfigMap\u003c/code\u003e实例的功能\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"52-secrets-propertysource\"\u003e5.2. Secrets PropertySource\u003c/h3\u003e\n\u003cp\u003eKubernetes有\u003ca href=\"https://kubernetes.io/docs/concepts/configuration/secret/\"\u003eSecrets\u003c/a\u003e的概念，用于存储敏感数据，如密码、OAuth令牌等。这个项目提供了与 \u0026ldquo;秘密 \u0026ldquo;的集成，使秘密可以被Spring Boot应用程序访问。你可以通过设置\u003ccode\u003espring.cloud.kubernetes.secrets.enabled\u003c/code\u003e属性明确地启用或禁用该功能。\u003c/p\u003e\n\u003cp\u003e启用后，\u003ccode\u003eFabric8SecretsPropertySource\u003c/code\u003e从以下来源查找Kubernetes的\u003ccode\u003eSecrets\u003c/code\u003e。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e递归地从secrets挂载中读取\u003c/li\u003e\n\u003cli\u003e2.以应用程序命名（由\u003ccode\u003espring.application.name\u003c/code\u003e定义）。\u003c/li\u003e\n\u003cli\u003e匹配一些标签\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e注意\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e默认情况下，由于安全原因，通过API消费Secrets（上面第2和第3点）\u003cstrong\u003e不启用\u003c/strong\u003e。Secrets上的权限 \u0026ldquo;list\u0026quot;允许客户端检查指定命名空间中的secrets值。此外，我们建议容器通过加载的卷来共享秘密。\u003c/p\u003e\n\u003cp\u003e如果你通过API启用消耗秘密，我们建议你通过使用授权策略来限制对秘密的访问，例如RBAC。关于通过API消费Secrets时的风险和最佳做法的更多信息，请参考\u003ca href=\"https://kubernetes.io/docs/concepts/configuration/secret/#best-practices\"\u003e本文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e如果发现了秘密，它们的数据就会被提供给应用程序。\u003c/p\u003e\n\u003cp\u003e假设我们有一个名为 \u003ccode\u003edemo\u003c/code\u003e 的spring boot应用程序，它使用属性来读取其数据库配置。我们可以通过使用以下命令创建一个Kubernetes secret。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ekubectl create secret generic db-secret --from-literal\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003euser --from-literal\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003epassword\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ep455w0rd\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的命令将创建以下secret（你可以通过使用\u003ccode\u003ekubectl get secrets db-secret -o yaml\u003c/code\u003e查看）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecDQ1NXcwcmQ=\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edXNlcg==\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSecret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecreationTimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"ld\"\u003e2017-07-04T09:15:57Z\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edb-secret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eresourceVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;357496\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eselfLink\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/api/v1/namespaces/default/secrets/db-secret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003euid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e63c89263-6099-11e7-b3da-76d6186905a8\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eOpaque\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意，该数据包含由创建命令提供的字面意思的Base64编码版本。\u003c/p\u003e\n\u003cp\u003e然后，你的应用程序可以使用这个 \u003ccode\u003esecret\u003c/code\u003e - 例如，通过导出\u003ccode\u003esecret\u003c/code\u003e的值作为环境变量。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDeployment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${project.artifactId}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"nt\"\u003etemplate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDB_USERNAME\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003evalueFrom\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                 \u003c/span\u003e\u003cspan class=\"nt\"\u003esecretKeyRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                   \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edb-secret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                   \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eusername\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDB_PASSWORD\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003evalueFrom\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                 \u003c/span\u003e\u003cspan class=\"nt\"\u003esecretKeyRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                   \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edb-secret\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                   \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epassword\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过多种方式选择要消费的\u003ccode\u003esecret\u003c/code\u003e。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e通过列出\u003ccode\u003esecret\u003c/code\u003e被映射的目录\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e-Dspring.cloud.kubernetes.secrets.paths\u003cspan class=\"o\"\u003e=\u003c/span\u003e/etc/secrets/db-secret,etc/secrets/postgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你把所有的\u003ccode\u003esecret\u003c/code\u003e都映射到一个共同的根上，你可以像这样设置它们。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e-Dspring.cloud.kubernetes.secrets.paths\u003cspan class=\"o\"\u003e=\u003c/span\u003e/etc/secrets\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e通过设置一个命名的\u003ccode\u003esecret\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e-Dspring.cloud.kubernetes.secrets.name\u003cspan class=\"o\"\u003e=\u003c/span\u003edb-secret\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e通过定义一个标签列表\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e-Dspring.cloud.kubernetes.secrets.labels.broker\u003cspan class=\"o\"\u003e=\u003c/span\u003eactivemq\n-Dspring.cloud.kubernetes.secrets.labels.db\u003cspan class=\"o\"\u003e=\u003c/span\u003epostgresql\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e如同 \u003ccode\u003eConfigMap\u003c/code\u003e 的情况，更高级的配置也是可能的，你可以使用多个 \u003ccode\u003esecret\u003c/code\u003e 实例。\u003ccode\u003espring.cloud.kubernetes.secrets.sources\u003c/code\u003e列表使这成为可能。例如，你可以定义以下\u003ccode\u003eSecret\u003c/code\u003e实例。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecloud-k8s-app\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekubernetes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003esecrets\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault-name\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault-namespace\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003esources\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a Secret named s1 in namespace default-namespace\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003es1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a Secret named default-name in whatever namespace n2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003en2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e\u003cspan class=\"c\"\u003e# Spring Cloud Kubernetes looks up a Secret named s3 in namespace n3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e         \u003c/span\u003e- \u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003en3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e           \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003es3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的例子中，如果没有设置\u003ccode\u003espring.cloud.kubernetes.secrets.namespace\u003c/code\u003e，命名为\u003ccode\u003es1\u003c/code\u003e的\u003ccode\u003eSecret\u003c/code\u003e将在应用程序运行的命名空间中被查找到。\u003c/p\u003e\n\u003cp\u003eTable 2. Properties:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDefault\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.enabled\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用 Secrets \u003ccode\u003ePropertySource\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.name\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e${spring.application.name}\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置要查询的\u003ccode\u003eSecrets\u003c/code\u003e的名称\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.namespace\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eString\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eClient namespace\u003c/td\u003e\n\u003ctd\u003e设置Kubernetes的命名空间，用于查询\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.labels\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eMap\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置用于查询\u003ccode\u003eSecrets\u003c/code\u003e的标签\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.paths\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eList\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e设置安装\u003ccode\u003eSecrets\u003c/code\u003e的路径（例子1）。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.enableApi\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用或禁用通过API消费\u003ccode\u003eSecrets\u003c/code\u003e的功能（例子2和3）。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e注意事项\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.labels\u003c/code\u003e属性的行为与\u003ca href=\"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Configuration-Binding#map-based-binding\"\u003eMap-based binding.\u003c/a\u003e所定义的一致。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.cloud.kubernetes.secrets.paths\u003c/code\u003e属性的行为与\u003ca href=\"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Configuration-Binding#collection-based-binding\"\u003eCollection-based binding.\u003c/a\u003e所定义的一样。\u003c/li\u003e\n\u003cli\u003e出于安全原因，通过API访问秘密可能受到限制。首选的方法是将秘密挂载到Pod上。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e你可以在\u003ca href=\"https://github.com/fabric8-quickstarts/spring-boot-camel-config\"\u003espring-boot-camel-config\u003c/a\u003e找到一个使用secrets的应用实例（尽管它还没有被更新到使用新的\u003ccode\u003espring-cloud-kubernetes\u003c/code\u003e项目）。\u003c/p\u003e\n\u003ch3 id=\"53-propertysource-reload\"\u003e5.3. PropertySource Reload\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这一功能在2020.0版本中已被弃用。请参阅\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#spring-cloud-kubernetes-configuration-watcher\"\u003eSpring Cloud Kubernetes Configuration Watcher\u003c/a\u003e控制器，以获取实现相同功能的替代方法。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e一些应用程序可能需要检测外部属性源上的变化，并更新其内部状态以反映新的配置。Spring Cloud Kubernetes的重载功能能够在相关的\u003ccode\u003eConfigMap\u003c/code\u003e或\u003ccode\u003eSecret\u003c/code\u003e发生变化时触发应用重载。\u003c/p\u003e\n\u003cp\u003e默认情况下，这个功能是禁用的。你可以通过使用\u003ccode\u003espring.cloud.kubernetes.reload.enabled=true\u003c/code\u003e配置属性来启用它（例如，在\u003ccode\u003eapplication.properties\u003c/code\u003e文件中）。\u003c/p\u003e\n\u003cp\u003e支持以下级别的重载（通过设置\u003ccode\u003espring.cloud.kubernetes.reload.strategy\u003c/code\u003e属性）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003erefresh\u003c/code\u003e（默认）。只有用\u003ccode\u003e@ConfigurationProperties\u003c/code\u003e或\u003ccode\u003e@RefreshScope\u003c/code\u003e注释的配置豆被重新加载。这个重载级别利用了Spring Cloud Context的刷新功能。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003erestart_context\u003c/code\u003e：整个Spring\u003ccode\u003eApplicationContext\u003c/code\u003e被优雅地重新启动。豆类以新的配置重新创建。为了使重启上下文功能正常工作，你必须启用并公开重启执行器端点\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003emanagement\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eendpoint\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003erestart\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eendpoints\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eweb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eexposure\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003einclude\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erestart\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eshutdown\u003c/code\u003e：Spring \u003ccode\u003eApplicationContext\u003c/code\u003e被关闭以激活容器的重新启动。当你使用这个级别时，请确保所有非daemon线程的生命周期被绑定到ApplicationContext，并且复制控制器或复制集被配置为重启pod。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e假设在默认设置下启用了重载功能（刷新模式），当config map发生变化时，会刷新以下bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@ConfigurationProperties\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eprefix\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;bean\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;a message that can be changed live\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// getter and setters\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了看到变化的有效发生，你可以创建另一个Bean，定期打印消息，如下所示\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyBean\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Scheduled\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efixedDelay\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e5000\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ehello\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;The message is: \u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003econfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以通过使用\u003ccode\u003eConfigMap\u003c/code\u003e来改变应用程序打印的信息，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eConfigMap\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ereload-example\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapplication.properties\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e|-\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e    \u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"l\"\u003ebean.message=Hello World!\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e与pod相关的\u003ccode\u003eConfigMap'中名为\u003c/code\u003ebean.message\u0026rsquo;的属性的任何变化都会反映在输出中。更一般地说，与以\u003ccode\u003e@ConfigurationProperties\u003c/code\u003e注解的\u003ccode\u003eprefix\u003c/code\u003e字段定义的值为前缀的属性相关的变化会被检测并反映在应用程序中。本章前面解释了\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/#configmap-propertysource\"\u003e将\u003ccode\u003eConfigMap\u003c/code\u003e与pod相关联\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e完整的例子见\u003ca href=\"https://github.com/spring-cloud/spring-cloud-kubernetes/tree/main/spring-cloud-kubernetes-examples/kubernetes-reload-example\"\u003e\u003ccode\u003espring-cloud-kubernetes-reload-example\u003c/code\u003e\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e重载功能支持两种操作模式:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eevent\u003c/code\u003e（默认）。通过使用Kubernetes API（网络套接字）来观察配置图或秘密的变化。任何事件都会产生对配置的重新检查，如果有变化，则重新加载。为了监听配置图的变化，需要服务账户上的\u003ccode\u003eview\u003c/code\u003e角色。秘密需要一个更高级别的角色（如\u003ccode\u003e编辑\u003c/code\u003e）（默认情况下，秘密不被监控）。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003epolling\u003c/code\u003e。定期从配置图和秘密中重新创建配置，看它是否有变化。你可以通过使用\u003ccode\u003espring.cloud.kubernetes.reload.period\u003c/code\u003e属性来配置轮询周期，默认为15秒。它要求与被监控的属性源的角色相同。这意味着，例如，在文件挂载的秘密源上使用轮询不需要特别的权限。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTable 3. Properties:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eType\u003c/th\u003e\n\u003cth\u003eDefault\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.enabled\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e启用对配置资源的监控和配置重载\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.monitoring-config-maps\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e允许监控 \u003ccode\u003econfig maps\u003c/code\u003e 的变化\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.monitoring-secrets\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eBoolean\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e允许监控 \u003ccode\u003esecrets\u003c/code\u003e的变化\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.strategy\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eEnum\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003erefresh\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e触发重载时使用的策略 ( \u003ccode\u003erefresh\u003c/code\u003e , \u003ccode\u003erestart_context\u003c/code\u003e , or \u003ccode\u003eshutdown\u003c/code\u003e )\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.mode\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eEnum\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eevent\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e指定如何监听属性源的变化（\u003ccode\u003eevent\u003c/code\u003e或\u003ccode\u003epolling\u003c/code\u003e）。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003espring.cloud.kubernetes.reload.period\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eDuration\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003e15s\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003e使用 \u003ccode\u003epolling\u003c/code\u003e 策略时，验证变化的周期\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e注意事项\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e你不应该在\u003ccode\u003econfig maps\u003c/code\u003e或\u003ccode\u003esecrets\u003c/code\u003e中使用\u003ccode\u003espring.cloud.kubernetes.reload\u003c/code\u003e下的属性。在运行时改变这些属性可能会导致意外的结果。\u003c/li\u003e\n\u003cli\u003e当你使用\u003ccode\u003erefresh\u003c/code\u003e级别时，删除一个属性或整个配置图不会恢复bean的原始状态。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"6-kubernetes生态系统意识\"\u003e6. Kubernetes生态系统意识\u003c/h2\u003e\n\u003cp\u003e无论你的应用程序是否在Kubernetes内运行，本指南前面描述的所有功能都同样有效。这对开发和故障排除真的很有帮助。从开发的角度来看，这可以让你启动你的Spring Boot应用，并调试这个项目中的一个模块。你不需要在Kubernetes中部署它，因为项目的代码依赖于\u003ca href=\"https://github.com/fabric8io/kubernetes-client\"\u003eFabric8 Kubernetes Java客户端\u003c/a\u003e，它是一个流畅的DSL，可以通过使用\u003ccode\u003ehttp\u003c/code\u003e协议与Kubernetes服务器的REST API进行通信。\u003c/p\u003e\n\u003cp\u003e要禁用与Kubernetes的集成，你可以将\u003ccode\u003espring.cloud.kubernetes.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。请注意，当\u003ccode\u003espring-cloud-kubernetes-config\u003c/code\u003e在classpath上时，\u003ccode\u003espring.cloud.kubernetes.enabled\u003c/code\u003e应该设置在\u003ccode\u003ebootstrap.{properties|yml}\u003c/code\u003e（或特定的配置文件），否则应该在\u003ccode\u003eapplication.{properties|yml}\u003c/code\u003e（或特定的配置文件）。还要注意这些属性。\u003ccode\u003espring.cloud.kubernetes.config.enabled\u003c/code\u003e和\u003ccode\u003espring.cloud.kubernetes.secrets.enabled\u003c/code\u003e只有在\u003ccode\u003ebootstrap.{properties|yml}\u003c/code\u003e中设置才会生效。\u003c/p\u003e\n\u003ch3 id=\"61-kubernetes配置文件自动配置\"\u003e6.1 Kubernetes配置文件自动配置\u003c/h3\u003e\n\u003cp\u003e当应用程序在Kubernetes内以\u003ccode\u003epod\u003c/code\u003e形式运行时，一个名为kubernetes的Spring配置文件会自动被激活。这让你可以定制配置，定义Spring Boot应用在Kubernetes平台上部署时应用的bean（例如，不同的开发和生产配置）。\u003c/p\u003e\n\u003ch3 id=\"62-istio意识\"\u003e6.2. Istio意识\u003c/h3\u003e\n\u003cp\u003e当你在应用程序的classpath中包含\u003ccode\u003espring-cloud-kubernetes-fabric8-istio\u003c/code\u003e模块时，一个新的配置文件被添加到应用程序中，前提是该应用程序在安装了\u003ca href=\"https://istio.io/\"\u003eIstio\u003c/a\u003e的Kubernetes集群中运行。然后你可以在你的Bean和\u003ccode\u003e@Configuration\u003c/code\u003e类中使用spring \u003ccode\u003e@Profile(\u0026quot;istio\u0026quot;)\u003c/code\u003e注释。\u003c/p\u003e\n\u003cp\u003eIstio意识模块使用\u003ccode\u003eme.snowdrop:istio-client\u003c/code\u003e与Istio API交互，让我们发现流量规则、断路器等，使我们的Spring Boot应用程序能够轻松地消费这些数据，根据环境动态地配置自己。\u003c/p\u003e\n\u003ch2 id=\"7-pod-健康指标\"\u003e7. Pod 健康指标\u003c/h2\u003e\n\u003cp\u003eSpring Boot使用\u003ca href=\"https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/HealthEndpoint.java\"\u003e\u003ccode\u003eHealthIndicator\u003c/code\u003e\u003c/a\u003e来暴露应用程序的健康信息。这使得它在向用户公开健康相关信息方面非常有用，并使它很适合作为\u003ca href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/\"\u003e准备就绪探针\u003c/a\u003e使用。\u003c/p\u003e\n\u003cp\u003eKubernetes健康指标（是核心模块的一部分）暴露了以下信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePod名称、IP地址、命名空间、服务账户、节点名称及其IP地址。\u003c/li\u003e\n\u003cli\u003e指示Spring Boot应用程序是在Kubernetes内部还是外部的一个标志。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"8-信息贡献者\"\u003e8. 信息贡献者\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Kubernetes包括一个\u003ccode\u003eInfoContributor\u003c/code\u003e，它将Pod信息添加到Spring Boot的\u003ccode\u003e/info\u003c/code\u003e Acturator 端点。\u003c/p\u003e\n\u003cp\u003e你可以通过在\u003ccode\u003ebootstrap.[properties | yaml]\u003c/code\u003e中设置\u003ccode\u003emanagement.info.kubernetes.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来禁用这个\u003ccode\u003eInfoContributor\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"9-leader选举\"\u003e9. Leader选举\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Kubernetes领导者选举机制使用Kubernetes ConfigMap实现了Spring Integration的领导者选举API。\u003c/p\u003e\n\u003cp\u003e多个应用实例竞争领导权，但领导权只授予一个。当被授予领导权时，领导者应用会收到一个带有领导权\u003ccode\u003eContext\u003c/code\u003e的\u003ccode\u003eOnGrantedEvent\u003c/code\u003e应用事件。应用程序会定期尝试获得领导权，并将领导权授予第一个调用者。一个领导者将一直是一个领导者，直到它被从集群中移除，或者它放弃了它的领导权。当领导权被移除时，前一个领导者会收到\u003ccode\u003eOnRevokedEvent\u003c/code\u003e应用事件。移除后，集群中的任何实例都可以成为新的领导者，包括旧的领导者。\u003c/p\u003e\n\u003cp\u003e要在你的项目中包含它，请添加以下依赖关系。\u003c/p\u003e\n\u003cp\u003eFabric8 Leader Implementation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-kubernetes-fabric8-leader\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要指定用于Leader选举的configmap的名称，请使用以下property。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.leader.config-map-name=leader\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"10-用于kubernetes的负载均衡器\"\u003e10. 用于Kubernetes的负载均衡器。\u003c/h2\u003e\n\u003cp\u003e这个项目包括Spring Cloud Load Balancer，用于基于Kubernetes Endpoints的负载平衡，并提供了基于Kubernetes Service的负载平衡器的实现。要将其纳入你的项目，请添加以下依赖关系。\u003c/p\u003e\n\u003cp\u003eFabric8 Implementation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-fabric8-loadbalancer\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eKubernetes Java Client Implementation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-kubernetes-client-loadbalancer\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要启用基于Kubernetes服务名称的负载均衡，请使用以下属性。然后负载均衡器将尝试使用地址调用应用程序，例如\u003ccode\u003eservice-a.default.svc.cluster.local\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.loadbalancer.mode=SERVICE\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要启用所有命名空间的负载均衡，请使用以下属性。尊重\u003ccode\u003espring-cloud-kubernetes-discovery\u003c/code\u003e模块的属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003espring.cloud.kubernetes.discovery.all-namespaces=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"11-kubernetes内部的安全配置\"\u003e11. Kubernetes内部的安全配置\u003c/h2\u003e\n\u003ch3 id=\"111-namespace\"\u003e11.1. Namespace\u003c/h3\u003e\n\u003cp\u003e本项目中提供的大多数组件都需要知道命名空间。对于Kubernetes（1.3以上），命名空间作为服务账户\u003ccode\u003esecret\u003c/code\u003e的一部分提供给pod，并由客户端自动检测。对于早期版本，它需要作为环境变量指定给pod。做到这一点的快速方法如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eenv\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;KUBERNETES_NAMESPACE\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003evalueFrom\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003efieldRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efieldPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;metadata.namespace\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"112-服务账户\"\u003e11.2. 服务账户\u003c/h3\u003e\n\u003cp\u003e或支持集群内更精细的基于角色的访问的Kubernetes发行版，你需要确保使用\u003ccode\u003espring-cloud-kubernetes\u003c/code\u003e运行的pod可以访问Kubernetes API。对于你分配给部署或pod的任何服务账户，你需要确保他们有正确的角色。\u003c/p\u003e\n\u003cp\u003e根据要求，你需要在以下资源上有\u003ccode\u003eget\u003c/code\u003e、\u003ccode\u003elist\u003c/code\u003e和\u003ccode\u003ewatch\u003c/code\u003e的权限。\u003c/p\u003e\n\u003cp\u003eTable 4. Kubernetes Resource Permissions\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eDependency\u003c/th\u003e\n\u003cth\u003eResources\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003espring-cloud-starter-kubernetes-fabric8\u003c/td\u003e\n\u003ctd\u003epods, services, endpoints\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003espring-cloud-starter-kubernetes-fabric8-config\u003c/td\u003e\n\u003ctd\u003econfigmaps, secrets\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003espring-cloud-starter-kubernetes-client\u003c/td\u003e\n\u003ctd\u003epods, services, endpoints\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003espring-cloud-starter-kubernetes-client-config\u003c/td\u003e\n\u003ctd\u003econfigmaps, secrets\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e为了开发的目的，你可以给你的 \u003ccode\u003edefault\u003c/code\u003e 服务账户增加 \u003ccode\u003ecluster-reader\u003c/code\u003e 的权限。在生产系统中，你可能想提供更细的权限。\u003c/p\u003e\n\u003cp\u003e下面的Role和RoleBinding是一个为\u003ccode\u003edefault\u003c/code\u003e账户命名的权限的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRole\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYOUR-NAME-SPACE\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003erules\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;extensions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;apps\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eresources\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;configmaps\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;pods\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;services\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;endpoints\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;secrets\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003everbs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;get\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;list\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;watch\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRoleBinding\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader-binding\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eYOUR-NAME-SPACE\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003esubjects\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eServiceAccount\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRole\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"12-服务注册的实施\"\u003e12. 服务注册的实施\u003c/h2\u003e\n\u003cp\u003e在Kubernetes中，服务注册由平台控制，应用程序本身并不像其他平台那样控制注册。因此，使用\u003ccode\u003espring.cloud.service-registry.auto-registration.enabled\u003c/code\u003e或设置\u003ccode\u003e@EnableDiscoveryClient(autoRegister=false)\u003c/code\u003e在Spring Cloud Kubernetes中没有效果。\u003c/p\u003e\n\u003ch2 id=\"13-spring-cloud-kubernetes配置watcher\"\u003e13. Spring Cloud Kubernetes配置Watcher\u003c/h2\u003e\n\u003cp\u003eKubernetes提供了在应用程序的容器中\u003ca href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#add-configmap-data-to-a-volume\"\u003e将ConfigMap或Secret作为卷装载\u003c/a\u003e的能力。当ConfigMap或Secret的内容发生变化时，\u003ca href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#mounted-configmaps-are-updated-automatically\"\u003e挂载的卷就会根据这些变化进行更新\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e然而，除非你重新启动应用程序，否则Spring Boot不会自动更新这些变化。Spring Cloud提供了刷新应用程序上下文的能力，无需重启应用程序，方法是点击执行器端点\u003ccode\u003e/refresh\u003c/code\u003e或通过使用Spring Cloud Bus发布\u003ccode\u003eRefreshRemoteApplicationEvent\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e为了实现在Kubernetes上运行的Spring Cloud应用程序的配置刷新，你可以将Spring Cloud Kubernetes配置观察者控制器部署到你的Kubernetes集群。\u003c/p\u003e\n\u003cp\u003e该应用以容器形式发布，可在\u003ca href=\"https://hub.docker.com/repository/docker/springcloud/spring-cloud-kubernetes-configuration-watcher\"\u003eDocker Hub\u003c/a\u003e上使用。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Kubernetes Configuration Watcher可以通过两种方式向应用程序发送刷新通知。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e通过HTTP，在这种情况下，被通知的应用程序必须有\u0026rdquo;/refresh \u0026ldquo;执行器端点暴露，并可从集群内访问。\u003c/li\u003e\n\u003cli\u003e2.使用Spring Cloud Bus，在这种情况下，你将需要一个部署在你的托管中心的消息代理，以便应用程序使用。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"131-deployment-yaml\"\u003e13.1. Deployment YAML\u003c/h3\u003e\n\u003cp\u003e下面是一个部署YAML的样本，你可以用来将Kubernetes配置观察器部署到Kubernetes。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eList\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eitems\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eService\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003etargetPort\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eClusterIP\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eServiceAccount\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRoleBinding\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher:view\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eroleRef\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRole\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eapiGroup\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esubjects\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eServiceAccount\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erbac.authorization.k8s.io/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eRole\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003enamespace\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003edefault\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enamespace-reader\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003erules\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiGroups\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;extensions\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;apps\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003eresources\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;configmaps\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;pods\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;services\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;endpoints\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;secrets\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003everbs\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;get\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;list\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;watch\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e- \u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eapps/v1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDeployment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher-deployment\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003ematchLabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etemplate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceAccount\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e\u003cspan class=\"nt\"\u003econtainers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e          \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espring-cloud-kubernetes-configuration-watcher\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003espringcloud/spring-cloud-kubernetes-configuration-watcher:2.0.1-SNAPSHOT\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eimagePullPolicy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eIfNotPresent\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003ereadinessProbe\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpGet\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/actuator/health/readiness\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003elivenessProbe\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e              \u003c/span\u003e\u003cspan class=\"nt\"\u003ehttpGet\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003epath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/actuator/health/liveness\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e- \u003cspan class=\"nt\"\u003econtainerPort\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8888\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e服务账户和相关的角色绑定对于Spring Cloud Kubernetes配置的正常工作非常重要。控制器需要读取Kubernetes集群中的ConfigMaps、Pod、服务、端点和Secrets数据的权限。\u003c/p\u003e\n\u003ch3 id=\"132-监控-configmaps-和-secrets\"\u003e13.2. 监控 ConfigMaps 和 Secrets\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Kubernetes Configuration Watcher将对标签为\u003ccode\u003espring.cloud.kubernetes.config\u003c/code\u003e且值为\u003ccode\u003etrue\u003c/code\u003e的ConfigMaps或标签为\u003ccode\u003espring.cloud.kubernetes.secret\u003c/code\u003e且值为\u003ccode\u003etrue\u003c/code\u003e的任何Secret中的变化做出反应。如果ConfigMap或Secret没有这些标签，或者这些标签的值不是\u003ccode\u003etrue\u003c/code\u003e，那么任何改变都会被忽略。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Kubernetes Configuration Watcher在ConfigMaps和Secrets上寻找的标签可以分别通过设置\u003ccode\u003espring.cloud.kubernetes.config.watcher.configLabel\u003c/code\u003e和\u003ccode\u003espring.cloud.kubernetes.config.watcher.secretLabel\u003c/code\u003e来改变。\u003c/p\u003e\n\u003cp\u003e如果对具有有效标签的ConfigMap或Secret进行了更改，那么Spring Cloud Kubernetes Configuration Watcher将采用ConfigMap或Secret的名称，并以该名称向应用程序发送通知。\u003c/p\u003e\n\u003ch3 id=\"133-http的实现\"\u003e13.3. HTTP的实现\u003c/h3\u003e\n\u003cp\u003eHTTP实现是默认使用的。当使用该实现时，Spring Cloud Kubernetes Configuration Watcher和ConfigMap或Secret发生变化，那么HTTP实现将使用Spring Cloud Kubernetes Discovery Client来获取与ConfigMap或Secret名称匹配的所有应用程序实例，并向应用程序的actuator\u003ccode\u003e/refresh\u003c/code\u003e端点发送HTTP POST请求。默认情况下，它将使用发现客户端中注册的端口向\u003ccode\u003e/actuator/refresh\u003c/code\u003e发送post请求。\u003c/p\u003e\n\u003ch4 id=\"1331-非默认的管理端口和执行器路径\"\u003e13.3.1. 非默认的管理端口和执行器路径\u003c/h4\u003e\n\u003cp\u003e如果应用程序使用非默认的执行器路径和/或为管理端点使用不同的端口，应用程序的Kubernetes服务可以添加一个名为\u003ccode\u003eboot.spring.io/actuator\u003c/code\u003e的注解，并将其值设置为应用程序使用的路径和端口。例如\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003eapiVersion\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003ekind\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eService\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003emetadata\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003elabels\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfig-map-demo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfig-map-demo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eannotations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eboot.spring.io/actuator\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://:9090/myactuator/home\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espec\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eports\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8080\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etargetPort\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8080\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eselector\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eapp\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003econfig-map-demo\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以选择配置执行器路径和/或管理端口的另一种方式是设置\u003ccode\u003espring.cloud.kubernetes.configuration.watcher.actuatorPath\u003c/code\u003e和\u003ccode\u003espring.cloud.kubernetes.configuration.watcher.actuatorPort\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"134-messaging-implementation\"\u003e13.4. Messaging Implementation\u003c/h3\u003e\n\u003cp\u003e当Spring Cloud Kubernetes配置观察者应用程序部署到Kubernetes时，可以通过将配置文件设置为\u003ccode\u003ebus-amqp\u003c/code\u003e（RabbitMQ）或\u003ccode\u003ebus-kafka\u003c/code\u003e（Kafka）来启用消息传递实现。\u003c/p\u003e\n\u003ch3 id=\"135-rabbitmq-配置\"\u003e13.5. RabbitMQ 配置\u003c/h3\u003e\n\u003cp\u003e当启用 \u003ccode\u003ebus-amqp\u003c/code\u003e 配置文件时，您将需要配置 Spring RabbitMQ 以将其指向您希望使用的 RabbitMQ 实例的位置，以及任何必要的验证凭证。这可以通过设置标准 Spring RabbitMQ 属性来完成，例如\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003erabbitmq\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eusername\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003euser\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epassword\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003erabbitmq\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"136-kafka-配置\"\u003e13.6. Kafka 配置\u003c/h3\u003e\n\u003cp\u003e启用\u003ccode\u003ebus-kafka\u003c/code\u003e配置文件后，你需要配置Spring Kafka，将其指向你想使用的Kafka Broker实例的位置。这可以通过设置标准的Spring Kafka属性来完成，例如\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ekafka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eproducer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ebootstrap-servers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocalhost:9092\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"14-examples\"\u003e14. Examples\u003c/h2\u003e\n\u003cp\u003eSpring Cloud Kubernetes试图通过遵循Spring Cloud的接口，使你的应用程序在消费Kubernetes原生服务时变得透明。\u003c/p\u003e\n\u003cp\u003e在你的应用程序中，你需要在classpath中添加\u003ccode\u003espring-cloud-kubernetes-discovery\u003c/code\u003e依赖项，并删除任何包含\u003ccode\u003eDiscoveryClient\u003c/code\u003e实现（即Eureka发现客户端）的其他依赖项。这同样适用于 \u003ccode\u003ePropertySourceLocator\u003c/code\u003e，你需要在classpath中添加 \u003ccode\u003espring-cloud-kubernetes-config\u003c/code\u003e，并删除任何包含 \u003ccode\u003ePropertySourceLocator\u003c/code\u003e 实现（即配置服务器客户端）的其他依赖。\u003c/p\u003e\n\u003cp\u003e以下项目强调了这些依赖关系的用法，并演示了你如何从任何Spring Boot应用程序中使用这些库。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/sring-cloud/spring-cloud-kubernetes/tree/master/spring-cloud-kubernetes-examples\"\u003eSpring Cloud Kubernetes Examples\u003c/a\u003e：位于这个资源库里面的。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSpring Cloud Kubernetes完整示例。Minions和Boss\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/salaboy/spring-cloud-k8s-minion\"\u003eMinion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/salaboy/spring-cloud-k8s-boss\"\u003eBoss\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSpring Cloud Kubernetes完整示例：\u003ca href=\"https://github.com/salaboy/s1p_docs\"\u003eSpringOne Platform Tickets Service\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/salaboy/s1p_gateway\"\u003eSpring Cloud Gateway with Spring Cloud Kubernetes Discovery and Config\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/salaboy/showcase-admin-tool\"\u003eSpring Boot Admin with Spring Cloud Kubernetes Discovery and Config\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"15-其他资源\"\u003e15. 其他资源\u003c/h2\u003e\n\u003cp\u003e本节列出了其他资源，如关于Spring Cloud Kubernetes的演讲（slides）和视频。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://salaboy.com/2018/09/27/the-s1p-experience/\"\u003eS1P Spring Cloud on PKS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://salaboy.com/2018/07/18/ljc-july-18-spring-cloud-docker-k8s/\"\u003eSpring Cloud, Docker, Kubernetes → London Java Community July 2018\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e请随时通 pull requests 向\u003ca href=\"https://github.com/spring-cloud/spring-cloud-kubernetes\"\u003e本仓库\u003c/a\u003e提交其他资源。\u003c/p\u003e\n\u003ch2 id=\"16-配置属性\"\u003e16. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有与Kubernetes相关的配置属性列表，请查看\u003ca href=\"https://docs.spring.io/spring-cloud-kubernetes/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 7,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-netflix/",
        title: "Spring Cloud Netflix",
        description: "Spring Cloud Netflix通过自动配置和绑定到Spring环境和其他Spring编程模型习语，为Spring Boot应用提供了Netflix OSS集成。通过一些简单的注释，您可以在应用程序中快速启用和配置通用模式，并使用经过实战考验的Netflix组件构建大型分布式系统。提供的模式包括服务发现(Eureka)、断路器(Hystrix)、智能路由(Zuul)和客户端负载均衡(Ribbon)。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月22日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix\"\u003ehttps://github.com/spring-cloud/spring-cloud-netflix\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Netflix通过自动配置和绑定到Spring环境和其他Spring编程模型习语，为Spring Boot应用提供了Netflix OSS集成。通过一些简单的注释，您可以在应用程序中快速启用和配置通用模式，并使用经过实战考验的Netflix组件构建大型分布式系统。提供的模式包括服务发现(Eureka)、断路器(Hystrix)、智能路由(Zuul)和客户端负载均衡(Ribbon)。\u003c/p\u003e\n\u003ch2 id=\"1-服务发现eureka-clinet\"\u003e1. 服务发现：Eureka Clinet\u003c/h2\u003e\n\u003cp\u003e服务发现是基于微服务的体系结构的关键原则之一。尝试手动配置每个客户端或某种形式的约定可能很困难，而且可能易挂。Netflix的服务发现器和客户端Eureka，可以将服务器配置和部署为高可用性，每个服务器都可以将已注册服务的状态复制给其他服务器。\u003c/p\u003e\n\u003ch3 id=\"11-如何引入eureka-client\"\u003e1.1. 如何引入Eureka Client\u003c/h3\u003e\n\u003cp\u003e要在项目中包含Eureaka Client，请使用start中gruop ID为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和artifact ID为\u003ccode\u003espring-cloud-starter-netflix-eureka-client\u003c/code\u003e的包，有关使用Spring cloud设置构建系统的详细信息，请参阅\u003ca href=\"https://spring.io/projects/spring-cloud\"\u003eSpring Cloud Project\u003c/a\u003e\n页面。\u003c/p\u003e\n\u003ch3 id=\"12-向eureka注册服务\"\u003e1.2. 向Eureka注册服务\u003c/h3\u003e\n\u003cp\u003e当客户端向Eureka注册时，它会提供关于自身的元数据，例如主机、端口、健康状态URl、主页和其他详细信息。Eureka接收来自属于某个服务的每个实例的心跳消息。如果在可配置的时间内检测心跳失败，实例客户端通常会从注册中心删除。\u003c/p\u003e\n\u003cp\u003e下面的例子展示了一个最小的Eureka客户端应用程序:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello world\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpringApplicationBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eweb\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意，上面的示例只是一个普通的Spring Boot应用程序。通过包管理文件引入\u003ccode\u003espring-cloud-starter-netflix-Eureka-client\u003c/code\u003e依赖，你的应用程序将自动注册到Eureka Server。定位 Eureka服务器需要配置，如下面的例子所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:8761/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的示例中，\u003ccode\u003edefaultZone\u003c/code\u003e 是一个缺省字符串回调值，它为任何不填写注册中心地址的客户端提供一个默认值。(换句话说：不填此项，eureka使用http://localhost:8761/eureka/作为默认地址)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e📍 这个\u003ccode\u003edefaultZone\u003c/code\u003e属性是区分大小写的，并且需要驼峰命令法，因为\u003ccode\u003eserviceUrl\u003c/code\u003e属性是\u003ccode\u003eMap\u0026lt;String, String\u0026gt;\u003c/code\u003e。因此，\u003ccode\u003edefaultZone\u003c/code\u003e属性不遵循常规Spring Boot蛇形命名法约定。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e默认的应用程序名称(即服务 ID)、虚拟主机和非安全端口(取自环境)分别为\u003ccode\u003e${ spring.application.name }\u003c/code\u003e、\u003ccode\u003e${ spring.application.name }\u003c/code\u003e和\u003ccode\u003e${ server.port }\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e在包管理工具中引入\u003ccode\u003espring-cloud-starter-netflix-Eureka-client\u003c/code\u003e,使得应用程序既成为Eureka示例，也成为客户端（它可以查询注册中心定位其他服务）。实例行为是由\u003ccode\u003eeuraka.instance.*\u003c/code\u003e配置驱动的，但是你要确保你的应用程序配置\u003ccode\u003espring.application.name\u003c/code\u003e值。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e有关可配置选项的更多详细信息，请参阅\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix/tree/main/spring-cloud-netflix-eureka-client/src/main/java/org/springframework/cloud/netflix/eureka/EurekaInstanceConfigBean.java\"\u003eEurekaInstanceConfigBean\u003c/a\u003e和\u003ca href=\"https://github.com/spring-cloud/spring-cloud-netflix/tree/main/spring-cloud-netflix-eureka-client/src/main/java/org/springframework/cloud/netflix/eureka/EurekaClientConfigBean.java\"\u003eEurekaClientConfigBean\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要禁用Eureka发现客户端，你可以将\u003ccode\u003eEureka.Client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。当 \u003ccode\u003espring.cloud.Discovery.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e时，Eureka发现客户端也将被禁用。\u003c/p\u003e\n\u003ch3 id=\"13-在eureka-server上验证\"\u003e1.3 在Eureka server上验证\u003c/h3\u003e\n\u003cp\u003e如果\u003ccode\u003eeureka.client.serviceur.defaultzone\u003c/code\u003e的Url中嵌入了凭据(curl样式的，示例：user: password@localhost: 8761/eureka)，HTTP的基本身份验证将自动添加到Eureka客户机中。对于更负载的需求，你可以创建类型为：\u003ccode\u003eDiscoveryClientOptionalArgs\u003c/code\u003e 的\u003ccode\u003e@bean\u003c/code\u003e，并将\u003ccode\u003eClientFilter\u003c/code\u003e实例插入其中，所有这些都应用于从客户机到服务器的调用。\u003c/p\u003e\n\u003cp\u003e当Eureka服务器需要客户端证书进行身份验证时，客户端证书和信任存储可以通过属性进行配置，如下例所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003etls\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;path-of-key-store\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;key-store-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ekey-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;key-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;path-of-trust-store\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store-type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ePKCS12\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etrust-store-password\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e\u0026lt;trust-store-password\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e启用\u003ccode\u003eEureka.client.TLS.enabled \u003c/code\u003e要为true才能启用Eureka客户端的TLS。当省略\u003ccode\u003eeurea.client.tls.trust-store\u003c/code\u003e时，将使用JVM默认信任存储。\u003ccode\u003eEureka.client.tls.key-store-type\u003c/code\u003e和\u003ccode\u003eeureka.client.tls.trust-store-type\u003c/code\u003e的默认值是 PKCS12。如果省略密码属性，则假定为空密码。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e由于 Eureka 中的限制，不可能支持每个服务器的基本授权凭证，因此只使用找到的第一组凭证。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你想定制Eureka HTTP客户端使用的\u003ccode\u003eRestTemplate\u003c/code\u003e，你可以创建一个 \u003ccode\u003eEurekaClientHttpRequestFactorySupplier\u003c/code\u003e，并编写自己的逻辑来生成\u003ccode\u003eClientHttpRequestFactory\u003c/code\u003e实例。\u003c/p\u003e\n\u003ch3 id=\"14-状态页和健康指示器\"\u003e1.4 状态页和健康指示器\u003c/h3\u003e\n\u003cp\u003eEureka 实例的状态页面和健康状态指示器分别默认为\u003ccode\u003e/info\u003c/code\u003e 和\u003ccode\u003e/health\u003c/code\u003e，这是Spring Boot Actuator应用程序中有用的端点默认位置。如果使用非默认的上下文路径或servlet路径(比如 server.servletPath =/custom) ，那么即使对于实现的应用程序也需要修改这些路径。下面的示例显示了这两个设置的默认值:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003estatusPageUrlPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${server.servletPath}/info\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthCheckUrlPath\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${server.servletPath}/health\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这些链接显示在客户端使用的元数据中，并且在某些场景中用于决定是否向应用程序发送请求，因此如果这些请求是准确的，就很有帮助。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在Dalston(版本名字)中，当更改管理上下文路径时，还需要设置状态和运行状况检查url。这个要求从Edgware开始就被删除了\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"15-注册安全的应用程序\"\u003e1.5 注册安全的应用程序\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序希望通过 HTTPS 进行联系，可以在EurekaInstanceConfigBean 中设置两个属性:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eEureka.instance.[nonsecurtenabled]=[false]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eEureka.instance.[securePortEnabled]=[true]\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这样做使Eureka发布的实例信息显示了对安全通信的明确偏好。Spring Cloud \u003ccode\u003eDiscoveryClient\u003c/code\u003e 总是返回一个以 https开头的 URI，用于以这种方式配置的服务。类似地，当以这种方式配置服务时，Eureka (本机)实例信息具有一个安全的健康检查 URL。\u003c/p\u003e\n\u003cp\u003e由于Eureka内部的工作方式，它仍然为状态和主页发布一个不安全的URL，除非你也显式地覆盖这些内容。你可以使用占位符来配置eureka实例 url，如下面的例子所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003estatusPageUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://${eureka.hostname}/info\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthCheckUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://${eureka.hostname}/health\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehomePageUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://${eureka.hostname}/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(注意 \u003ccode\u003e${Eureka.hostname}\u003c/code\u003e是一个本机占位符，只能在 Eureka 的后续版本中使用。对于Spring占位符也可以实现同样的功能ーー例如，使用 \u003ccode\u003e${eureka.instance.hostname}\u003c/code\u003e.)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你的应用程序运行在代理之后，并且SSL终止在代理中(例如，如果你作为服务运行在Cloud Foundry或其他平台上) ，然后，你需要确保“转发”的代理头被应用程序拦截和处理。如果在Spring Boot应用程序中嵌入的Tomcat容器对\u0026rsquo;X-Forwarded-* \u0026lsquo;头有显式配置，这将自动生效。应用程序呈现给自身的链接是错误的(错误的主机、端口或协议)，这是配置错误的标志。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"16-eureka的健康检查\"\u003e1.6 Eureka的健康检查\u003c/h3\u003e\n\u003cp\u003e默认情况下，Eureka使用客户端心跳来确定客户端是否启动。除非另行指定，否则发现客户端不会根据Spring Boot执行器传播应用程序的当前运行状况检查状态。因此，在成功注册后，Eureka总是宣布应用程序处于\u003ccode\u003eUP\u003c/code\u003e状态。可以通过启用Eureka运行状况检查来更改此行为，这将导致将应用程序状态传播到Eureka。因此，每个其他应用程序不会向处于\u003ccode\u003eUP\u003c/code\u003e状态以外的应用程序发送流量。下面的示例显示如何为客户端启用运行状况检查。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehealthcheck\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eenabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eeureka.client.healthcheck.enabled=true\u003c/code\u003e应该只在\u003ccode\u003eapplication.yml\u003c/code\u003e中设置。在\u003ccode\u003ebootstrap.yml\u003c/code\u003e中设置这个值会引起不好的副作用。例如在Eureka以\u003ccode\u003eUNKNOWN\u003c/code\u003e状态注册。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你需要对运行状况检查进行更多的控制，可以考虑实现自己的检查\u003ccode\u003ecom.netflix.appinfo.HealthCheckHandler\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"17-eureka-client和实例的元数据\"\u003e1.7 Eureka client和实例的元数据\u003c/h3\u003e\n\u003cp\u003e花点时间了解Eureka元数据是如何工作的是值得的，这样您就可以在您的平台上以一种有意义的方式使用它。对于主机名、IP地址、端口号、状态页和健康检查等信息，有标准的元数据。这些信息发布在服务注册中心中，客户端使用它们以一种简单的方式联系服务。附加的元数据可以添加到实例注册的\u003ccode\u003eeureka.instance.metadataMap\u003c/code\u003e中，该元数据可以在远程客户机中访问。一般来说，附加的元数据不会改变客户机的行为，除非客户机知道元数据的含义。在一些特殊情况下，Spring Cloud已经为元数据映射赋予了意义，本文稍后将对此进行描述。\u003c/p\u003e\n\u003ch4 id=\"171-在cloud-foundry上使用eureka\"\u003e1.7.1 在Cloud Foundry上使用Eureka\u003c/h4\u003e\n\u003cp\u003eCloud Foundry有一个全局路由器，这样同一个应用的所有实例都有相同的主机名(其他具有类似架构的PaaS解决方案也有相同的安排)。这并不一定是使用Eureka的障碍。但是，如果你使用路由器(建议或强制使用，这取决于平台的设置方式)，则需要显式设置主机名和端口号(安全或不安全)，以便它们使用路由器。你可能还希望使用实例元数据，以便能够区分客户机上的实例(例如，在自定义负载平衡器中)。默认情况下，\u003ccode\u003eeureka.instance.instanceId\u003c/code\u003e是\u003ccode\u003evcap.application.Instance_id\u003c/code\u003e，示例如下:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${vcap.application.uris[0]}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003enonSecurePort\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e80\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据在Cloud Foundry实例中设置安全规则的方式，您能够注册并使用主机VM的IP地址来进行直接的服务到服务调用。这个特性在关键的Web服务(PWS)上还不可用。\u003c/p\u003e\n\u003ch4 id=\"172-在aws上使用eureka\"\u003e1.7.2 在AWS上使用Eureka\u003c/h4\u003e\n\u003cp\u003e如果计划将应用部署到AWS云，则必须将Eureka实例配置为AWS感知。你可以通过如下方式定制\u003ccode\u003eEurekaInstanceConfigBean\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@Profile\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;!default\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eEurekaInstanceConfigBean\u003c/span\u003e \u003cspan class=\"nf\"\u003eeurekaInstanceConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eInetUtils\u003c/span\u003e \u003cspan class=\"n\"\u003einetUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eEurekaInstanceConfigBean\u003c/span\u003e \u003cspan class=\"n\"\u003ebean\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eEurekaInstanceConfigBean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einetUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eAmazonInfo\u003c/span\u003e \u003cspan class=\"n\"\u003einfo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eAmazonInfo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eautoBuild\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;eureka\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebean\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetDataCenterInfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebean\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"173-修改eureka的实例id\"\u003e1.7.3 修改Eureka的实例ID\u003c/h4\u003e\n\u003cp\u003e一个普通的Netflix Eureka实例是用一个与它的主机名相等的ID注册的(也就是说，每个主机只有一个服务)。Spring Cloud Eureka提供了一个合理的默认值，定义如下:\n\u003ccode\u003e${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e一个例子是：\u003ccode\u003emyhost:myappname:8080\u003c/code\u003e。\n通过使用Spring Cloud，您可以通过在\u003ccode\u003eeureka.instance.instanceId\u003c/code\u003e中提供唯一的标识符来覆盖这个值。，如下例所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003einstanceId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用前面示例中显示的元数据和部署在localhost上的多个服务实例，将插入随机值以使实例唯一。在Cloud Foundry中，\u003ccode\u003evcap.application.instance_id\u003c/code\u003e是在Spring Boot应用程序中自动填充的，因此不需要这个随机值。\u003c/p\u003e\n\u003ch3 id=\"18-使用eurekaclient\"\u003e1.8 使用EurekaClient\u003c/h3\u003e\n\u003cp\u003e一旦你拥有了一个作为发现客户端的应用程序，您就可以使用它从\u003ccode\u003eEureka Server\u003c/code\u003e发现服务实例。一种方法是使用本机\u003ccode\u003ecom.netflix.discovery.EurekaClient\u003c/code\u003e(与Spring Cloud DiscoveryClient相反)，如下面的示例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eEurekaClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eInstanceInfo\u003c/span\u003e \u003cspan class=\"n\"\u003einstance\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetNextServerFromEureka\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;STORES\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einstance\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetHomePageUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e不要在\u003ccode\u003e@PostConstruct\u003c/code\u003e方法或\u003ccode\u003e@Scheduled\u003c/code\u003e方法中使用\u003ccode\u003eeurekclient\u003c/code\u003e(或在\u003ccode\u003eApplicationContext\u003c/code\u003e可能还没有启动的任何地方)。它是在\u003ccode\u003eSmartLifecycle\u003c/code\u003e中初始化的(\u003ccode\u003ephase=0\u003c/code\u003e)，所以你最早可以依赖它是在另一个具有更高阶段的\u003ccode\u003eSmartLifecycle\u003c/code\u003e中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"181-eurekacliet没有jersey\"\u003e1.8.1 EurekaCliet没有Jersey\u003c/h4\u003e\n\u003cp\u003e默认情况下，eurekclient使用Spring的\u003ccode\u003eRestTemplate\u003c/code\u003e进行HTTP通信。如果您希望使用Jersey，则需要将Jersey依赖项添加到类路径中。下面的例子显示了你需要添加的包管理文件中:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u0026lt;dependency\u0026gt;\n    \u0026lt;groupId\u0026gt;com.sun.jersey\u0026lt;/groupId\u0026gt;\n    \u0026lt;artifactId\u0026gt;jersey-client\u0026lt;/artifactId\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\u0026lt;dependency\u0026gt;\n    \u0026lt;groupId\u0026gt;com.sun.jersey\u0026lt;/groupId\u0026gt;\n    \u0026lt;artifactId\u0026gt;jersey-core\u0026lt;/artifactId\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\u0026lt;dependency\u0026gt;\n    \u0026lt;groupId\u0026gt;com.sun.jersey.contribs\u0026lt;/groupId\u0026gt;\n    \u0026lt;artifactId\u0026gt;jersey-apache-client4\u0026lt;/artifactId\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"19-替代原生netflix-eurakaclient\"\u003e1.9 替代原生Netflix EurakaClient\u003c/h3\u003e\n\u003cp\u003e你不需要使用原始的\u003ccode\u003eNetflix eurekclient\u003c/code\u003e。在某种封装后面使用它通常更方便。Spring Cloud通过逻辑的Eureka服务标识符(VIPs)而不是物理url支持\u003ccode\u003eFeign\u003c/code\u003e(一个REST客户端构建器)和\u003ccode\u003eSpring RestTemplate\u003c/code\u003e的远程调用。你还可以使用\u003ccode\u003eorg.springframework.cloud.client.discovery.DiscoveryClient\u003c/code\u003e它为发现客户端提供了一个简单的API(不特定于Netflix)，如下面的示例所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eDiscoveryClient\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eServiceInstance\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ediscoveryClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetInstances\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;STORES\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esize\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003egetUri\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"110-为什么注册服务如此缓慢\"\u003e1.10 为什么注册服务如此缓慢\u003c/h3\u003e\n\u003cp\u003e作为一个实例还涉及到到注册中心的周期性心跳(通过客户机的serviceUrl)，默认持续时间为30秒。在实例、服务器和客户端本地缓存中都有相同的元数据之前，客户端无法发现服务(因此可能需要3次心跳)。可以通过设置\u003ccode\u003eeureka.instance.leaseRenewalIntervalInSeconds\u003c/code\u003e来修改周期。将其设置为小于30的值将加快使客户端连接到其他服务的过程。在生产中，使用默认值可能更好，因为服务器中的内部计算会对租期续期做出假设。\u003c/p\u003e\n\u003ch3 id=\"111-zones\"\u003e1.11 Zones\u003c/h3\u003e\n\u003cp\u003e如果您已经将Eureka客户端部署到多个区域，您可能希望这些客户端在尝试其他区域中的服务之前先使用相同区域中的服务。要进行设置，需要正确配置Eureka客户端。\n首先，您需要确保将Eureka服务器部署到每个区域，并且它们彼此是对等的。有关更多信息，请参阅区域和地区一节。\u003c/p\u003e\n\u003cp\u003e接下来，你需要告诉Eureka你的服务在哪个区域。可以通过使用\u003ccode\u003emetadatmap\u003c/code\u003e属性来实现。例如，service 1同时部署在zone 1和zone 2，则需要在service 1中设置如下Eureka属性:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eService 1 in Zone 1\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"l\"\u003eeureka.instance.metadataMap.zone = zone1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"l\"\u003eeureka.client.preferSameZoneEureka = true\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eService 1 in Zone 2\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"l\"\u003eeureka.instance.metadataMap.zone = zone2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"l\"\u003eeureka.client.preferSameZoneEureka = true\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"112-刷新eureka-client\"\u003e1.12 刷新Eureka client\u003c/h3\u003e\n\u003cp\u003e默认情况下，\u003ccode\u003eEurekaClient bean\u003c/code\u003e是可刷新的，这意味着可以更改和刷新Eureka客户机属性。当刷新发生时，客户端将从Eureka服务器注销，并且可能有一段短暂的时间内给定服务的所有实例都不可用。消除这种情况的一种方法是禁用刷新Eureka客户机的功能。设置\u003ccode\u003eeureka.client.refresh.enable=false\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"113-使用springcloud负载均衡的eureka\"\u003e1.13 使用SpringCloud负载均衡的Eureka\u003c/h3\u003e\n\u003cp\u003e我们提供对\u003ccode\u003eSpring CLoud LoadBalancer ZonePreferenceServiceInstanceListSupplier\u003c/code\u003e的支持。Eureka实例元数据(Eureka.instance. metadatmap zone)中的zone值用于设置spring-cloud-loadbalancer-zone属性的值，该属性用于按zone过滤服务实例。\u003c/p\u003e\n\u003cp\u003e如果没有这个属性，并且\u003ccode\u003espring.cloud.loadbalancer.eureka.approximateZoneFromHostname\u003c/code\u003e标志被设置为true，那么它可以使用服务器主机名中的域名作为区域的代理。\u003c/p\u003e\n\u003cp\u003e如果没有其他区域数据来源，则基于客户端配置（而不是实例配置）进行猜测。 我们采取\u003ccode\u003eeureka.client.availabilityZones\u003c/code\u003e，它是从区域名称到区域列表的地图，并释放了实例自己的区域的第一个区域（即\u003ccode\u003eeureka.client.region\u003c/code\u003e，默认为\u003ccode\u003eus-east-1\u003c/code\u003e，用于与本机Netflix的兼容性）。\u003c/p\u003e\n\u003ch2 id=\"2-服务发现eureka-server\"\u003e2. 服务发现：Eureka Server\u003c/h2\u003e\n\u003cp\u003e介绍搭建Eureka服务器的操作步骤。\u003c/p\u003e\n\u003ch3 id=\"21-如何包含eureka-server\"\u003e2.1 如何包含Eureka Server\u003c/h3\u003e\n\u003cp\u003e要将\u003ccode\u003eEureka Server\u003c/code\u003e包含到您的项目中，使用gourp ID为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和 artifact ID为\u003ccode\u003espring-cloud-start-netflix- Eureka-Server\u003c/code\u003e的启动器。有关使用当前\u003ccode\u003eSpring Cloud Release Train\u003c/code\u003e设置构建系统的详细信息，请参阅Spring Cloud Project页面。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果您的项目已经使用\u003ccode\u003eThymeleaf\u003c/code\u003e作为模板引擎，Eureka服务器的\u003ccode\u003eFreemarker\u003c/code\u003e模板可能无法正确加载。在这种情况下，有必要手动配置模板加载器:\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003efreemarker\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003etemplate-loader-path\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eclasspath:/templates/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eprefer-file-system-access\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"22-如何运行eureka-server\"\u003e2.2 如何运行Eureka Server\u003c/h3\u003e\n\u003cp\u003e下面的例子展示了一个最小的Eureka服务器:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableEurekaServer\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpringApplicationBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eweb\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e服务器具有主页，其中包含UI界面和HTTP API端点，作用与/eureka/*。\u003c/p\u003e\n\u003cp\u003e以下链接有一些Eureka背景知识，\u003ca href=\"https://github.com/cfregly/fluxcapacitor/wiki/NetflixOSS-FAQ#eureka-service-discovery-load-balancer\"\u003eflux capacitor\u003c/a\u003e and \u003ca href=\"https://groups.google.com/forum/?fromgroups#!topic/eureka_netflix/g3p2r7gHnN0\"\u003egoogle group discussion\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e由于Gradle的依赖解析规则和缺少父bom特性，依赖\u003ccode\u003espring-cloud-start-netflix-eureka-server\u003c/code\u003e可能会导致应用启动失败。为了解决这个问题，添加\u003ccode\u003eSpring Boot Gradle\u003c/code\u003e插件，并导入Spring云启动器的父bom如下:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ebuild.gradle\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-gradle\" data-lang=\"gradle\"\u003e\u003cspan class=\"n\"\u003ebuildscript\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edependencies\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eclasspath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.boot:spring-boot-gradle-plugin:{spring-boot-docs-version}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eapply\u003c/span\u003e \u003cspan class=\"nl\"\u003eplugin:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;spring-boot\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003edependencyManagement\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eimports\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emavenBom\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;org.springframework.cloud:spring-cloud-dependencies:{spring-cloud-version}\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"23-高可用zones-和-regions\"\u003e2.3 高可用，Zones 和 Regions\u003c/h3\u003e\n\u003cp\u003eEureka服务器没有后端存储，但是注册中心中的服务实例都必须发送心跳以保持其状态的更新(所以这可以在内存中完成)。客户端也有一个Eureka注册的内存缓存(所以他们不必为每个服务请求都去注册中心)。\n默认情况下，每个Eureka服务器也是一个Eureka客户端，并且需要(至少一个)服务URL来定位对等点。如果你不提供它，服务也会运行并工作，但它会用许多关于无法注册进对等注册中心的信息记录填充你的日志。\u003c/p\u003e\n\u003ch3 id=\"24-独立模式\"\u003e2.4 独立模式\u003c/h3\u003e\n\u003cp\u003e两个缓存(客户端和服务器)和心跳的结合使独立的Eureka服务器在故障时相当有弹性，只要有某种监控或弹性运行时(如Cloud Foundry)保持它的活力。在独立模式下，你可能更希望关闭客户端行为，这样它就不会一直尝试访问其他节点而失败。下面的例子展示了如何关闭客户端行为:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml (独立的Eureka服务器)\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eserver\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e8761\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003elocalhost\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eregisterWithEureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003efetchRegistry\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://${eureka.instance.hostname}:${server.port}/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意\u003ccode\u003eserviceUrl\u003c/code\u003e指向与本地实例相同的主机。\u003c/p\u003e\n\u003ch3 id=\"25-对等模式\"\u003e2.5 对等模式\u003c/h3\u003e\n\u003cp\u003e通过运行多个实例并要求它们相互注册，Eureka可以变得更加灵活和可用。事实上，这是默认的行为，所以你只需要向对等体添加一个有效的serviceUrl，如下面的例子所示:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml (两个对等的Eureka服务器)\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://peer2/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://peer1/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在上面的示例中，我们有一个YAML文件，可以通过在不同的Spring文件中配置运行它来在两台主机(peer1和peer2)上运行相同的服务器。通过操作\u003ccode\u003e/etc/hosts\u003c/code\u003e解析主机名，您可以使用此配置在单个主机上测试对等感知(在生产中这样做没有多大价值)。事实上，如果运行在知道自己主机名的机器上(默认情况下，使用\u003ccode\u003ejava.net.InetAddress\u003c/code\u003e查找)，就不需要\u003ccode\u003eeureka.instance.hostname\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你可以在一个系统中添加多个对等体，只要它们彼此至少有一个连接，它们就会同步自己的注册。如果对等点在物理上是分离的(在一个数据中心内或多个数据中心之间)，那么系统原则上可以承受\u003ccode\u003esplit-brain\u003c/code\u003e类型的故障。你可以在一个系统中添加多个对等体，只要它们都是直接连接的，它们就会在自己之间同步注册。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml (三个对等的eureka服务器)\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eserviceUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultZone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://peer1/eureka/,http://peer2/eureka/,http://peer3/eureka/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nn\"\u003e---\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eprofiles\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eeureka\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ehostname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epeer3\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"26-何时选择ip地址\"\u003e2.6 何时选择IP地址\u003c/h3\u003e\n\u003cp\u003e在某些情况下，Eureka最好发布服务的IP地址而不是主机名。设置\u003ccode\u003eeureka.instance.preferipaddress=true\u003c/code\u003e，当应用程序向eureka注册时，它使用它的IP地址而不是它的主机名。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果主机名不能由Java确定，则将IP地址发送给Eureka。设置主机名的唯一方法是设置eureka.instance.hostname属性。你可以在运行时使用环境变量设置主机名—例如：\u003ccode\u003eeureka.instance.hostname=${HOST_NAME}\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"27-保护eureka-server\"\u003e2.7 保护Eureka Server\u003c/h3\u003e\n\u003cp\u003e只需通过\u003ccode\u003eSpring-boot-starter-Security\u003c/code\u003e将\u003ccode\u003eSpring Security\u003c/code\u003e添加到服务器的包管理文件中，就可以保护Eureka服务器。默认情况下，当Spring Security在包管理文件中，它将要求一个有效的CSRF令牌被发送到应用程序。Eureka客户端通常不会拥有一个有效的跨站请求伪造(CSRF)令牌，你需要为\u003ccode\u003e/Eureka/**\u003c/code\u003e端点禁用这个要求。例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@EnableWebSecurity\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eWebSecurityConfig\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eWebSecurityConfigurerAdapter\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpSecurity\u003c/span\u003e \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecsrf\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eignoringAntMatchers\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/eureka/**\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econfigure\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有关CSRF的更多信息，请参阅\u003ca href=\"https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#csrf\"\u003eSpring Security\u003c/a\u003e文档。\n在Spring Cloud Samples \u003ca href=\"https://github.com/spring-cloud-samples/eureka/tree/Eureka-With-Security\"\u003erepo\u003c/a\u003e中可以找到一个演示Eureka Server。\u003c/p\u003e\n\u003ch3 id=\"28-jdk11支持\"\u003e2.8 JDK11支持\u003c/h3\u003e\n\u003cp\u003eJDK 11删除了Eureka服务器所依赖的JAXB模块。如果你想在运行Eureka服务器时使用JDK 11，你必须在你的POM或Gradle文件中包含这些依赖项。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u0026lt;dependency\u0026gt;\n    \u0026lt;groupId\u0026gt;org.glassfish.jaxb\u0026lt;/groupId\u0026gt;\n    \u0026lt;artifactId\u0026gt;jaxb-runtime\u0026lt;/artifactId\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-配置属性\"\u003e3. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有Spring Cloud Netflix相关配置属性的列表，请检查\u003ca href=\"https://docs.spring.io/spring-cloud-netflix/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 8,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-openfeign/",
        title: "Spring Cloud OpenFeign",
        description: "声明式REST客户端。Feign创建了一个用JAX-RS或Spring MVC注释装饰的接口的动态实现。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月24日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-openfeign\"\u003ehttps://github.com/spring-cloud/spring-cloud-openfeign\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e该项目通过自动配置和与Spring环境及其他Spring编程模型习语的绑定，为Spring Boot应用提供OpenFeign集成。\u003c/p\u003e\n\u003ch2 id=\"1--声明式rest客户feign\"\u003e1.  声明式REST客户：Feign\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/OpenFeign/feign\"\u003eFeign\u003c/a\u003e是一个声明式的网络服务客户端。它使编写Web服务客户端更容易。要使用Feign，需要创建一个接口并对其进行注释。它有可插拔的注解支持，包括Feign注解和JAX-RS注解。Feign还支持可插入的编码器和解码器。Spring Cloud增加了对Spring MVC注释的支持，并支持使用Spring Web中默认使用的\u003ccode\u003eHttpMessageConverters\u003c/code\u003e。Spring Cloud集成了Eureka、Spring Cloud CircuitBreaker以及Spring Cloud LoadBalancer，以便在使用Feign时提供一个负载均衡的http客户端。\u003c/p\u003e\n\u003ch3 id=\"11-如何引入-feign\"\u003e1.1. 如何引入 Feign\u003c/h3\u003e\n\u003cp\u003e要在你的项目中包含Feign，请使用group为\u003ccode\u003eorg.springframework.cloud\u003c/code\u003e和artifact id为\u003ccode\u003espring-cloud-starter-openfeign\u003c/code\u003e的\u003ccode\u003estarter\u003c/code\u003e。请参阅\u003ca href=\"https://projects.spring.io/spring-cloud/\"\u003eSpring Cloud项目页面\u003c/a\u003e，了解关于用当前Spring Cloud发布列车设置构建系统的详细信息。\u003c/p\u003e\n\u003cp\u003eExample spring boot app\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpringBootApplication\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableFeignClients\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eStoreClient.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetStores\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ePage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetStores\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePageable\u003c/span\u003e \u003cspan class=\"n\"\u003epageable\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ePOST\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores/{storeId}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econsumes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eStore\u003c/span\u003e \u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@PathVariable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;storeId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eLong\u003c/span\u003e \u003cspan class=\"n\"\u003estoreId\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eStore\u003c/span\u003e \u003cspan class=\"n\"\u003estore\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在\u003ccode\u003e@FeignClient\u003c/code\u003e注解中，字符串值（上面的 \u0026ldquo;stores\u0026rdquo;）是一个任意的客户端名称，它被用来创建一个\u003ca href=\"https://github.com/spring-cloud/spring-cloud-commons/blob/main/spring-cloud-loadbalancer/src/main/java/org/springframework/cloud/loadbalancer/blocking/client/BlockingLoadBalancerClient.java\"\u003eSpring Cloud LoadBalancer客户端\u003c/a\u003e。你也可以使用\u003ccode\u003eurl\u003c/code\u003e属性指定一个URL（绝对值或只是一个主机名）。应用程序上下文中的Bean名称是接口的完全限定名称。要指定你自己的别名值，你可以使用\u003ccode\u003e@FeignClient\u003c/code\u003e注解的\u003ccode\u003equalifiers\u003c/code\u003e值。\u003c/p\u003e\n\u003cp\u003e上面的负载平衡器客户端将想发现 \u0026ldquo;stores \u0026ldquo;服务的物理地址。如果你的应用程序是一个Eureka客户端，那么它将在Eureka服务注册表中解析该服务。如果你不想使用Eureka，你可以使用\u003ca href=\"https://cloud.spring.io/spring-cloud-static/spring-cloud-commons/current/reference/html/#simplediscoveryclient\"\u003e\u003ccode\u003eSimpleDiscoveryClient\u003c/code\u003e\u003c/a\u003e在你的外部配置中配置一个服务器列表。\u003c/p\u003e\n\u003cp\u003eSpring Cloud OpenFeign支持Spring Cloud LoadBalancer的阻塞模式的所有可用功能。你可以在\u003ca href=\"https://docs.spring.io/spring-cloud-commons/docs/current/reference/html/#spring-cloud-loadbalancer\"\u003e项目文档\u003c/a\u003e中阅读更多关于它们的信息。\u003c/p\u003e\n\u003ch3 id=\"12-覆盖feign默认值\"\u003e1.2. 覆盖Feign默认值\u003c/h3\u003e\n\u003cp\u003eSpring Cloud的Feign支持中的一个核心概念是命名的客户端。每个feign客户端都是一个组件集合的一部分，这些组件一起工作，根据需要联系远程服务器，集合有一个名字，你作为应用开发者使用\u003ccode\u003e@FeignClient\u003c/code\u003e注解给它。Spring Cloud使用\u003ccode\u003eFeignClientsConfiguration\u003c/code\u003e为每个命名的客户端按需创建一个新的组合作为\u003ccode\u003eApplicationContext\u003c/code\u003e。这包括（除其他外）一个\u003ccode\u003efeign.Decoder\u003c/code\u003e，一个\u003ccode\u003efeign.Encoder\u003c/code\u003e，和一个\u003ccode\u003efeign.Contract\u003c/code\u003e。通过使用\u003ccode\u003e@FeignClient\u003c/code\u003e注解的\u003ccode\u003econtextId\u003c/code\u003e属性，可以重写该集合的名称。\u003c/p\u003e\n\u003cp\u003eSpring Cloud允许你通过使用\u003ccode\u003e@FeignClient\u003c/code\u003e声明额外的配置（在\u003ccode\u003eFeignClientsConfiguration\u003c/code\u003e之上）来完全控制feign客户端。\u003c/p\u003e\n\u003cp\u003eExample\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFooConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//..\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这种情况下，客户端由 \u003ccode\u003eFeignClientsConfiguration\u003c/code\u003e 中的组件和 \u003ccode\u003eFooConfiguration\u003c/code\u003e中的任何组件组成（后者将覆盖前者）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eFooConfiguration\u003c/code\u003e不需要用\u003ccode\u003e@Configuration\u003c/code\u003e来注释。然而，如果是这样的话，请注意将它从任何\u003ccode\u003e@ComponentScan\u003c/code\u003e中排除，否则将包括这个配置，因为它将成为\u003ccode\u003efeign.Decoder\u003c/code\u003e、\u003ccode\u003efeign.Encoder\u003c/code\u003e、\u003ccode\u003efeign.Contract\u003c/code\u003e等的默认来源。这可以通过把它放在一个单独的、与任何\u003ccode\u003e@ComponentScan\u003c/code\u003e或\u003ccode\u003e@SpringBootApplication\u003c/code\u003e不重叠的包中来避免，或者可以在\u003ccode\u003e@ComponentScan\u003c/code\u003e中明确地排除它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用\u003ccode\u003e@FeignClient\u003c/code\u003e注解的\u003ccode\u003econtextId\u003c/code\u003e属性，除了改变\u003ccode\u003eApplicationContext\u003c/code\u003e集合的名称外，它将覆盖客户端名称的别名，它将作为为该客户端创建的配置Bean名称的一部分。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e以前，使用\u003ccode\u003eurl\u003c/code\u003e属性，不需要\u003ccode\u003ename\u003c/code\u003e属性。现在使用\u003ccode\u003ename\u003c/code\u003e是必须的\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e在\u003ccode\u003ename\u003c/code\u003e和\u003ccode\u003eurl\u003c/code\u003e属性中支持占位符。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;${feign.name}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;${feign.url}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eStoreClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//..\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSpring Cloud OpenFeign默认为feign提供了以下bean（ \u003ccode\u003eBeanType\u003c/code\u003e beanName: \u003ccode\u003eClassName\u003c/code\u003e ）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eDecoder\u003c/code\u003e feignDecoder: \u003ccode\u003eResponseEntityDecoder\u003c/code\u003e (它包装了一个\u003ccode\u003eSpringDecoder\u003c/code\u003e )\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eEncoder\u003c/code\u003e feignEncoder: \u003ccode\u003eSpringEncoder\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eLogger\u003c/code\u003e feignLogger: \u0026ldquo;Slf4jLogger\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMicrometerCapability\u003c/code\u003e micrometerCapability: 如果\u003ccode\u003efeign-micrometer\u003c/code\u003e在classpath上并且\u003ccode\u003eMeterRegistry\u003c/code\u003e是可用的\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eContract\u003c/code\u003e feignContract: \u003ccode\u003eSpringMvcContract\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFeign.Builder\u003c/code\u003e feignBuilder: \u0026ldquo;FeignCircuitBreaker.Builder\u0026rdquo;。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eClient\u003c/code\u003e feignClient: 如果Spring Cloud LoadBalancer在classpath上，就会使用\u003ccode\u003eFeignBlockingLoadBalancerClient\u003c/code\u003e。如果它们都不在classpath上，则使用默认的feign客户端。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003espring-cloud-starter-openfeign\u003c/code\u003e支持\u003ccode\u003espring-cloud-starter-loadbalancer\u003c/code\u003e。然而，由于它是一个可选的依赖关系，如果你想使用它，你需要确保它被添加到你的项目中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eOkHttpClient和ApacheHttpClient以及ApacheHC5 feign客户端可以通过设置\u003ccode\u003efeign.okhttp.enabled\u003c/code\u003e或\u003ccode\u003efeign.httpclient.enabled\u003c/code\u003e或\u003ccode\u003efeign.httpclient.hc5.enabled\u003c/code\u003e分别为\u003ccode\u003etrue\u003c/code\u003e，并将它们放在classpath上。你可以自定义使用的HTTP客户端，当使用Apache时提供\u003ccode\u003eorg.apache.http.impl.client.CloseableHttpClient\u003c/code\u003e，当使用OK HTTP时提供\u003ccode\u003eokhttp3.OkHttpClient\u003c/code\u003e，当使用Apache HC5时提供\u003ccode\u003eorg.apache.hc.client5.http.impl.classic.CloseableHttpClient\u003c/code\u003e的Bean。\u003c/p\u003e\n\u003cp\u003eSpring Cloud OpenFeign \u003cem\u003e不\u003c/em\u003e为feign提供以下Bean，但仍然从应用上下文中查找这些类型的Bean来创建feign客户端。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eLogger.Level\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eRetryer\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eErrorDecoder\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eRequest.Options\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCollection\u0026lt;RequestInterceptor\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eSetterFactory\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eQueryMapEncoder\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCapability\u003c/code\u003e (默认提供\u003ccode\u003eMicrometerCapability\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e默认情况下，创建一个类型为\u003ccode\u003eRetryer.NEVER_RETRY\u003c/code\u003e的bean，它将禁止重试。注意这个重试行为与Feign的默认行为不同，它将自动重试IOExceptions，将其视为瞬时网络相关的异常，以及从ErrorDecoder抛出的任何RetryableException。\u003c/p\u003e\n\u003cp\u003e创建一个这些类型的Bean，并将其放置在\u003ccode\u003e@FeignClient\u003c/code\u003e配置中（如上面的\u003ccode\u003eFooConfiguration\u003c/code\u003e），允许你覆盖所述的每一个Bean。\u003c/p\u003e\n\u003cp\u003eExample\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eContract\u003c/span\u003e \u003cspan class=\"nf\"\u003efeignContract\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eContract\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eDefault\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicAuthRequestInterceptor\u003c/span\u003e \u003cspan class=\"nf\"\u003ebasicAuthRequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicAuthRequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;password\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这就用\u003ccode\u003efeign.Contract.Default\u003c/code\u003e替换了\u003ccode\u003eSpringMvcContract\u003c/code\u003e，并在\u003ccode\u003eRequestInterceptor\u003c/code\u003e的集合中添加了一个\u003ccode\u003eRequestInterceptor\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e@FeignClient\u003c/code\u003e也可以使用配置属性进行配置。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003efeign\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003efeignName\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003econnectTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ereadTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eloggerLevel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003efull\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eerrorDecoder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleErrorDecoder\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eretryer\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleRetryer\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultQueryParameters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"nt\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003equeryValue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultRequestHeaders\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e\u003cspan class=\"nt\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eheaderValue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003erequestInterceptors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e- \u003cspan class=\"l\"\u003ecom.example.FooRequestInterceptor\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e- \u003cspan class=\"l\"\u003ecom.example.BarRequestInterceptor\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003edecode404\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eencoder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleEncoder\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003edecoder\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleDecoder\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003econtract\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecom.example.SimpleContract\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ecapabilities\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e- \u003cspan class=\"l\"\u003ecom.example.FooCapability\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                    \u003c/span\u003e- \u003cspan class=\"l\"\u003ecom.example.BarCapability\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003emetrics.enabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认配置可以在\u003ccode\u003e@EnableFeignClients\u003c/code\u003e属性\u003ccode\u003edefaultConfiguration\u003c/code\u003e中指定，其方式与上述类似。不同的是，这个配置将适用于\u003cem\u003e所有\u003c/em\u003efeign客户。\u003c/p\u003e\n\u003cp\u003e如果你喜欢使用配置属性来配置所有的\u003ccode\u003e@FeignClient\u003c/code\u003e，你可以创建带有\u003ccode\u003edefault\u003c/code\u003efeign名称的配置属性。\u003c/p\u003e\n\u003cp\u003e你可以使用\u003ccode\u003efeign.client.config.feignName.defaultQueryParameters\u003c/code\u003e和\u003ccode\u003efeign.client.config.feignName.defaultRequestHeaders\u003c/code\u003e来指定查询参数和头信息，这些参数将在每个名为\u003ccode\u003efeignName\u003c/code\u003e的客户端的请求中发送。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003efeign\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"nt\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003econnectTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003ereadTimeout\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"nt\"\u003eloggerLevel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebasic\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果我们同时创建了\u003ccode\u003e@Configuration\u003c/code\u003ebean和配置属性，配置属性将获胜。它将覆盖\u003ccode\u003e@Configuration\u003c/code\u003e的值。但如果你想改变优先级为\u003ccode\u003e@Configuration\u003c/code\u003e，你可以把\u003ccode\u003efeign.client.default-to-properties\u003c/code\u003e改为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果我们想创建多个具有相同名称或网址的feign客户端，使它们指向同一个服务器，但每个客户端都有不同的自定义配置，那么我们必须使用\u003ccode\u003e@FeignClient\u003c/code\u003e的\u003ccode\u003econtextId\u003c/code\u003e属性，以避免这些配置Bean的名称冲突。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtextId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fooClient\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFooConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//..\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtextId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;barClient\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBarConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eBarClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//..\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以配置FeignClient不继承父环境的bean。你可以通过重写\u003ccode\u003einheritParentConfiguration()\u003c/code\u003e在\u003ccode\u003eFeignClientConfigurer\u003c/code\u003ebean中返回\u003ccode\u003efalse\u003c/code\u003e来实现。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eFeignClientConfigurer\u003c/span\u003e \u003cspan class=\"nf\"\u003efeignClientConfigurer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eFeignClientConfigurer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n                \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n                \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003einheritParentConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e默认情况下，Feign客户端不对斜线\u003ccode\u003e/\u003c/code\u003e字符进行编码。你可以通过设置\u003ccode\u003efeign.client.decodeSlash\u003c/code\u003e的值为\u003ccode\u003efalse\u003c/code\u003e来改变这一行为。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"121-springencoder-configuration\"\u003e1.2.1. SpringEncoder configuration\u003c/h4\u003e\n\u003cp\u003e在我们提供的 \u003ccode\u003eSpringEncoder\u003c/code\u003e 中，我们为二进制内容类型设置了 \u003ccode\u003enull\u003c/code\u003e 字符集，为所有其他类型设置了 \u003ccode\u003eUTF-8\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你可以通过设置\u003ccode\u003efeign.encoder.charset-from-content-type\u003c/code\u003e的值为\u003ccode\u003etrue\u003c/code\u003e来修改这一行为，从\u003ccode\u003eContent-Type\u003c/code\u003e头的字符集中获得字符集。\u003c/p\u003e\n\u003ch3 id=\"13-超时处理\"\u003e1.3. 超时处理\u003c/h3\u003e\n\u003cp\u003e我们可以在默认客户端和命名客户端上配置超时。OpenFeign使用两个超时参数。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003econnectTimeout\u003c/code\u003e防止因服务器处理时间过长而阻塞调用者。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereadTimeout\u003c/code\u003e从连接建立时开始应用，当返回响应的时间过长时触发。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果服务器没有运行或可用，数据包的结果是\u003cem\u003econnection refused\u003c/em\u003e。通信会以错误信息或回退的方式结束。如果 \u003ccode\u003econnectTimeout\u003c/code\u003e 设置得很低，这可能会在它之前发生。执行查找和接收这种数据包所需的时间导致了这一延迟的重要部分。它可以根据涉及DNS查询的远程主机而改变。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"14-手动创建feign客户端\"\u003e1.4. 手动创建Feign客户端\u003c/h3\u003e\n\u003cp\u003e在某些情况下，可能需要对你的Feign客户进行定制，而使用上述方法是不可能的。在这种情况下，你可以使用\u003ca href=\"https://github.com/OpenFeign/feign/#basics\"\u003eFeign Builder API\u003c/a\u003e创建客户端。下面是一个例子，它创建了两个具有相同接口的Feign客户端，但每个客户端都配置了一个单独的请求拦截器。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Import\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFeignClientsConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooController\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eFooClient\u003c/span\u003e \u003cspan class=\"n\"\u003efooClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eFooClient\u003c/span\u003e \u003cspan class=\"n\"\u003eadminClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eFooController\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eClient\u003c/span\u003e \u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEncoder\u003c/span\u003e \u003cspan class=\"n\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eDecoder\u003c/span\u003e \u003cspan class=\"n\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eContract\u003c/span\u003e \u003cspan class=\"n\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMicrometerCapability\u003c/span\u003e \u003cspan class=\"n\"\u003emicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efooClient\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicAuthRequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;user\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etarget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFooClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://PROD-SVC\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadminClient\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eclient\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencoder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edecoder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtract\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eBasicAuthRequestInterceptor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;admin\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;admin\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etarget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFooClient\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;https://PROD-SVC\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e在上面的例子中，\u003ccode\u003eFeignClientsConfiguration.class\u003c/code\u003e是由Spring Cloud OpenFeign提供的默认配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003ePROD-SVC\u003c/code\u003e是客户将向其发出请求的服务名称。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eFeign \u003ccode\u003eContract\u003c/code\u003e对象定义了哪些注解和值对接口有效。自动连接的\u003ccode\u003eContract\u003c/code\u003ebean提供了对SpringMVC注释的支持，而不是默认的Feign本地注释。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你也可以使用\u003ccode\u003eBuilder\u003c/code\u003e来配置FeignClient不从父级上下文中继承bean。你可以通过覆盖调用\u003ccode\u003eBuilder\u003c/code\u003e上的\u003ccode\u003einheritParentContext(false)\u003c/code\u003e来做到这一点。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"15-feign-spring-cloud-断路器\"\u003e1.5. Feign Spring Cloud 断路器\u003c/h3\u003e\n\u003cp\u003e如果Spring Cloud CircuitBreaker在classpath上，并且\u003ccode\u003efeign.circuitbreaker.enabled=true\u003c/code\u003e，Feign将用断路器来包装所有方法。\u003c/p\u003e\n\u003cp\u003e要在每个客户的基础上禁用Spring Cloud CircuitBreaker的支持，需要创建一个vanilla \u003ccode\u003eFeign.Builder\u003c/code\u003e，其范围为 \u003ccode\u003eprototype\u003c/code\u003e，例如。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Scope\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;prototype\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eFeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e \u003cspan class=\"nf\"\u003efeignBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eFeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e断路器的名称遵循这种模式\u003ccode\u003e\u0026lt;feignClientName\u0026gt;#\u0026lt;calledMethod\u0026gt;\u003c/code\u003e。当调用名称为 \u003ccode\u003efoo\u003c/code\u003e 的\u003ccode\u003e@FeignClient\u003c/code\u003e 时，被调用的接口方法为 \u003ccode\u003ebar\u003c/code\u003e，那么断路器的名称将是 \u003ccode\u003efoo_bar\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要启用Spring Cloud CircuitBreaker组，请设置\u003ccode\u003efeign.circuitbreaker.group.enabled\u003c/code\u003e属性为\u003ccode\u003etrue\u003c/code\u003e（默认为\u003ccode\u003efalse\u003c/code\u003e）。\u003c/p\u003e\n\u003ch3 id=\"16-feign-spring-cloud-断路器熔断\"\u003e1.6. Feign Spring Cloud 断路器熔断\u003c/h3\u003e\n\u003cp\u003eSpring Cloud CircuitBreaker支持\u003ccode\u003efallback\u003c/code\u003e的概念：一个默认的代码路径，在电路打开或出现错误时执行。要为一个给定的\u003ccode\u003e@FeignClient\u003c/code\u003e启用回退，将\u003ccode\u003efallback\u003c/code\u003e属性设置为实现回退的类名。你还需要将你的实现声明为一个Spring Bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http://localhost:${server.port}/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efallback\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFallback\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHello\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/hellonotfound\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFallback\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eTestClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHello\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eNoFallbackAvailableException\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Boom!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRuntimeException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Fixed response\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果需要访问触发\u003ccode\u003efallback\u003c/code\u003e的原因，可以使用\u003ccode\u003e@FeignClient\u003c/code\u003e里面的\u003ccode\u003efallbackFactory\u003c/code\u003e属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;testClientWithFactory\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;http://localhost:${server.port}/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"n\"\u003efallbackFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTestFallbackFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestClientWithFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHello\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/hellonotfound\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestFallbackFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eFallbackFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eFallbackWithFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eFallbackWithFactory\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eThrowable\u003c/span\u003e \u003cspan class=\"n\"\u003ecause\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eFallbackWithFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFallbackWithFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eTestClientWithFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"nf\"\u003egetHello\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eNoFallbackAvailableException\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Boom!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRuntimeException\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003egetException\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Fixed response\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"17-feign-和-primary\"\u003e1.7. Feign 和 @Primary\u003c/h3\u003e\n\u003cp\u003e当使用Feign与Spring Cloud CircuitBreaker回退时，\u003ccode\u003eApplicationContext\u003c/code\u003e中有多个相同类型的bean。这将导致\u003ccode\u003e@Autowired\u003c/code\u003e不工作，因为没有确切的一个bean，或一个被标记为主要的bean。为了解决这个问题，Spring Cloud OpenFeign将所有Feign实例标记为\u003ccode\u003e@Primary\u003c/code\u003e，这样Spring Framework就知道要注入哪个bean。在某些情况下，这可能是不可取的。要关闭这种行为，请将\u003ccode\u003e@FeignClient\u003c/code\u003e的\u003ccode\u003eprimary\u003c/code\u003e属性设置为false。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eprimary\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eHelloClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// methods here\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"18-feign-支持继承\"\u003e1.8. Feign 支持继承\u003c/h3\u003e\n\u003cp\u003eFeign通过单继承接口支持模板式的apis。这允许将常见的操作归入方便的基础接口。\u003c/p\u003e\n\u003cp\u003eUserService.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRequestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eGET\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/users/{id}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eUser\u003c/span\u003e \u003cspan class=\"nf\"\u003egetUser\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@PathVariable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;id\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kt\"\u003elong\u003c/span\u003e \u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUserResource.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserResource\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eUserService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eUserClient.java\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003eproject.user\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;users\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eUserClient\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eUserService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e一般来说，在服务器和客户端之间共享一个接口是不可取的。它引入了紧耦合，而且实际上在目前的形式下也不能与Spring MVC一起工作（方法参数映射不被继承）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"19-feign-请求响应-压缩\"\u003e1.9. Feign 请求/响应 压缩\u003c/h3\u003e\n\u003cp\u003e你可以考虑为你的Feign请求启用请求或响应的GZIP压缩。你可以通过启用其中一个属性来做到这一点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.compression.request.enabled=true\nfeign.compression.response.enabled=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFeign请求压缩给你的设置与你可能为你的网络服务器设置的类似。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.compression.request.enabled=true\nfeign.compression.request.mime-types=text/xml,application/xml,application/json\nfeign.compression.request.min-request-size=2048\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这些属性允许你对压缩的媒体类型和最小请求阈值长度进行选择。\u003c/p\u003e\n\u003cp\u003e对于除OkHttpClient以外的http客户端，可以启用默认的gzip解码器，以UTF-8编码解码gzip响应。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.compression.response.enabled=true\nfeign.compression.response.useGzipDecoder=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"110-feign-日志\"\u003e1.10. Feign 日志\u003c/h3\u003e\n\u003cp\u003e每个创建的Feign客户端都会创建一个记录器。默认情况下，日志记录器的名称是用于创建Feign客户端的接口的全类名称。Feign的日志只对\u003ccode\u003eDEBUG\u003c/code\u003e级别做出响应。\u003c/p\u003e\n\u003cp\u003eapplication.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003elogging.level.project.user.UserClient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eDEBUG\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以为每个客户配置\u003ccode\u003eLogger.Level\u003c/code\u003e对象，告诉Feign要记录多少。选择是。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eNONE\u003c/code\u003e , 不记录(\u003cstrong\u003eDEFAULT\u003c/strong\u003e)。\n\u003ccode\u003eBASIC\u003c/code\u003e , 只记录请求方法和URL以及响应状态代码和执行时间。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eHEADERS\u003c/code\u003e , 记录基本信息以及请求和响应头信息。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eFULL\u003c/code\u003e , 记录请求和响应的头信息、正文和元数据。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e例如，下面将设置\u003ccode\u003eLogger.Level\u003c/code\u003e为\u003ccode\u003eFULL\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eLogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eLevel\u003c/span\u003e \u003cspan class=\"nf\"\u003efeignLoggerLevel\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eLogger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eLevel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eFULL\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"111-feign-capability-支持\"\u003e1.11. Feign Capability 支持\u003c/h3\u003e\n\u003cp\u003eFeign的能力暴露了Feign的核心组件，因此这些组件可以被修改。例如，这些功能可以使用 \u003ccode\u003eClient\u003c/code\u003e，对其进行\u003cem\u003e装饰\u003c/em\u003e，并将装饰后的实例反馈给Feign。对\u003ccode\u003emetrics libraries\u003c/code\u003e的支持就是一个很好的现实例子。参见\u003ca href=\"https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/#feign-metrics\"\u003eFeign metrics\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e创建一个或多个 \u003ccode\u003eCapability\u003c/code\u003e Bean，并把它们放在\u003ccode\u003e@FeignClient\u003c/code\u003e 配置中，可以让你注册它们并修改相关客户端的行为。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eCapability\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"112-feign-metrics\"\u003e1.12. Feign metrics\u003c/h3\u003e\n\u003cp\u003e如果以下条件都是\u003ccode\u003etrue\u003c/code\u003e，一个\u003ccode\u003eMicrometerCapability\u003c/code\u003ebean就会被创建和注册，这样你的Feign客户端就会向\u003ccode\u003eMicrometer\u003c/code\u003e发布\u003ccode\u003emetrics\u003c/code\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efeign-micrometer\u003c/code\u003e在classpath上\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMeterRegistry\u003c/code\u003e bean是可用的\u003c/li\u003e\n\u003cli\u003efeign metrics properties设置为\u003ccode\u003etrue\u003c/code\u003e（默认）\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efeign.metrics.enabled=true\u003c/code\u003e (对于所有客户端)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efeign.client.config.feignName.metrics.enabled=true\u003c/code\u003e (对于单个客户端)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你的应用程序已经使用了Micrometer，启用\u003ccode\u003emetrics\u003c/code\u003e就像把\u003ccode\u003efeign-micrometer\u003c/code\u003e放到classpath上一样简单。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你也可以通过以下方式禁用该功能。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e从你的classpath中排除\u003ccode\u003efeign-micrometer\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e将feign的一个metrics properties设置为 \u0026ldquo;false\u0026rdquo;。\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003efeign.metrics.enabled=false\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003efeign.client.config.feignName.metrics.enabled=false\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003efeign.metrics.enabled=false\u003c/code\u003e 禁用对\u003cstrong\u003e所有\u003c/strong\u003eFeign客户端的\u003ccode\u003emetrics\u003c/code\u003e支持，而不考虑客户端级别的标志值。\u003ccode\u003efeign.client.config.feignName.metrics.enabled\u003c/code\u003e 。如果你想启用或禁用每个客户端的merics，不要设置\u003ccode\u003efeign.metrics.enabled\u003c/code\u003e，使用\u003ccode\u003efeign.client.config.feignName.metrics.enabled\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你也可以通过注册你自己的bean来定制\u003ccode\u003eMicrometerCapability\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFooConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMicrometerCapability\u003c/span\u003e \u003cspan class=\"nf\"\u003emicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMeterRegistry\u003c/span\u003e \u003cspan class=\"n\"\u003emeterRegistry\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eMicrometerCapability\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emeterRegistry\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"113--feign-querymap-support\"\u003e1.13.  Feign @QueryMap support\u003c/h3\u003e\n\u003cp\u003eOpenFeign \u003ccode\u003e@QueryMap\u003c/code\u003e注解提供了对POJO的支持，可用作GET参数映射。不幸的是，默认的OpenFeign QueryMap注解与Spring不兼容，因为它缺少一个\u003ccode\u003evalue\u003c/code\u003e属性。\u003c/p\u003e\n\u003cp\u003eSpring Cloud OpenFeign提供了一个等价的\u003ccode\u003e@SpringQueryMap\u003c/code\u003e注解，用于注解一个POJO或Map参数作为查询参数地图。\u003c/p\u003e\n\u003cp\u003e例如，\u003ccode\u003eParams\u003c/code\u003e类定义了参数\u003ccode\u003eparam1\u003c/code\u003e和\u003ccode\u003eparam2\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// Params.java\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eParams\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eparam1\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eparam2\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// [Getters and setters omitted for brevity]\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的feign客户端通过使用\u003ccode\u003e@SpringQueryMap\u003c/code\u003e注解来使用\u003ccode\u003eParams\u003c/code\u003e类。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eDemoTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003edemoEndpoint\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@SpringQueryMap\u003c/span\u003e \u003cspan class=\"n\"\u003eParams\u003c/span\u003e \u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你需要对生成的查询参数图有更多的控制，你可以实现一个自定义的\u003ccode\u003eQueryMapEncoder\u003c/code\u003ebean。\u003c/p\u003e\n\u003ch3 id=\"114-hateoas-support\"\u003e1.14. HATEOAS support\u003c/h3\u003e\n\u003cp\u003eSpring提供了一些API来创建遵循\u003ca href=\"https://en.wikipedia.org/wiki/HATEOAS\"\u003eHATEOAS\u003c/a\u003e原则的REST表示，\u003ca href=\"https://spring.io/projects/spring-hateoas\"\u003eSpring Hateoas\u003c/a\u003e和\u003ca href=\"https://spring.io/projects/spring-data-rest\"\u003eSpring Data REST\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e如果你的项目使用\u003ccode\u003eorg.springframework.boot:spring-boot-starter-hateoas\u003c/code\u003e启动器或\u003ccode\u003eorg.springframework.boot:spring-boot-starter-data-rest\u003c/code\u003e启动器，Feign HATEOAS支持默认为启用。\u003c/p\u003e\n\u003cp\u003e当HATEOAS支持被启用时，Feign客户端被允许序列化和反序列化HATEOAS表示模型。\u003ca href=\"https://docs.spring.io/spring-hateoas/docs/1.0.0.M1/apidocs/org/springframework/hateoas/EntityModel.html\"\u003eEntityModel\u003c/a\u003e, \u003ca href=\"https://docs.spring.io/spring-hateoas/docs/1.0.0.M1/apidocs/org/springframework/hateoas/CollectionModel.html\"\u003eCollectionModel\u003c/a\u003e 和 \u003ca href=\"https://docs.spring.io/spring-hateoas/docs/1.0.0.M1/apidocs/org/springframework/hateoas/PagedModel.html\"\u003ePagedModel\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eDemoTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eCollectionModel\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetStores\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"115-spring-matrixvariable-support\"\u003e1.15. Spring @MatrixVariable Support\u003c/h3\u003e\n\u003cp\u003eSpring Cloud OpenFeign提供对Spring \u003ccode\u003e@MatrixVariable\u003c/code\u003e注解的支持。\u003c/p\u003e\n\u003cp\u003e如果一个Map被作为方法参数传递，\u003ccode\u003e@MatrixVariable\u003c/code\u003e路径段是通过用\u003ccode\u003e=\u003c/code\u003e连接地图中的键值对而创建的。\u003c/p\u003e\n\u003cp\u003e如果传递的是不同的对象，那么\u003ccode\u003e@MatrixVariable\u003c/code\u003e注解中提供的\u003ccode\u003ename\u003c/code\u003e（如果定义了的话）或者注解的变量名将用`=·与提供的方法参数连接。\u003c/p\u003e\n\u003cp\u003e重要提示\u003c/p\u003e\n\u003cp\u003e即使在服务器端，Spring并不要求用户将路径段占位符的名称与矩阵变量的名称相同，因为这在客户端太模糊了，Spring Cloud OpenFeign要求你添加一个路径段占位符，其名称与\u003ccode\u003e@MatrixVariable\u003c/code\u003e注解（如果定义了）中提供的\u003ccode\u003ename\u003c/code\u003e或注释变量的名称一致。\u003c/p\u003e\n\u003cp\u003eFor example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/objects/links/{matrixVars}\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetObjects\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@MatrixVariable\u003c/span\u003e \u003cspan class=\"n\"\u003eMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ematrixVars\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意，变量名和路径段占位符都被称为\u003ccode\u003ematrixVars\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003eDemoTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/stores\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eCollectionModel\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eStore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003egetStores\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"116-feign-collectionformat-support\"\u003e1.16. Feign CollectionFormat support\u003c/h3\u003e\n\u003cp\u003e我们通过提供\u003ccode\u003e@CollectionFormat\u003c/code\u003e注解来支持\u003ccode\u003efeign.CollectionFormat\u003c/code\u003e。你可以通过传递所需的\u003ccode\u003efeign.CollectionFormat\u003c/code\u003e作为注解值，用它来注解一个Feign客户端方法。\u003c/p\u003e\n\u003cp\u003e在下面的例子中，使用\u003ccode\u003eCSV\u003c/code\u003e格式而不是默认的\u003ccode\u003eEXPLODED\u003c/code\u003e来处理该方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@FeignClient\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;demo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kd\"\u003einterface\u003c/span\u003e \u003cspan class=\"nc\"\u003ePageableFeignClient\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@CollectionFormat\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eCollectionFormat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eCSV\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;/page\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e \u003cspan class=\"nf\"\u003eperformRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePageable\u003c/span\u003e \u003cspan class=\"n\"\u003epage\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e在发送\u003ccode\u003ePageable\u003c/code\u003e作为查询参数时设置\u003ccode\u003eCSV\u003c/code\u003e格式，以便正确编码。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"117-reactive-support\"\u003e1.17. Reactive Support\u003c/h3\u003e\n\u003cp\u003e由于\u003ca href=\"https://github.com/OpenFeign/feign\"\u003eOpenFeign项目\u003c/a\u003e目前不支持Reactive客户端，如\u003ca href=\"https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/reactive/function/client/WebClient.html\"\u003eSpring WebClient\u003c/a\u003e，Spring Cloud OpenFeign也不支持。一旦核心项目中出现，我们将在此添加对它的支持。\u003c/p\u003e\n\u003cp\u003e在这之前，我们建议使用\u003ca href=\"https://github.com/Playtika/feign-reactive\"\u003efeign-reactive\u003c/a\u003e来支持Spring WebClient。\u003c/p\u003e\n\u003ch4 id=\"1171-早期初始化错误\"\u003e1.17.1. 早期初始化错误\u003c/h4\u003e\n\u003cp\u003e根据你使用Feign客户端的方式，你可能在启动应用程序时看到初始化错误。为了解决这个问题，你可以在自动连接你的客户端时使用\u003ccode\u003eObjectProvider\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"n\"\u003eObjectProvider\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eTestFeginClient\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etestFeginClient\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"118-spring-data-support\"\u003e1.18. Spring Data Support\u003c/h3\u003e\n\u003cp\u003e你可以考虑为支持\u003ccode\u003eorg.springframework.data.domain.Page\u003c/code\u003e和\u003ccode\u003eorg.springframework.data.domain.Sort\u003c/code\u003e解码而启用\u003ccode\u003eJackson\u003c/code\u003e模块。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.autoconfiguration.jackson.enabled=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"119-spring-refreshscope-support\"\u003e1.19. Spring @RefreshScope Support\u003c/h3\u003e\n\u003cp\u003e如果启用了Feign client refresh，每个feign客户端都是以\u003ccode\u003efeign.Request.Options\u003c/code\u003e作为刷新范围的bean来创建的。这意味着诸如\u003ccode\u003econnectTimeout\u003c/code\u003e和\u003ccode\u003ereadTimeout\u003c/code\u003e等属性可以通过\u003ccode\u003ePOST /actuator/refresh\u003c/code\u003e对任何Feign客户端实例进行刷新。\u003c/p\u003e\n\u003cp\u003e默认情况下，Feign客户端的刷新行为是禁用的。使用以下属性来启用刷新行为。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003efeign.client.refresh-enabled=true\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e不要用\u003c/strong\u003e \u003ccode\u003e@RefreshScope\u003c/code\u003e 注解来注释\u003ccode\u003e@FeignClient\u003c/code\u003e接口。不要给\u003ccode\u003e@FeignClient\u003c/code\u003e接口加上\u003ccode\u003e@RefreshScope\u003c/code\u003e注解。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"2-配置属性\"\u003e2. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有Spring Cloud OpenFeign相关的配置属性列表，请查看\u003ca href=\"https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/appendix.html\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 9,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-security-/",
        title: "Spring Cloud Security",
        description: "Spring Cloud Security提供了一组原语来构建安全的应用程序和服务。一个可以在外部（或中央）进行大量配置的声明性模型，适合于实现由合作的远程组件组成的大型系统，通常有一个中央身份管理服务。它在Cloud Foundry这样的服务平台上也非常容易使用。在Spring Boot和Spring Security OAuth2的基础上，我们可以快速创建系统，实现单点登录、令牌中继和令牌交换等常见模式。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：2.2.5\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月25日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-security/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-security/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-security\"\u003ehttps://github.com/spring-cloud/spring-cloud-security\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSpring Cloud Security提供了一组原语来构建安全的应用程序和服务。一个可以在外部（或中央）进行大量配置的声明性模型，适合于实现由合作的远程组件组成的大型系统，通常有一个中央身份管理服务。它在Cloud Foundry这样的服务平台上也非常容易使用。在Spring Boot和Spring Security OAuth2的基础上，我们可以快速创建系统，实现单点登录、令牌中继和令牌交换等常见模式。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在未来的主要版本中，这个项目所包含的功能将转移到各自的项目中。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud是在非限制性的Apache 2.0许可下发布的。如果你想为这部分文档做出贡献，或者发现错误，请在\u003ca href=\"https://github.com/spring-cloud/spring-cloud-security\"\u003egithub\u003c/a\u003e的项目中找到源代码和问题跟踪器。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"快速开始\"\u003e快速开始\u003c/h2\u003e\n\u003cp\u003e这里有一个Spring Cloud的 \u0026ldquo;Hello World \u0026ldquo;应用，采用HTTP Basic认证和单点用户账户。\u003c/p\u003e\n\u003ch3 id=\"oauth2-单点登陆\"\u003eOAuth2 单点登陆\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eapp.groovy\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Grab\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eboot\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003estarter\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003esecurity\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@Controller\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"n\"\u003eWorld\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以用\u003ccode\u003espring run app.groovy\u003c/code\u003e运行它，观察日志中的密码（用户名是 \u0026ldquo;user\u0026rdquo;）。到目前为止，这只是Spring Boot应用的默认情况。\u003c/p\u003e\n\u003cp\u003e这是一个带有Oauth2 sso的Spring Cloud 应用程序：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapp.groovy\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Controller\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableOAuth2Sso\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"n\"\u003eWorld\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e发现区别了吗？这个应用的行为实际上与之前的应用完全一样，因为它还不知道自己的OAuth2凭证。\u003c/p\u003e\n\u003cp\u003e你可以很容易用github账号注册一个应用程序，所以如果你想在你自己的域名上生产一个应用程序，可以试试。如果你愿意在\u003ccode\u003elocalhost:8080\u003c/code\u003e上测试，那么在你的应用程序配置中设置这些属性。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003esecurity\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eclient\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eclientId\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebd1c0a783ccdd1c9b9e4\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eclientSecret\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e1a9030fbca47a5b2c28e92f19050bb77824b5ad1\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eaccessTokenUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/login/oauth/access_token\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euserAuthorizationUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://github.com/login/oauth/authorize\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eclientAuthenticationScheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eform\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eresource\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euserInfoUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://api.github.com/user\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003epreferTokenInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行上面的应用程序，它将重定向到github进行授权。如果你已经登录了github，你甚至不会注意到它已经认证了。这些凭证只有在你的应用程序运行在8080端口时才会起作用。\u003c/p\u003e\n\u003cp\u003e为了限制客户端在获得访问令牌时要求的范围，你可以设置\u003ccode\u003esecurity.oauth2.client.scope\u003c/code\u003e（在YAML中逗号分隔或一个数组）。默认情况下，范围是空的，由授权服务器决定默认值，通常根据客户端注册中的设置。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e上面的例子都是Groovy脚本。如果你想用Java（或Groovy）写同样的代码，你需要在classpath中添加Spring Security OAuth2（例如，见这里的示例）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"oauth2-受保护的资源\"\u003eOAuth2 受保护的资源\u003c/h3\u003e\n\u003cp\u003e你想用OAuth2令牌来保护一个API资源？这里有一个简单的例子（与上面的客户端相配）。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapp.groovy\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Grab\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003espring\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ecloud\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003estarter\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003esecurity\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableResourceServer\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n  \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"sc\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003eHello\u003c/span\u003e \u003cspan class=\"n\"\u003eWorld\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e和\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003esecurity\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eresource\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003euserInfoUri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://api.github.com/user\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003epreferTokenInfo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"更多详情\"\u003e更多详情\u003c/h2\u003e\n\u003ch3 id=\"单点登陆\"\u003e单点登陆\u003c/h3\u003e\n\u003cp\u003e所有的OAuth2 SSO和资源服务器功能都在1.3版本中转移到Spring Boot。你可以在Spring Boot\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/\"\u003e用户指南\u003c/a\u003e中找到文档。\u003c/p\u003e\n\u003ch3 id=\"token-relay\"\u003eToken Relay\u003c/h3\u003e\n\u003cp\u003eToken Relay是指OAuth2消费者作为客户端，将传入的令牌转发给传出的资源请求。消费者可以是一个纯粹的客户端（如SSO应用程序）或一个资源服务器。\u003c/p\u003e\n\u003ch4 id=\"在spring-cloud-gateway客户端中使用token-relay\"\u003e在Spring Cloud Gateway客户端中使用Token Relay\u003c/h4\u003e\n\u003cp\u003e如果你的应用程序也有一个Spring Cloud Gateway反向代理应用程序，那么你可以要求它将OAuth2访问令牌转发到它所代理的服务下游。因此，上面的SSO应用可以像这样简单地增强。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eApp.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eTokenRelayGatewayFilterFactory\u003c/span\u003e \u003cspan class=\"n\"\u003efilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eRouteLocator\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomRouteLocator\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRouteLocatorBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eroute\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;resource\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/resource\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilters\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003efilter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efilterFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003euri\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://localhost:9000\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者这样\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yaml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecloud\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003egateway\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eresource\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003euri\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttp://localhost:9000\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003epredicates\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ePath=/resource\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"nt\"\u003efilters\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003eTokenRelay=\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它将（除了登录用户和抓取令牌外）把认证令牌传递给下游的服务（在这里是\u003ccode\u003e/resource\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e要为Spring Cloud Gateway启用这个功能，需要添加以下依赖项\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.boot:spring-boot-starter-oauth2-client\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud:spring-cloud-starter-security\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e它是如何工作的？该过滤器从当前认证的用户中提取访问令牌，并将其放在下游请求的请求头中。\u003c/p\u003e\n\u003cp\u003e完整的工作样本见\u003ca href=\"https://github.com/spring-cloud-samples/sample-gateway-oauth2login\"\u003e该项目\u003c/a\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003eTokenRelayGatewayFilterFactory\u003c/code\u003e使用的\u003ccode\u003eReactiveOAuth2AuthorizedClientService\u003c/code\u003e的默认实现使用了一个内存数据存储。如果你需要一个更强大的解决方案，你将需要提供你自己的实现\u003ccode\u003eReactiveOAuth2AuthorizedClientService\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"客户端-token-relay\"\u003e客户端 Token Relay\u003c/h4\u003e\n\u003cp\u003e如果你的应用程序是一个面向用户的OAuth2客户端（即已声明\u003ccode\u003e@EnableOAuth2Sso\u003c/code\u003e或\u003ccode\u003e@EnableOAuth2Client\u003c/code\u003e），那么它在Spring Boot的请求范围内有一个\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e。你可以从这个上下文和一个自动连接的\u003ccode\u003eOAuth2ProtectedResourceDetails\u003c/code\u003e中创建你自己的\u003ccode\u003eOAuth2RestTemplate\u003c/code\u003e，然后该上下文将一直向下游转发访问令牌，如果访问令牌过期，也会自动刷新。(这些都是Spring Security和Spring Boot的特性）。)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用\u003ccode\u003eclient_credentials\u003c/code\u003e令牌，Spring Boot（1.4.1）不会自动创建一个\u003ccode\u003eOAuth2ProtectedResourceDetails\u003c/code\u003e。在这种情况下，你需要创建自己的\u003ccode\u003eClientCredentialsResourceDetails\u003c/code\u003e，并用\u003ccode\u003e@ConfigurationProperties(\u0026quot;security.oauth2.client\u0026quot;)\u003c/code\u003e来配置它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"在zuul代理客户端中使用token-relay\"\u003e在zuul代理客户端中使用Token Relay\u003c/h4\u003e\n\u003cp\u003e如果你的应用程序也有一个\u003ccode\u003eSpring Cloud Zuul\u003c/code\u003e嵌入式反向代理（使用\u003ccode\u003e@EnableZuulProxy\u003c/code\u003e），那么你可以要求它将OAuth2访问令牌转发给它所代理的服务。因此，上面的SSO应用可以像这样简单地增强。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapp.groovy\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Controller\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableOAuth2Sso\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableZuulProxy\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eApplication\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它将（除了登录用户和获取令牌外）把认证令牌传递给下游的\u003ccode\u003e/proxy/*\u003c/code\u003e服务。如果这些服务是用\u003ccode\u003e@EnableResourceServer\u003c/code\u003e实现的，那么它们将在正确的头中得到一个有效的令牌。\u003c/p\u003e\n\u003cp\u003e它是如何工作的？\u003ccode\u003e@EnableOAuth2Sso\u003c/code\u003e注解拉入了\u003ccode\u003espring-cloud-starter-security\u003c/code\u003e（你可以在传统应用中手动完成），这反过来又触发了\u003ccode\u003eZuulFilter\u003c/code\u003e的一些自动配置，它本身被激活了，因为Zuul在classpath中（通过\u003ccode\u003e@EnableZuulProxy\u003c/code\u003e）。该过滤器只是从当前认证的用户中提取一个访问令牌，并将其放在下游请求的请求头中。\u003c/p\u003e\n\u003cp\u003eSpring Boot不会自动创建刷新令牌所需的\u003ccode\u003eOAuth2RestOperations\u003c/code\u003e。在这种情况下，你需要创建你自己的\u003ccode\u003eOAuth2RestOperations\u003c/code\u003e，以便\u003ccode\u003eOAuth2TokenRelayFilter\u003c/code\u003e在需要时可以刷新令牌。\u003c/p\u003e\n\u003ch4 id=\"资源服务器中的token-relay\"\u003e资源服务器中的Token Relay\u003c/h4\u003e\n\u003cp\u003e如果你的应用程序有\u003ccode\u003e@EnableResourceServer\u003c/code\u003e，你可能想把传入的令牌转发到下游的其他服务。如果你使用\u003ccode\u003eRestTemplate\u003c/code\u003e来联系下游服务，那么这只是一个如何用正确的上下文创建模板的问题。\u003c/p\u003e\n\u003cp\u003e如果你的服务使用\u003ccode\u003eUserInfoTokenServices\u003c/code\u003e来验证传入的令牌（即使用\u003ccode\u003esecurity.oauth2.user-info-uri\u003c/code\u003e配置），那么你可以简单地使用自动连接的\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e创建一个\u003ccode\u003eOAuth2RestTemplate\u003c/code\u003e（它将在进入后端代码之前由认证过程填充）。同样地（使用Spring Boot 1.4），你可以注入一个\u003ccode\u003eUserInfoRestTemplateFactory\u003c/code\u003e，并在配置中抓取其\u003ccode\u003eOAuth2RestTemplate\u003c/code\u003e。比如说。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMyConfiguration.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eOAuth2RestTemplate\u003c/span\u003e \u003cspan class=\"nf\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUserInfoRestTemplateFactory\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetUserInfoRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然后，此REST模板将具有身份验证过滤器使用的相同的\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e（请求范围），因此你可以使用它来发送具有相同访问令牌的请求。\u003c/p\u003e\n\u003cp\u003e如果你的应用程序没有使用\u003ccode\u003eUserInfoTokenServices\u003c/code\u003e，但仍然是一个客户端（即它声明了\u003ccode\u003e@EnableOAuth2Client\u003c/code\u003e或@\u003ccode\u003eEnableOAuth2Sso\u003c/code\u003e），那么通过Spring Security Cloud，用户从\u003ccode\u003e@Autowired OAuth2Context\u003c/code\u003e创建的任何\u003ccode\u003eOAuth2RestOperations\u003c/code\u003e也将转发令牌。这个功能默认是作为MVC处理程序拦截器实现的，所以它只在Spring MVC中工作。如果你不使用MVC，你可以使用自定义过滤器或AOP拦截器包装\u003ccode\u003eAccessTokenContextRelay\u003c/code\u003e来提供同样的功能。\u003c/p\u003e\n\u003cp\u003e这里有一个基本的例子，显示了在其他地方创建的自动连接REST模板的使用（\u0026ldquo;foo.com \u0026ldquo;是一个资源服务器，接受与周围应用程序相同的令牌）：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMyController.java\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eOAuth2RestOperations\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/relay\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003erelay\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eResponseEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetForEntity\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://foo.com/bar\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Success! (\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetBody\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;)\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不想转发令牌（这是一个有效的选择，因为你可能想作为你自己，而不是向你发送令牌的客户端），那么你只需要创建自己的\u003ccode\u003eOAuth2Context\u003c/code\u003e，而不是自动连接默认的。\u003c/p\u003e\n\u003cp\u003e如果\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e可用的话，Feign客户端也会拾取一个使用\u003ccode\u003eOAuth2ClientContext\u003c/code\u003e的拦截器，所以他们也应该在\u003ccode\u003eRestTemplate\u003c/code\u003e的任何地方做一个令牌中继。\u003c/p\u003e\n\u003ch2 id=\"配置zuul-proxy下游的身份验证\"\u003e配置Zuul Proxy下游的身份验证\u003c/h2\u003e\n\u003cp\u003e你可以通过\u003ccode\u003eproxy.auth.*\u003c/code\u003e设置来控制\u003ccode\u003e@EnableZuulProxy\u003c/code\u003e下游的授权行为。例子：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eapplication.yml\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"nt\"\u003eproxy\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eauth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ecustomers\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eoauth2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003estores\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003epassthru\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003erecommendations\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enone\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个例子中，\u0026ldquo;customers\u0026quot;服务得到一个OAuth2令牌中继，\u0026ldquo;stores\u0026quot;服务得到一个passthrough（授权头只是在下游传递），而 \u0026ldquo;recommendations\u0026quot;服务的授权头被删除。默认行为是，如果有可用的令牌，就进行令牌中继，否则就进行穿透。\u003c/p\u003e\n\u003cp\u003e详细情况见\u003ca href=\"https://github.com/spring-cloud/spring-cloud-security/tree/master/src/main/java/org/springframework/cloud/security/oauth2/proxy/ProxyAuthenticationProperties\"\u003eProxyAuthenticationProperties\u003c/a\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 10,
        href: "https://www.springcloud.io/docs/springcloud/spring-cloud-sleuth/",
        title: "Spring Cloud Sleuth",
        description: "Spring Cloud Sleuth为分布式追踪提供了Spring Boot的自动配置。",
        content: "\u003cul\u003e\n\u003cli\u003e当前版本：3.0.3\u003c/li\u003e\n\u003cli\u003e修改时间：2021年7月23日\u003c/li\u003e\n\u003cli\u003e官方文档：\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/current/reference/html/\"\u003ehttps://docs.spring.io/spring-cloud-sleuth/docs/current/reference/html/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e源码仓库：\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth\"\u003ehttps://github.com/spring-cloud/spring-cloud-sleuth\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"1-法律条款\"\u003e1. 法律条款\u003c/h2\u003e\n\u003cp\u003e本文件的副本可供你自己使用和分发给其他人，但你不得对这些副本收取任何费用，而且每份副本都要包含本版权声明，无论是以印刷品还是电子方式分发。\u003c/p\u003e\n\u003ch2 id=\"2-开始使用\"\u003e2. 开始使用\u003c/h2\u003e\n\u003cp\u003e如果你刚开始使用Spring Cloud Sleuth或Spring，请先阅读本节。它回答了 \u0026ldquo;什么？\u0026quot;、\u0026ldquo;如何？\u0026ldquo;和 \u0026ldquo;为什么？\u0026ldquo;等基本问题。它包括对Spring Cloud Sleuth的介绍，以及安装说明。然后，我们将引导你构建你的第一个Spring Cloud Sleuth应用程序，在此过程中讨论一些核心原则。\u003c/p\u003e\n\u003ch3 id=\"21-spring-cloud-sleuth-介绍\"\u003e2.1. Spring Cloud Sleuth 介绍\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth为\u003ca href=\"https://cloud.spring.io/\"\u003eSpring Cloud\u003c/a\u003e提供分布式追踪解决方案的API。它与\u003ca href=\"https://github.com/openzipkin/brave\"\u003eOpenZipkin Brave\u003c/a\u003e 集成\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth能够追踪你的请求和消息，这样你就可以将该通信与相应的日志条目联系起来。你还可以将追踪信息导出到外部系统，以可视化延迟。Spring Cloud Sleuth直接支持\u003ca href=\"https://zipkin.io/\"\u003eOpenZipkin\u003c/a\u003e兼容系统。\u003c/p\u003e\n\u003ch4 id=\"211-术语介绍\"\u003e2.1.1. 术语介绍\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Sleuth 借鉴了 \u003ca href=\"https://research.google.com/pubs/pub36356.html\"\u003eDapper’s\u003c/a\u003e 术语表.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSpan\u003c/strong\u003e: 工作的基本单位。例如，发送一个RPC是一个新的跨度，正如发送对RPC的响应一样。span也有其他数据，如描述、有时间戳的事件、键值注释（标签）、引起它们的span的ID和进程ID（通常是IP地址）。\u003c/p\u003e\n\u003cp\u003e跨度可以被启动和停止，并保持跟踪其时间信息。一旦你创建了一个跨度，你必须在未来的某个时间点停止它。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTree\u003c/strong\u003e：一组跨度形成一个树状结构。例如，如果你运行一个分布式大数据存储，一个跟踪可能由一个PUT请求形成。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAnnotation/Event\u003c/strong\u003e：用来记录一个事件在时间上的存在。\u003c/p\u003e\n\u003cp\u003e从概念上讲，在一个典型的RPC场景中，我们标记这些事件是为了强调发生了什么样的动作（这并不意味着在物理上这样的事件会被设置在一个跨度上）。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ecs\u003c/strong\u003e：客户端发送。客户端已经发出了请求。这个注解表示跨度的开始。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003esr\u003c/strong\u003e：服务器收到了。服务器端得到了请求并开始处理它。从这个时间戳中减去\u003ccode\u003ecs\u003c/code\u003e时间戳可以看出网络延迟。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ess\u003c/strong\u003e：服务器发送。在请求处理完成后的注释（当响应被发回给客户端）。从这个时间戳中减去\u003ccode\u003esr\u003c/code\u003e时间戳，可以看出服务器端处理该请求所需的时间。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ecr\u003c/strong\u003e：客户端收到了。标志着跨度的结束。客户端已成功收到服务器端的响应。从这个时间戳中减去\u003ccode\u003ecs\u003c/code\u003e时间戳，显示出客户端从服务器端接收响应所需的全部时间。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e下图显示了\u003cstrong\u003eSpan\u003c/strong\u003e和\u003cstrong\u003eTrace\u003c/strong\u003e在一个系统中的样子。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/KevinBlandy/springcloud-images/2021/07/24/b4a2078f5e0c4b7aa82691e6a4cf33f3.png\" alt=\" \"\u003e\u003c/p\u003e\n\u003cp\u003e一个\u003ccode\u003enote\u003c/code\u003e的每种颜色代表一个跨度（有七个跨度\u0026ndash;从\u003cstrong\u003eA\u003c/strong\u003e到\u003cstrong\u003eG\u003c/strong\u003e）。请看下面这个\u003ccode\u003enote\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eTrace Id = X\nSpan Id = D\nClient Sent\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个说明表明，当前跨度的\u003cstrong\u003eTrace Id\u003c/strong\u003e设置为\u003cstrong\u003eX\u003c/strong\u003e，\u003cstrong\u003eSpan Id\u003c/strong\u003e设置为\u003cstrong\u003eD\u003c/strong\u003e。另外，从RPC的角度来看，发生了 \u003ccode\u003eClient Sen\u003c/code\u003e事件。\u003c/p\u003e\n\u003cp\u003e让我们考虑更多的note。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eTrace Id = X\nSpan Id = A\n(no custom span)\n\nTrace Id = X\nSpan Id = C\n(custom span)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以继续使用已创建的跨度（\u003ccode\u003eno custom span\u003c/code\u003e的例子），或者你可以手动创建子跨度（有\u003ccode\u003ecustom span\u003c/code\u003e指示的例子）。\u003c/p\u003e\n\u003cp\u003e下面的图片显示了跨度的父子关系的样子。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/KevinBlandy/springcloud-images/2021/07/24/a4c26b86588447759c6f6baa744b256b.png\" alt=\" \"\u003e\u003c/p\u003e\n\u003ch3 id=\"22-发你的第一个基于spring-cloud-sleuth的应用程序\"\u003e2.2. 发你的第一个基于Spring Cloud sleuth的应用程序\u003c/h3\u003e\n\u003cp\u003e本节介绍了如何开发一个小型的 \u0026ldquo;Hello World!\u0026ldquo;网络应用，其中突出了Spring Cloud Sleuth的一些关键功能。我们使用Maven来构建这个项目，因为大多数IDE都支持它。作为追踪器的实现，我们将使用\u003ca href=\"https://github.com/openzipkin/brave\"\u003eOpenZipkin Brave\u003c/a\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你可以通过进入\u003ca href=\"https://start.spring.io/\"\u003estart.spring.io\u003c/a\u003e并从依赖项搜索器中选择 \u003ccode\u003eWeb\u003c/code\u003e和 \u003ccode\u003eSpring Cloud Sleuth\u003c/code\u003e 启动器来缩短下面的步骤。这样做会生成一个新的项目结构，这样你就可以\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#getting-started-first-application-code\"\u003e立即开始编码\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"221-创建-pom\"\u003e2.2.1. 创建 POM\u003c/h4\u003e\n\u003cp\u003e我们需要先创建一个Maven pom.xml文件。pom.xml是用于构建项目的配置。打开你喜欢的文本编辑器，添加以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;project\u003c/span\u003e \u003cspan class=\"na\"\u003exmlns=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003exmlns:xsi=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"na\"\u003exsi:schemaLocation=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;modelVersion\u0026gt;\u003c/span\u003e4.0.0\u003cspan class=\"nt\"\u003e\u0026lt;/modelVersion\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003ecom.example\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003emyproject\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e0.0.1-SNAPSHOT\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"nt\"\u003e\u0026lt;parent\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-parent\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- Use the latest compatible Spring Boot version. You can check https://spring.io/projects/spring-cloud for more information --\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e2.4.6\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/parent\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Spring Cloud Sleuth requires a Spring Cloud BOM --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"c\"\u003e\u0026lt;!-- Provide the latest stable Spring Cloud release train version (e.g. 2020.0.0) --\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train.version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- (you don\u0026#39;t need this if you are using a GA version) --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;repositories\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;repository\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;id\u0026gt;\u003c/span\u003espring-snapshots\u003cspan class=\"nt\"\u003e\u0026lt;/id\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;url\u0026gt;\u003c/span\u003ehttps://repo.spring.io/snapshot\u003cspan class=\"nt\"\u003e\u0026lt;/url\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;snapshots\u0026gt;\u0026lt;enabled\u0026gt;\u003c/span\u003etrue\u003cspan class=\"nt\"\u003e\u0026lt;/enabled\u0026gt;\u0026lt;/snapshots\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/repository\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;repository\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;id\u0026gt;\u003c/span\u003espring-milestones\u003cspan class=\"nt\"\u003e\u0026lt;/id\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;url\u0026gt;\u003c/span\u003ehttps://repo.spring.io/milestone\u003cspan class=\"nt\"\u003e\u0026lt;/url\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/repository\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/repositories\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;pluginRepositories\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;pluginRepository\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;id\u0026gt;\u003c/span\u003espring-snapshots\u003cspan class=\"nt\"\u003e\u0026lt;/id\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;url\u0026gt;\u003c/span\u003ehttps://repo.spring.io/snapshot\u003cspan class=\"nt\"\u003e\u0026lt;/url\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/pluginRepository\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;pluginRepository\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;id\u0026gt;\u003c/span\u003espring-milestones\u003cspan class=\"nt\"\u003e\u0026lt;/id\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;url\u0026gt;\u003c/span\u003ehttps://repo.spring.io/milestone\u003cspan class=\"nt\"\u003e\u0026lt;/url\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/pluginRepository\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/pluginRepositories\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/project\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的列表应该给你一个工作的构建。你可以通过运行\u003ccode\u003emvn package\u003c/code\u003e来测试它（现在，你可以忽略 \u0026ldquo;“jar will be empty - no content was marked for inclusion!\u0026ldquo;的警告）。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这时，你可以把项目导入IDE（大多数现代Java IDE都包含对Maven的内置支持）。为简单起见，我们在本例中继续使用纯文本编辑器。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"222-adding-classpath-依赖\"\u003e2.2.2. Adding Classpath 依赖\u003c/h4\u003e\n\u003cp\u003e要添加必要的依赖，编辑你的\u003ccode\u003epom.xml\u003c/code\u003e并在\u003ccode\u003eparent\u003c/code\u003e部分下面添加\u003ccode\u003espring-boot-starter-web\u003c/code\u003e依赖。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Boot\u0026#39;s Web support --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-web\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Sleuth with Brave tracer implementation --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"223-编写代码\"\u003e2.2.3. 编写代码\u003c/h4\u003e\n\u003cp\u003e为了完成我们的应用，我们需要创建一个单独的Java文件。默认情况下，Maven从\u003ccode\u003esrc/main/java\u003c/code\u003e编译源代码，所以你需要创建该目录结构，然后添加一个名为\u003ccode\u003esrc/main/java/Example.java\u003c/code\u003e的文件，包含以下代码。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.slf4j.Logger\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.slf4j.LoggerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.boot.*\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.boot.autoconfigure.*\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.web.bind.annotation.*\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@RestController\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableAutoConfiguration\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eExample\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eLogger\u003c/span\u003e \u003cspan class=\"n\"\u003elog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLoggerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetLogger\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBackend\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@RequestMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ehome\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello world!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSpringApplication\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eExample\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eargs\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e虽然这里的代码不多，但有相当多的事情要做。我们在接下来的几节中逐步介绍重要的部分。虽然这里的代码不多，但有相当多的事情要做。我们在接下来的几节中逐步介绍重要的部分。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e@RestController和@RequestMapping注解\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eSpring Boot设置了Rest Controller，并使我们的应用程序绑定到Tomcat端口。带有Brave追踪器的Spring Cloud Sleuth将提供对传入请求的检测。\u003c/p\u003e\n\u003ch4 id=\"224-运行该实例\"\u003e2.2.4. 运行该实例\u003c/h4\u003e\n\u003cp\u003e在这一点上，你的应用程序应该工作。由于你使用了\u003ccode\u003espring-boot-starter-parent\u003c/code\u003ePOM，你有一个有用的\u003ccode\u003erun\u003c/code\u003e目标，你可以用它来启动该应用程序。在项目根目录下输入\u003ccode\u003eSPRING_APPLICATION_NAME=backend mvn spring-boot:run\u003c/code\u003e来启动应用程序。你应该看到类似以下的输出。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ mvn spring-boot:run\n\n  .   ____          _            __ _ _\n /\u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e / ___\u003cspan class=\"s1\"\u003e\u0026#39;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n\u003c/span\u003e\u003cspan class=\"s1\"\u003e( ( )\\___ | \u0026#39;\u003c/span\u003e_ \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;_| | \u0026#39;\u003c/span\u003e_ \u003cspan class=\"se\"\u003e\\/\u003c/span\u003e _\u003cspan class=\"sb\"\u003e`\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"se\"\u003e\\ \\ \\ \\\n\u003c/span\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\\\u003c/span\u003e/  ___\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e  \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e  \u003cspan class=\"p\"\u003e|\u003c/span\u003e____\u003cspan class=\"p\"\u003e|\u003c/span\u003e .__\u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"se\"\u003e\\_\u003c/span\u003e_, \u003cspan class=\"p\"\u003e|\u003c/span\u003e / / / /\n \u003cspan class=\"o\"\u003e=========\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"o\"\u003e==============\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e___/\u003cspan class=\"o\"\u003e=\u003c/span\u003e/_/_/_/\n ...\n....... . . .\n....... . . . \u003cspan class=\"o\"\u003e(\u003c/span\u003elog output here\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n....... . . .\n........ Started Example in 2.222 seconds \u003cspan class=\"o\"\u003e(\u003c/span\u003eJVM running \u003cspan class=\"k\"\u003efor\u003c/span\u003e 6.514\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你打开网页浏览器到\u003ccode\u003elocalhost:8080\u003c/code\u003e，你应该看到以下输出。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eHello World!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你检查日志，你应该看到一个类似的输出\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e2020-10-21 12:01:16.285  INFO [backend,0b6aaf642574edd3,0b6aaf642574edd3] 289589 --- [nio-9000-exec-1] Example              : Hello world!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以注意到，日志格式已经更新，有以下信息\u003ccode\u003e[backend,0b6aaf642574edd3,0b6aaf642574edd3\u003c/code\u003e。这个条目对应于\u003ccode\u003e[application name,trace id, span id]\u003c/code\u003e。应用程序名称从\u003ccode\u003eSPRING_APPLICATION_NAME\u003c/code\u003e环境变量中读取。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你可以设置\u003ccode\u003elogging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG\u003c/code\u003e，而不是在处理程序中明确记录请求。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要优雅地退出应用程序，按\u003ccode\u003ectrl-c\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"23-接下来的步骤\"\u003e2.3. 接下来的步骤\u003c/h3\u003e\n\u003cp\u003e希望本节提供了一些Spring Cloud Sleuth的基础知识，让你开始编写自己的应用程序。如果你是一个面向任务的开发者，你可能想跳到\u003ca href=\"https://spring.io/\"\u003espring.io\u003c/a\u003e并查看一些\u003ca href=\"https://spring.io/guides/\"\u003e入门\u003c/a\u003e指南，这些指南解决了 \u0026ldquo;我如何用Spring做这个？\u0026ldquo;的具体问题。我们也有专门针对Spring Cloud Sleuth的\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#howto\"\u003ehow-to\u003c/a\u003e\u0026ldquo;参考文档。\u003c/p\u003e\n\u003cp\u003e否则，下一个合乎逻辑的步骤是阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using\"\u003e使用Spring Cloud Sleuth\u003c/a\u003e。如果你真的没有耐心，你也可以提前阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#project-features\"\u003eSpring Cloud Sleuth功能\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e你可以在\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth/tree/%7Bbranch%7D/spring-cloud-sleuth-samples\"\u003esamples\u003c/a\u003e找到默认项目的样本。\u003c/p\u003e\n\u003ch2 id=\"3-使用-spring-cloud-sleuth\"\u003e3. 使用 Spring Cloud Sleuth\u003c/h2\u003e\n\u003cp\u003e本节更详细地介绍了应该如何使用Spring Cloud Sleuth。它涵盖了一些主题，如用Spring Cloud Sleuth API或通过注解控制跨度生命周期。我们还介绍了一些Spring Cloud Sleuth的最佳实践。\u003c/p\u003e\n\u003cp\u003e如果你开始使用Spring Cloud Sleuth，在进入本节之前，你可能应该先阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#getting-started\"\u003e入门\u003c/a\u003e指南。\u003c/p\u003e\n\u003ch3 id=\"31-span生的命周期和spring-cloud-sleuth的api\"\u003e3.1. Span生的命周期和Spring Cloud Sleuth的API\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth Core在其 \u003ccode\u003eapi\u003c/code\u003e 模块中包含了所有需要由追踪器实现的必要接口。该项目带有OpenZipkin Brave实现。你可以通过查看\u003ccode\u003eorg.springframework.cloud.sleuth.brave.bridge\u003c/code\u003e来检查追踪器是如何与Sleuth的API桥接的。\u003c/p\u003e\n\u003cp\u003e最常用的接口是。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud.sleuth.Tracer\u003c/code\u003e - 使用追踪器，你可以创建一个根跨度，捕捉请求的关键路径。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eorg.springframework.cloud.sleuth.Span\u003c/code\u003e - Span是一个需要启动和停止的单一工作单元。包含时间信息和事件及标签。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e你也可以直接使用你的追踪器实现的API。\u003c/p\u003e\n\u003cp\u003e让我们来看看下面的Span生命周期动作。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using-creating-and-ending-spans\"\u003estart\u003c/a\u003e：当你开始一个跨度时，它的名字被指定，开始的时间戳被记录。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using-creating-and-ending-spans\"\u003eend\u003c/a\u003e:：跨度结束（跨度的结束时间被记录下来），如果跨度被取样，它就有资格被收集（例如，到Zipkin）。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using-continuing-spans\"\u003econtinue\u003c/a\u003e：该跨度被继续，例如在另一个线程中。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using-creating-spans-with-explicit-parent\"\u003ecreate with explicit parent\u003c/a\u003e：你可以创建一个新的跨度，并为它设置一个明确的父节点。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Sleuth为你创建一个\u003ccode\u003eTracer\u003c/code\u003e的实例。为了使用它，你可以自动连接它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"311-creating-and-ending-spans\"\u003e3.1.1. Creating and Ending Spans\u003c/h4\u003e\n\u003cp\u003e你可以通过使用Tracer手动创建Span，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// 开始一个Span。如果这个线程中存在一个跨度，它将成为\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e// `newSpan`的父节点。\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpanInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003estart\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// 你可以标记一个Span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;taxValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etaxValue\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// 你可以在一个`span`上记录一个事件\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eevent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;taxCalculated\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003efinally\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// 一旦完成，记得要结束`span\u0026#39;。这将允许收集\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// `span`，将其发送到分布式跟踪系统，例如Zipkin。\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在前面的例子中，我们可以看到如何创建一个新的span的实例。如果这个线程中已经有一个span，它就会成为新span的父级。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e创建\u003ccode\u003eSpan\u003c/code\u003e 后一定要记得 \u003ccode\u003eclean\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你的\u003ccode\u003espan\u003c/code\u003e包含一个大于50个字符的名字，这个名字会被截断为50个字符。你的名字必须是明确和具体的。大的名字会导致延迟问题，有时甚至会出现异常。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"312-continuing-spans\"\u003e3.1.2. Continuing Spans\u003c/h4\u003e\n\u003cp\u003e有时，你不想创建一个新的\u003ccode\u003espan\u003c/code\u003e，但你想继续一个。这种情况的一个例子可能如下。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAOP\u003c/strong\u003e: 如果在达到一个\u003ccode\u003easpect\u003c/code\u003e之前已经有一个\u003ccode\u003espan\u003c/code\u003e被创建，你可能不想创建一个新的\u003ccode\u003espan\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e为了继续一个 \u003ccode\u003espan\u003c/code\u003e，你可以在一个线程中存储 \u003ccode\u003espan\u003c/code\u003e，并将其传递给另一个线程，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003espanFromThreadX\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpanInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003espanFromThreadX\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003estart\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eexecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esubmit\u003c/span\u003e\u003cspan class=\"o\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// Pass the span from thread X\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003econtinuedSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003espanFromThreadX\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// You can tag a span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003econtinuedSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;taxValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etaxValue\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// You can log an event on a span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003econtinuedSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eevent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;taxCalculated\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}).\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003efinally\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003espanFromThreadX\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"313-creating-a-span-with-an-explicit-parent\"\u003e3.1.3. Creating a Span with an explicit Parent\u003c/h4\u003e\n\u003cp\u003e你可能想启动一个新的 \u0026ldquo;span\u0026rdquo;，并为该span提供一个明确的父节点。假设一个跨度的父级在一个线程中，而你想在另一个线程中启动一个新的跨度。每当你调用\u003ccode\u003eTracer.nextSpan()\u003c/code\u003e时，它就会创建一个参考当前范围内的span的span。你可以把span放在作用域中，然后调用\u003ccode\u003eTracer.nextSpan()\u003c/code\u003e，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// let\u0026#39;s assume that we\u0026#39;re in a thread Y and we\u0026#39;ve received\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e// the `initialSpan` from thread X. `initialSpan` will be the parent\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e// of the `newSpan`\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpanInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einitialSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enextSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;calculateCommission\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// You can tag a span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;commissionValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecommissionValue\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// You can log an event on a span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eevent\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;commissionCalculated\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003efinally\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// Once done remember to end the span. This will allow collecting\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// the span to send it to e.g. Zipkin. The tags and events set on the\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e// newSpan will not be present on the parent\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003enewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e创建这样的\u003ccode\u003espan\u003c/code\u003e后，你必须完成它。否则，它不会被报告（例如向Zipkin）。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你也可以使用\u003ccode\u003eTracer.nextSpan(Span parentSpan)\u003c/code\u003e版本来明确提供父级\u003ccode\u003espan\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"32-spans-命名\"\u003e3.2. Spans 命名\u003c/h3\u003e\n\u003cp\u003e挑选一个\u003ccode\u003espan\u003c/code\u003e名称不是一件简单的事情。一个\u003ccode\u003espan\u003c/code\u003e名称应该描述一个操作名称。这个名字应该是低cardinality，所以它不应该包括标识符。\u003c/p\u003e\n\u003cp\u003e因为有很多工具正在进行，所以一些跨度名称是人为的。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003econtroller-method-name\u003c/code\u003e当被一个方法名为\u003ccode\u003econtrollerMethodName\u003c/code\u003e的Controller接收时。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003easync\u003c/code\u003e用于用包装好的\u003ccode\u003eCallable\u003c/code\u003e和\u003ccode\u003eRunnable\u003c/code\u003e接口进行异步操作。\u003c/li\u003e\n\u003cli\u003e用\u003ccode\u003e@Scheduled\u003c/code\u003e注解的方法会返回该类的简单名称。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e幸运的是，对于异步处理，你可以提供明确的命名。\u003c/p\u003e\n\u003ch4 id=\"321-spanname-annotation\"\u003e3.2.1. @SpanName Annotation\u003c/h4\u003e\n\u003cp\u003e你可以通过使用\u003ccode\u003e@SpanName\u003c/code\u003e注解来明确地命名\u003ccode\u003espan\u003c/code\u003e，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@SpanName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTaxCountingRunnable\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// perform logic\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这种情况下，当以下列方式处理时，跨度被命名为 \u003ccode\u003ecalculateTax\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"n\"\u003erunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espanNamer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTaxCountingRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003cspan class=\"n\"\u003eFuture\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efuture\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esubmit\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// ... some additional logic ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003efuture\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"322-tostring-method\"\u003e3.2.2. toString() Method\u003c/h4\u003e\n\u003cp\u003e为 \u003ccode\u003eRunnable\u003c/code\u003e 或 \u003ccode\u003eCallable\u003c/code\u003e 创建单独的类是很罕见的。通常情况下，人们会创建这些类的匿名实例。你不能对这样的类进行注释。为了克服这个限制，如果没有 \u003ccode\u003e@SpanName\u003c/code\u003e 注释，我们会检查该类是否有 \u003ccode\u003etoString()\u003c/code\u003e 方法的自定义实现。\u003c/p\u003e\n\u003cp\u003e运行这样的代码会导致创建一个名为 \u003ccode\u003ecalculateTax\u003c/code\u003e 的span，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"n\"\u003erunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espanNamer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// perform logic\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e});\u003c/span\u003e\n\u003cspan class=\"n\"\u003eFuture\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003efuture\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esubmit\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// ... some additional logic ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003efuture\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"33-用注解管理span\"\u003e3.3. 用注解管理Span\u003c/h3\u003e\n\u003cp\u003e用注解来管理 \u003ccode\u003eSpan\u003c/code\u003e 有很多好的理由，包括。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e与跨度协作的API无关的手段。使用注解可以让用户在添加跨度时不依赖跨度api的库。这样做可以让Sleuth改变其核心API，对用户代码产生更少的影响。\u003c/li\u003e\n\u003cli\u003e减少了基本跨度操作的表面积。如果没有这个功能，你必须使用span api，它的生命周期命令可能被错误地使用。通过只暴露范围、标签和日志功能，你可以在不意外地破坏span生命周期的情况下进行协作。\u003c/li\u003e\n\u003cli\u003e与运行时生成的代码进行协作。通过Spring Data和Feign这样的库，接口的实现是在运行时生成的。因此，对对象进行跨度包装是很乏味的。现在你可以为接口和这些接口的参数提供注解。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"331-创建新的span\"\u003e3.3.1. 创建新的Span\u003c/h4\u003e\n\u003cp\u003e如果你不想手动创建本地\u003ccode\u003eSpan\u003c/code\u003e，你可以使用\u003ccode\u003e@NewSpan\u003c/code\u003e注解。另外，我们还提供了\u003ccode\u003e@SpanTag\u003c/code\u003e注解来自动添加标签。\u003c/p\u003e\n\u003cp\u003e现在我们可以考虑一些使用的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在没有任何参数的情况下注解方法，会导致创建一个新的跨度，其名称等于注解的方法名称。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;customNameOnTestMethod4\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod4\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你在注解中提供值（直接或通过设置\u003ccode\u003ename\u003c/code\u003e参数），创建的跨度将以提供的值作为名称。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// method declaration\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;customNameOnTestMethod5\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod5\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testTag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eparam\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// and method execution\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestBean\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestMethod5\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以把名字和标签都结合起来。让我们关注一下后者。在这种情况下，被注解的方法的参数运行时的值成为标签的值。在我们的例子中，标签键是\u003ccode\u003etestTag\u003c/code\u003e，标签值是\u003ccode\u003etest\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;customNameOnTestMethod3\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod3\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以把\u003ccode\u003e@NewSpan\u003c/code\u003e注解放在类和接口上。如果你覆盖了接口的方法，并为\u003ccode\u003e@NewSpan\u003c/code\u003e注解提供了不同的值，那么最具体的那一个会获胜（在这个例子中，\u003ccode\u003ecustomNameOnTestMethod3\u003c/code\u003e被设置）。\u003c/p\u003e\n\u003ch4 id=\"332-continuing-spans\"\u003e3.3.2. Continuing Spans\u003c/h4\u003e\n\u003cp\u003e如果你想给现有的跨度添加标签和注释，你可以使用\u003ccode\u003e@ContinueSpan\u003c/code\u003e注释，如下例所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// method declaration\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@ContinueSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;testMethod11\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003etestMethod11\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;testTag11\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eparam\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// method execution\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestBean\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestMethod11\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestBean\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etestMethod13\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(注意，与\u003ccode\u003e@NewSpan\u003c/code\u003e注释相反，你也可以用\u003ccode\u003elog\u003c/code\u003e参数添加日志)。\u003c/p\u003e\n\u003cp\u003e这样一来，跨度就会得到延续，并且。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e创建名为\u003ccode\u003etestMethod11.before\u003c/code\u003e和\u003ccode\u003etestMethod11.after\u003c/code\u003e的日志条目。\u003c/li\u003e\n\u003cli\u003e如果一个异常被抛出，也会创建一个名为\u003ccode\u003etestMethod11.afterFailure\u003c/code\u003e的日志条目。\u003c/li\u003e\n\u003cli\u003e创建一个键值为\u003ccode\u003etestTag11\u003c/code\u003e、值为\u003ccode\u003etest\u003c/code\u003e的标签。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"333-advanced-tag-setting\"\u003e3.3.3. Advanced Tag Setting\u003c/h4\u003e\n\u003cp\u003e有3种不同的方式来添加标签到span中。所有这些都是由\u003ccode\u003eSpanTag\u003c/code\u003e注释控制的。其优先级如下。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e尝试使用\u003ccode\u003eTagValueResolver\u003c/code\u003e类型的bean和提供的名称。\u003c/li\u003e\n\u003cli\u003e如果没有提供bean的名称，则尝试评估一个表达式。我们搜索一个\u003ccode\u003eTagValueExpressionResolver\u003c/code\u003e豆。默认实现使用SPEL表达式解析。\u003cstrong\u003e重要的是\u003c/strong\u003e你只能从SPEL表达式中引用属性。由于安全限制，不允许执行方法。\u003c/li\u003e\n\u003cli\u003e如果我们没有找到任何可以评估的表达式，则返回参数的\u003ccode\u003etoString()\u003c/code\u003e值。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e自定义Extractor\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e以下方法的标签值是由\u003ccode\u003eTagValueResolver\u003c/code\u003e 接口的实现计算出来的。它的类名必须作为 \u003ccode\u003eresolver\u003c/code\u003e 属性的值被传递。\u003c/p\u003e\n\u003cp\u003e考虑一下下面的注解方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003egetAnnotationForTagValueResolver\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eresolver\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTagValueResolver\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003etest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在进一步考虑以下\u003ccode\u003eTagValueResolver\u003c/code\u003e bean的实现。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomTagValueResolver\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eTagValueResolver\u003c/span\u003e \u003cspan class=\"nf\"\u003etagValueResolver\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eparameter\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Value from myCustomTagValueResolver\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的两个例子导致了设置一个等于来自\u003ccode\u003emyCustomTagValueResolver\u003c/code\u003e的标签值。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e解析一个值的表达式\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e考虑以下注释的方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003egetAnnotationForTagValueExpression\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eexpression\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#39;hello\u0026#39; + \u0026#39; characters\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003etest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e没有自定义实现\u003ccode\u003eTagValueExpressionResolver\u003c/code\u003e就会导致SPEL表达式的评估，并且在span上设置一个值为\u003ccode\u003e4个字符\u003c/code\u003e的标签。如果你想使用一些其他的表达式解析机制，你可以创建你自己的bean实现。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e使用 The toString() 方法\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e考虑以下注释的方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@NewSpan\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003egetAnnotationForArgumentToString\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@SpanTag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eLong\u003c/span\u003e \u003cspan class=\"n\"\u003eparam\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以\u003ccode\u003e15\u003c/code\u003e的值运行前面的方法，会导致设置一个字符串值为\u003ccode\u003e\u0026quot;15\u0026quot;\u003c/code\u003e的标签。\u003c/p\u003e\n\u003ch3 id=\"34-接下来要读什么\"\u003e3.4. 接下来要读什么\u003c/h3\u003e\n\u003cp\u003e现在你应该明白如何使用Spring Cloud Sleuth以及应该遵循的一些最佳实践。现在你可以继续了解具体的\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#project-features\"\u003eSpring Cloud Sleuth功能\u003c/a\u003e，或者你可以跳过前面的内容，阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/integrations\"\u003eSpring Cloud Sleuth中可用的集成\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"4-spring-cloud-sleuth的特性\"\u003e4. Spring Cloud Sleuth的特性\u003c/h2\u003e\n\u003cp\u003e本节深入探讨了Spring Cloud Sleuth的细节。在这里，你可以了解到你可能想要使用和定制的关键功能。如果你还没有这样做，你可能需要阅读\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#getting-started\"\u003e入门\u003c/a\u003e\u0026ldquo;和\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#using\"\u003e使用Spring Cloud Sleuth\u003c/a\u003e\u0026ldquo;部分，以便你有一个良好的基础知识。\u003c/p\u003e\n\u003ch3 id=\"41-context-传播\"\u003e4.1. Context 传播\u003c/h3\u003e\n\u003cp\u003e追踪使用标头传播从服务连接到服务。默认格式是\u003ca href=\"https://github.com/openzipkin/b3-propagation\"\u003eB3\u003c/a\u003e。与数据格式类似，你也可以配置替代的头格式，只要跟踪和跨度ID与B3兼容。最值得注意的是，这意味着跟踪ID和跨度ID是小写的十六进制，而不是UUID。除了跟踪标识符，其他属性（Baggage）也可以与请求一起传递。远程Baggage必须是预定义的，但在其他方面是灵活的。\u003c/p\u003e\n\u003cp\u003e要使用提供的默认值，你可以设置\u003ccode\u003espring.sleuth.propagation.type\u003c/code\u003e属性。该值可以是一个列表，在这种情况下，你将传播更多的跟踪头信息。\u003c/p\u003e\n\u003cp\u003e对于Brave，我们支持\u003ccode\u003eAWS\u003c/code\u003e、\u003ccode\u003eB3\u003c/code\u003e、\u003ccode\u003eW3C\u003c/code\u003e的传播类型。\u003c/p\u003e\n\u003cp\u003e你可以在这个\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#how-to-change-context-propagation\"\u003ehow to section\u003c/a\u003e \u0026ldquo;中阅读更多关于如何提供自定义上下文传播的信息。\u003c/p\u003e\n\u003ch3 id=\"42-采样\"\u003e4.2. 采样\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth将抽样决策推给了追踪器的实现。然而，在有些情况下，你可以在运行时改变采样决定。\u003c/p\u003e\n\u003cp\u003e其中一种情况是跳过某些客户端的跨度报告。为了实现这一点，你可以在\u003ccode\u003espring.sleuth.web.client.skip-pattern\u003c/code\u003e中设置要跳过的路径模式。另一个选择是提供你自己的自定义\u003ccode\u003eorg.springframework.cloud.sleuth.SamplerFunction\u0026lt;org.springframework.cloud.sleuth.http.HttpRequest\u0026gt;\u003c/code\u003e实现并定义何时不应对给定的\u003ccode\u003eHttpRequest\u003c/code\u003e进行采样。\u003c/p\u003e\n\u003ch3 id=\"43-baggage\"\u003e4.3. Baggage\u003c/h3\u003e\n\u003cp\u003e分布式跟踪是通过传播服务内部和跨服务的字段来进行的，这些字段将跟踪连接在一起：traceId和spanId值得注意。持有这些字段的上下文可以选择推送其他字段，这些字段需要保持一致，无论触及的服务有多少。这些额外字段的简单名称是 \u0026ldquo;Baggage\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003eSleuth允许你定义哪些Baggage允许存在于跟踪上下文中，包括使用什么样的头名称。\u003c/p\u003e\n\u003cp\u003e下面的例子展示了使用Spring Cloud Sleuth的API设置Baggage值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpanInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003einitialSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBaggageInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ebusinessProcess\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreateBaggage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBUSINESS_PROCESS\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ALM\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBaggageInScope\u003c/span\u003e \u003cspan class=\"n\"\u003ecountryCode\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreateBaggage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCOUNTRY_CODE\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003eset\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;FO\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e目前对Baggage项目的数量或大小没有限制。请记住，过多的Baggage会降低系统的吞吐量或增加RPC的延迟。在极端情况下，过多的Baggage会使应用程序崩溃，原因是超过了传输级的消息或标题的容量。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e你可以使用属性来定义没有特殊配置的字段，如名称映射。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003espring.sleuth.baggage.remote-fields\u003c/code\u003e是一个接受并传播给远程服务的头名称的列表。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003espring.sleuth.baggage.local-fields\u003c/code\u003e是一个要在本地传播的名称列表。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这些键不适用前缀。你所设置的就是实际使用的。\u003c/p\u003e\n\u003cp\u003e在这两个属性中的任何一个中设置的名称都会导致一个相同名称的 \u0026ldquo;Baggage\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e为了自动将Baggage值设置为Slf4j的MDC，你必须用一个允许的本地或远程键的列表来设置\u003ccode\u003espring.sleuth.baggage.correlation-fields\u003c/code\u003e属性。例如，\u003ccode\u003espring.sleuth.baggage.correlation-fields=country-code\u003c/code\u003e将把\u003ccode\u003ecountry-code\u003c/code\u003e包袱的值设置到MDC。\u003c/p\u003e\n\u003cp\u003e注意，额外的字段会从下一个下游跟踪上下文开始传播并添加到 MDC 中。要在当前跟踪上下文中立即将额外字段添加到 MDC 中，请将该字段配置为更新时刷新。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"c1\"\u003e// configuration\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eBaggageField\u003c/span\u003e \u003cspan class=\"nf\"\u003ecountryCodeField\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eBaggageField\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;country-code\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eScopeDecorator\u003c/span\u003e \u003cspan class=\"nf\"\u003emdcScopeDecorator\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMDCScopeDecorator\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclear\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eadd\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSingleCorrelationField\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecountryCodeField\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eflushOnUpdate\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e())\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// service\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n\u003cspan class=\"n\"\u003eBaggageField\u003c/span\u003e \u003cspan class=\"n\"\u003ecountryCodeField\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ecountryCodeField\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eupdateValue\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;new-value\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e请记住，向MDC添加条目会大大降低你的应用程序的性能!\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你想把Baggage条目作为标签加入，以便能够通过Baggage条目搜索跨度，你可以用允许的行李键列表设置\u003ccode\u003espring.sleuth.baggage.tag-fields\u003c/code\u003e的值。要禁用该功能，你必须通过\u003ccode\u003espring.sleuth.propagation.tag.enabled=false\u003c/code\u003e属性。\u003c/p\u003e\n\u003ch4 id=\"431-baggage-versus-tags\"\u003e4.3.1 Baggage versus Tags\u003c/h4\u003e\n\u003cp\u003e与跟踪ID一样，Baggage被附加到消息或请求中，通常作为头文件。标签是以Span的形式发送到Zipkin的键值对。Baggage值默认不加入span，这意味着除非你选择加入，否则你不能根据Baggage进行搜索。\u003c/p\u003e\n\u003cp\u003e要使Baggage也成为标签，请使用属性\u003ccode\u003espring.sleuth.baggage.tag-fields\u003c/code\u003e，像这样。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003esleuth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003ebaggage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ebar\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eremoteFields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ecountry-code\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ex-vcap-request-id\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003etagFields\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e- \u003cspan class=\"l\"\u003ecountry-code\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"44-openzipkin-brave-tracer集成\"\u003e4.4. OpenZipkin Brave Tracer集成\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth通过 \u003ccode\u003espring-cloud-sleuth-brave\u003c/code\u003e模块中的bridge与OpenZipkin Brave追踪器集成。在本节中，你可以了解到具体的Brave集成。\u003c/p\u003e\n\u003cp\u003e你可以选择在你的代码中直接使用Sleuth的API或Brave的API（例如，Sleuth的\u003ccode\u003eTracer\u003c/code\u003e或Brave的\u003ccode\u003eTracer\u003c/code\u003e）。如果你想直接使用这个追踪器实现的API，请阅读\u003ca href=\"https://github.com/openzipkin/brave\"\u003e他们的文档以了解更多信息\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"441-brave-basics\"\u003e4.4.1. Brave Basics\u003c/h4\u003e\n\u003cp\u003e以下是你可能使用的最核心的类型。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ebrave.SpanCustomizer\u003c/code\u003e - 改变当前正在进行的span。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ebrave.Tracer\u003c/code\u003e - 开始临时性的新span。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以下是OpenZipkin Brave项目中最相关的链接。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/openzipkin/brave/tree/master/brave\"\u003eBrave’s core library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/openzipkin/brave/tree/master/brave#baggage\"\u003eBaggage (propagated fields)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/http\"\u003eHTTP tracing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"442-brave-sampling\"\u003e4.4.2. Brave Sampling\u003c/h4\u003e\n\u003cp\u003e采样只适用于追踪后端，如Zipkin。无论采样率如何，日志中都会出现跟踪ID。采样是一种防止系统过载的方法，即持续追踪一些但不是所有的请求。\u003c/p\u003e\n\u003cp\u003e默认速率为每秒10条，由spring.sleuth.sampler.rate属性控制，当我们知道Sleuth是用于记录以外的原因时，就会适用。使用每秒100条以上的采样率时要特别小心，因为它可能会使你的跟踪系统超载。\u003c/p\u003e\n\u003cp\u003e采样器也可以通过Java配置来设置，如下面的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eSampler\u003c/span\u003e \u003cspan class=\"nf\"\u003edefaultSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eALWAYS_SAMPLE\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e你可以把HTTP标头b3设置为1，或者在进行信息传递时，你可以把spanFlags标头设置为1。这样做可以强制对当前请求进行采样，而不考虑配置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e默认情况下，采样器将与刷新范围机制一起工作。这意味着你可以在运行时改变采样属性，刷新应用程序，这些变化将得到反映。然而，有时围绕采样器创建一个代理并过早地调用它（从\u003ccode\u003e@PostConstruct\u003c/code\u003e注释的方法）可能会导致死锁。在这种情况下，要么明确地创建一个采样器bean，要么将属性\u003ccode\u003espring.sleuth.sampler.refresh.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e以禁用刷新范围支持。\u003c/p\u003e\n\u003ch4 id=\"443-brave-baggage-java-configuration\"\u003e4.4.3. Brave Baggage Java configuration\u003c/h4\u003e\n\u003cp\u003e如果你需要做比上面更高级的事情，请不要定义属性，而是为你使用的包袱字段使用\u003ccode\u003e@Bean\u003c/code\u003e配置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eBaggagePropagationCustomizer\u003c/code\u003e设置baggage字段\u003c/li\u003e\n\u003cli\u003e添加一个\u003ccode\u003eSingleBaggageField\u003c/code\u003e来控制一个\u003ccode\u003eBaggage\u003c/code\u003e的标题名称。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCorrelationScopeCustomizer\u003c/code\u003e设置了MDC字段\u003c/li\u003e\n\u003cli\u003e添加一个\u003ccode\u003eSingleCorrelationField\u003c/code\u003e来改变一个\u003ccode\u003ebaggage\u003c/code\u003e的MDC名称，或者如果更新刷新。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"444-brave-customizations\"\u003e4.4.4. Brave Customizations\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003ebrave.Tracer\u003c/code\u003e对象是由sleuth完全管理的，所以你很少需要影响它。也就是说，Sleuth支持一些\u003ccode\u003eCustomizer\u003c/code\u003e类型，允许你配置任何Sleuth尚未用自动配置或属性完成的东西。\u003c/p\u003e\n\u003cp\u003e如果你把下面的一个定义为 \u0026ldquo;Bean\u0026rdquo;，Sleuth将调用它来定制行为。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eRpcTracingCustomizer\u003c/code\u003e - 用于RPC标记和采样策略\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eHttpTracingCustomizer\u003c/code\u003e - 用于HTTP标记和采样策略\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMessagingTracingCustomizer\u003c/code\u003e - 用于消息标记和取样策略\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCurrentTraceContextCustomizer\u003c/code\u003e - 集成装饰器，如关联性。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eBaggagePropagationCustomizer\u003c/code\u003e - 用于在进程中和在标题上传播包袱字段\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCorrelationScopeDecoratorCustomizer\u003c/code\u003e - 用于范围装饰，如MDC（日志）字段的相关。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eBrave Sampling Customizations\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e如果需要客户端/服务器采样，只需注册一个\u003ccode\u003ebrave.sampler.SamplerFunction\u0026lt;HttpRequest\u0026gt;\u003c/code\u003e类型的Bean，并将该Bean命名为\u003ccode\u003esleuthHttpClientSampler\u003c/code\u003e用于客户端采样，\u003ccode\u003esleuthHttpServerSampler\u003c/code\u003e用于服务器采样。\u003c/p\u003e\n\u003cp\u003e为了方便起见，\u003ccode\u003e@HttpClientSampler\u003c/code\u003e和\u003ccode\u003e@HttpServerSampler\u003c/code\u003e注解可以用来注入适当的Bean或通过其静态字符串\u003ccode\u003eNAME\u003c/code\u003e字段来引用Bean名称。\u003c/p\u003e\n\u003cp\u003e查看Brave的代码，看看如何制作一个基于路径的采样器的例子\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/http#sampling-policy\"\u003egithub.com/openzipkin/brave/tree/master/instrumentation/http#sampling-policy\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e如果你想完全重写\u003ccode\u003eHttpTracing\u003c/code\u003ebean，你可以使用\u003ccode\u003eSkipPatternProvider\u003c/code\u003e接口来检索那些不应该被采样的跨度的URL\u003ccode\u003ePattern\u003c/code\u003e。下面你可以看到一个在服务器端使用\u003ccode\u003eSkipPatternProvider\u003c/code\u003e的例子，\u003ccode\u003eSampler\u0026lt;HttpRequest\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServerSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eSamplerFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSkipPatternProvider\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ePattern\u003c/span\u003e \u003cspan class=\"n\"\u003epattern\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprovider\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eskipPattern\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003eurl\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"n\"\u003eshouldSkip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003epattern\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ematcher\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eurl\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003ematches\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n          \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eshouldSkip\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n              \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"445-brave-messaging\"\u003e4.4.5. Brave Messaging\u003c/h4\u003e\n\u003cp\u003eSleuth自动配置了\u003ccode\u003eMessagingTracing\u003c/code\u003ebean，作为Kafka或JMS等消息传递工具的基础。\u003c/p\u003e\n\u003cp\u003e如果需要定制生产者/消费者的消息跟踪采样，只需注册一个\u003ccode\u003ebrave.sampler.SamplerFunction\u0026lt;MessagingRequest\u0026gt;\u003c/code\u003e类型的bean，并为生产者采样的bean命名为\u003ccode\u003esleuthProducerSampler\u003c/code\u003e，为消费者采样命名为\u003ccode\u003esleuthConsumerSampler\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e为了方便起见，\u003ccode\u003e@ProducerSampler\u003c/code\u003e和\u003ccode\u003e@ConsumerSampler\u003c/code\u003e注解可用于注入适当的Bean或通过其静态字符串\u003ccode\u003eNAME\u003c/code\u003e字段引用Bean名称。\u003c/p\u003e\n\u003cp\u003e例如。这是一个每秒追踪100个消费者请求的采样器，除了 \u0026ldquo;alerts\u0026quot;通道。其他请求将使用由\u003ccode\u003eTracing\u003c/code\u003e组件提供的全局速率。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eConsumerSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eSamplerFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessagingRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003emyMessagingSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMessagingRuleSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eputRule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echannelNameEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;alerts\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNEVER_SAMPLE\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n              \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eputRule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMatchers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ealwaysMatch\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eRateLimitingSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更多内容请见\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/messaging#sampling-policy\"\u003egithub.com/openzipkin/brave/tree/master/instrumentation/messaging#sampling-policy\u003c/a\u003e\u003c/p\u003e\n\u003ch4 id=\"446-brave-opentracing\"\u003e4.4.6. Brave Opentracing\u003c/h4\u003e\n\u003cp\u003e你可以通过\u003ccode\u003eio.opentracing.brave:brave-opentracing\u003c/code\u003e bridge 与Brave和\u003ca href=\"https://opentracing.io/\"\u003eOpenTracing\u003c/a\u003e集成。只要把它添加到classpath中，OpenTracing的\u003ccode\u003eTracer\u003c/code\u003e就会被自动设置。\u003c/p\u003e\n\u003ch3 id=\"45-向zipkin发送span\"\u003e4.5. 向Zipkin发送Span\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth提供了与\u003ca href=\"https://zipkin.io/\"\u003eOpenZipkin\u003c/a\u003e分布式跟踪系统的各种集成。无论选择何种追踪器实现，只需在classpath中添加\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e，就可以开始向Zipkin发送Span。你可以选择通过HTTP或消息传递来实现。你可以在\u0026rdquo;\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#how-to-set-up-sleuth-with-brave-zipkin-messaging\"\u003ehow to section\u003c/a\u003e \u0026ldquo;中阅读更多关于如何做到这一点的信息。\u003c/p\u003e\n\u003cp\u003e当span被关闭时，它将通过HTTP发送给Zipkin。该通信是异步的。你可以通过设置\u003ccode\u003espring.zipkin.baseUrl\u003c/code\u003e属性来配置URL，如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.baseUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://192.168.99.100:9411/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果想通过服务发现找到Zipkin，可以在URL内传递Zipkin的服务ID，如下例所示为\u003ccode\u003ezipkinserver\u003c/code\u003e服务ID。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.baseUrl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehttps://zipkinserver/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要禁用该功能，只需将\u003ccode\u003espring.zipkin.discovery-client-enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e当发现客户端功能启用时，Sleuth使用\u003ccode\u003eLoadBalancerClient\u003c/code\u003e来查找Zipkin服务器的URL。这意味着你可以设置负载平衡的配置。\u003c/p\u003e\n\u003cp\u003e如果你在classpath上有\u003ccode\u003eweb\u003c/code\u003e、\u003ccode\u003erabbit\u003c/code\u003e、\u003ccode\u003eactivemq\u003c/code\u003e或\u003ccode\u003ekafka\u003c/code\u003e在一起，你可能需要挑选你想发送spans到zipkin的方式。为此，将\u003ccode\u003eweb\u003c/code\u003e、\u003ccode\u003erabbit\u003c/code\u003e、\u003ccode\u003eactivemq\u003c/code\u003e或\u003ccode\u003ekafka\u003c/code\u003e设置为\u003ccode\u003espring.zipkin.sender.type\u003c/code\u003e属性。下面的例子显示了设置\u003ccode\u003eweb\u003c/code\u003e的sender类型。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.sender.type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eweb\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要定制通过HTTP向Zipkin发送span的\u003ccode\u003eRestTemplate\u003c/code\u003e，可以注册\u003ccode\u003eZipkinRestTemplateCustomizer\u003c/code\u003e bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e \u003cspan class=\"n\"\u003eZipkinRestTemplateCustomizer\u003c/span\u003e \u003cspan class=\"nf\"\u003emyCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eZipkinRestTemplateCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n            \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// customize the RestTemplate\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然而，如果你想控制创建\u003ccode\u003eRestTemplate\u003c/code\u003e对象的整个过程，你必须创建一个\u003ccode\u003ezipkin2.reporter.Sender\u003c/code\u003e类型的bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e \u003cspan class=\"n\"\u003eSender\u003c/span\u003e \u003cspan class=\"nf\"\u003emyRestTemplateSender\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eZipkinProperties\u003c/span\u003e \u003cspan class=\"n\"\u003ezipkin\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eZipkinRestTemplateCustomizer\u003c/span\u003e \u003cspan class=\"n\"\u003ezipkinRestTemplateCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emySuperCustomRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ezipkinRestTemplateCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustomize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emyCustomSender\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ezipkin\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认情况下，api路径将被设置为\u003ccode\u003eapi/v2/spans\u003c/code\u003e或\u003ccode\u003eapi/v1/spans\u003c/code\u003e，取决于编码器版本。如果你想使用自定义的api路径，你可以使用以下属性进行配置（空的情况下，设置\u0026rdquo;\u0026quot;）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.api-path\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ev2/path2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"451-自定义-service-名称\"\u003e4.5.1. 自定义 service 名称\u003c/h4\u003e\n\u003cp\u003e默认情况下，Sleuth假定，当你向Zipkin发送span时，你希望span的服务名称等于\u003ccode\u003espring.application.name\u003c/code\u003e属性的值。不过，情况并非总是如此。在有些情况下，你想为来自你的应用程序的所有span明确提供一个不同的服务名称。为了达到这个目的，你可以向你的应用程序传递以下属性来覆盖这个值（这个例子是针对一个名为\u003ccode\u003emyService\u003c/code\u003e的服务）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.service.name\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyService\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"452-host-locator\"\u003e4.5.2. Host Locator\u003c/h4\u003e\n\u003cblockquote\u003e\n\u003cp\u003e本节是关于从服务发现中定义主机。它不是关于通过服务发现找到Zipkin。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e为了定义对应于一个特定`span\u0026rsquo;的主机，我们需要解决主机名和端口。默认的方法是从服务器属性中获取这些值。如果这些没有设置，我们尝试从网络接口检索主机名。\u003c/p\u003e\n\u003cp\u003e如果你启用了发现客户端，并且喜欢从服务注册表中的注册实例检索主机地址，你必须设置\u003ccode\u003espring.zipkin.locator.discovery.enabled\u003c/code\u003e属性（它适用于基于HTTP和基于流的跨度报告），如下所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.locator.discovery.enabled\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"453-customization-of-reported-spans\"\u003e4.5.3. Customization of Reported Spans\u003c/h4\u003e\n\u003cp\u003e在Sleuth中，我们用一个固定的名字来生成Span。有些用户希望根据标签的值来修改名称。\u003c/p\u003e\n\u003cp\u003eSleuth注册了一个\u003ccode\u003eSpanFilter\u003c/code\u003ebean，可以自动跳过报告给定名称模式的Span。属性\u003ccode\u003espring.sleuth.span-filter.span-name-patterns-to-skip\u003c/code\u003e包含span名称的默认跳过模式。属性\u003ccode\u003espring.sleuth.span-filter.additional-span-name-patterns-to-skip\u003c/code\u003e将把提供的Span名称模式追加到现有的模式中。为了禁用这个功能，只需将\u003ccode\u003espring.sleuth.span-filter.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBrave Customization of Reported Spans\u003c/strong\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e本节仅适用于Brave追踪器。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e在报告Span之前（例如，向Zipkin），你可能想以某种方式修改该Span。你可以通过实现 \u0026ldquo;SpanHandler\u0026quot;来实现。\u003c/p\u003e\n\u003cp\u003e下面的例子显示了如何注册两个实现\u003ccode\u003eSpanHandler\u003c/code\u003e的bean。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eSpanHandler\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandlerOne\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpanHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e \u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMutableSpan\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCause\u003c/span\u003e \u003cspan class=\"n\"\u003ecause\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;foo\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// keep this span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\n\u003cspan class=\"n\"\u003eSpanHandler\u003c/span\u003e \u003cspan class=\"nf\"\u003ehandlerTwo\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eSpanHandler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e \u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMutableSpan\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCause\u003c/span\u003e \u003cspan class=\"n\"\u003ecause\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; bar\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// keep this span\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面的例子导致报告的span的名称改为\u003ccode\u003efoo bar\u003c/code\u003e，就在它被报告之前（例如，给Zipkin）。\u003c/p\u003e\n\u003ch4 id=\"454-覆盖zipkin的自动配置\"\u003e4.5.4. 覆盖Zipkin的自动配置\u003c/h4\u003e\n\u003cp\u003e从2.1.0版本开始，Spring Cloud Sleuth支持向多个追踪系统发送追踪信息。为了使其发挥作用，每个追踪系统都需要有一个\u003ccode\u003eReporter\u0026lt;Span\u0026gt;\u003c/code\u003e和\u003ccode\u003eSender\u003c/code\u003e。如果你想覆盖所提供的bean，你需要给它们一个特定的名字。要做到这一点，你可以分别使用\u003ccode\u003eZipkinAutoConfiguration.Reporter_BEAN_NAME\u003c/code\u003e和\u003ccode\u003eZipkinAutoConfiguration.SENDER_BEAN_NAME\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eprotected\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eZipkinAutoConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eREPORTER_BEAN_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eReporter\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ezipkin2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003emyReporter\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Qualifier\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eZipkinAutoConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSENDER_BEAN_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eMySender\u003c/span\u003e \u003cspan class=\"n\"\u003emySender\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncReporter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emySender\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eZipkinAutoConfiguration\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eSENDER_BEAN_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eMySender\u003c/span\u003e \u003cspan class=\"nf\"\u003emySender\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eMySender\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMySender\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eSender\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n        \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"n\"\u003espanSent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"kt\"\u003eboolean\u003c/span\u003e \u003cspan class=\"nf\"\u003eisSpanSent\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espanSent\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eEncoding\u003c/span\u003e \u003cspan class=\"nf\"\u003eencoding\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eEncoding\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eJSON\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emessageMaxBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eMAX_VALUE\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emessageSizeInBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eencodedSpans\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eencoding\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003elistSizeInBytes\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eencodedSpans\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eCall\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eVoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003esendSpans\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003ebyte\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eencodedSpans\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espanSent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eCall\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"46-日志整合\"\u003e4.6. 日志整合\u003c/h3\u003e\n\u003cp\u003eSleuth用包括服务名称（\u003ccode\u003e%{spring.zipkin.service.name}\u003c/code\u003e或\u003ccode\u003e%{spring.application.name}\u003c/code\u003e，如果之前没有设置）、span ID（\u003ccode\u003e%{spanId}\u003c/code\u003e）和trace ID（\u003ccode\u003e%{traceId}\u003c/code\u003e）等变量配置日志上下文。这些有助于你将日志与分布式跟踪联系起来，并允许你选择使用什么工具来排除服务的故障。\u003c/p\u003e\n\u003cp\u003e一旦你发现任何有错误的日志，你可以在消息中寻找跟踪ID。把它粘贴到你的分布式跟踪系统中，以可视化整个跟踪，不管第一个请求最终击中了多少个服务。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003ebackend.log:  2020-04-09 17:45:40.516 ERROR [backend,5e8eeec48b08e26882aba313eb08f0a4,dcc1df555b5777b3] 97203 --- [nio-9000-exec-1] o.s.c.s.i.web.ExceptionLoggingFilter     : Uncaught exception thrown\nfrontend.log:2020-04-09 17:45:40.574 ERROR [frontend,5e8eeec48b08e26882aba313eb08f0a4,82aba313eb08f0a4] 97192 --- [nio-8081-exec-2] o.s.c.s.i.web.ExceptionLoggingFilter     : Uncaught exception thrown\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面，你会注意到跟踪ID是\u003ccode\u003e5e8eeec48b08e26882aba313eb08f0a4\u003c/code\u003e ，例如。这个日志配置是由Sleuth自动设置的。你可以通过\u003ccode\u003espring.sleuth.enabled=false\u003c/code\u003e属性禁用Sleuth，或者放入你自己的\u003ccode\u003elogging.pattern.level\u003c/code\u003e属性来禁用它。\u003c/p\u003e\n\u003cp\u003e如果你使用一个日志聚合工具（如\u003ca href=\"https://www.elastic.co/products/kibana\"\u003eKibana\u003c/a\u003e, \u003ca href=\"https://www.splunk.com/\"\u003eSplunk\u003c/a\u003e, 和其他），你可以对发生的事件进行排序。来自Kibana的一个例子类似于下面的图片。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://cdn.jsdelivr.net/gh/KevinBlandy/springcloud-images/2021/07/25/3c975295b96f4b65ad8911fd52f2740f.png\" alt=\" \"\u003e\u003c/p\u003e\n\u003cp\u003e如果你想使用\u003ca href=\"https://www.elastic.co/guide/en/logstash/current/index.html\"\u003eLogstash\u003c/a\u003e，下面列出了Logstash的Grok模式。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003efilter {\n  # pattern matching logback pattern\n  grok {\n    match =\u0026gt; { \u0026#34;message\u0026#34; =\u0026gt; \u0026#34;%{TIMESTAMP_ISO8601:timestamp}\\s+%{LOGLEVEL:severity}\\s+\\[%{DATA:service},%{DATA:trace},%{DATA:span}\\]\\s+%{DATA:pid}\\s+---\\s+\\[%{DATA:thread}\\]\\s+%{DATA:class}\\s+:\\s+%{GREEDYDATA:rest}\u0026#34; }\n  }\n  date {\n    match =\u0026gt; [\u0026#34;timestamp\u0026#34;, \u0026#34;ISO8601\u0026#34;]\n  }\n  mutate {\n    remove_field =\u0026gt; [\u0026#34;timestamp\u0026#34;]\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e如果您想将 Grok 与 Cloud Foundry 的日志一起使用，您必须使用以下模式。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003efilter {\n  # pattern matching logback pattern\n  grok {\n    match =\u0026gt; { \u0026#34;message\u0026#34; =\u0026gt; \u0026#34;(?m)OUT\\s+%{TIMESTAMP_ISO8601:timestamp}\\s+%{LOGLEVEL:severity}\\s+\\[%{DATA:service},%{DATA:trace},%{DATA:span}\\]\\s+%{DATA:pid}\\s+---\\s+\\[%{DATA:thread}\\]\\s+%{DATA:class}\\s+:\\s+%{GREEDYDATA:rest}\u0026#34; }\n  }\n  date {\n    match =\u0026gt; [\u0026#34;timestamp\u0026#34;, \u0026#34;ISO8601\u0026#34;]\n  }\n  mutate {\n    remove_field =\u0026gt; [\u0026#34;timestamp\u0026#34;]\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"461-使用logstash的json-logback\"\u003e4.6.1. 使用Logstash的JSON Logback\u003c/h4\u003e\n\u003cp\u003e通常情况下，你不希望将你的日志存储在文本文件中，而是存储在Logstash可以立即提取的JSON文件中。要做到这一点，你必须做到以下几点（为了便于阅读，我们用\u003ccode\u003egroupId:artifactId:version\u003c/code\u003e的符号来传递依赖关系）。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDependencies Setup\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e确保 Logback 在 classpath 上 ( \u003ccode\u003ech.qos.logback:logback-core\u003c/code\u003e ) 。\u003c/li\u003e\n\u003cli\u003e2.添加 Logstash Logback 编码。例如，要使用\u003ccode\u003e4.6\u003c/code\u003e版本，添加\u003ccode\u003enet.logstash.logback:logstash-logback-encoder:4.6\u003c/code\u003e。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eLogback设置\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e考虑一下下面这个Logback配置文件的例子（logback-spring.xml）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"cp\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;configuration\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;include\u003c/span\u003e \u003cspan class=\"na\"\u003eresource=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;org/springframework/boot/logging/logback/defaults.xml\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;springProperty\u003c/span\u003e \u003cspan class=\"na\"\u003escope=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;context\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;springAppName\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003esource=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;spring.application.name\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Example for logging into the build folder of your project --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;property\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;LOG_FILE\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;${BUILD_FOLDER:-build}/${springAppName}\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- You can override this to have a custom pattern --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;property\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;CONSOLE_LOG_PATTERN\u0026#34;\u003c/span\u003e\n              \u003cspan class=\"na\"\u003evalue=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Appender to log to console --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;console\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.ConsoleAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;filter\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.classic.filter.ThresholdFilter\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"c\"\u003e\u0026lt;!-- Minimum logging level to be presented in the console logs--\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;level\u0026gt;\u003c/span\u003eDEBUG\u003cspan class=\"nt\"\u003e\u0026lt;/level\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/filter\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;encoder\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e${CONSOLE_LOG_PATTERN}\u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;charset\u0026gt;\u003c/span\u003eutf8\u003cspan class=\"nt\"\u003e\u0026lt;/charset\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/encoder\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Appender to log to file --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;flatfile\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.rolling.RollingFileAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;file\u0026gt;\u003c/span\u003e${LOG_FILE}\u003cspan class=\"nt\"\u003e\u0026lt;/file\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;rollingPolicy\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.rolling.TimeBasedRollingPolicy\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;fileNamePattern\u0026gt;\u003c/span\u003e${LOG_FILE}.%d{yyyy-MM-dd}.gz\u003cspan class=\"nt\"\u003e\u0026lt;/fileNamePattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;maxHistory\u0026gt;\u003c/span\u003e7\u003cspan class=\"nt\"\u003e\u0026lt;/maxHistory\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/rollingPolicy\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;encoder\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e${CONSOLE_LOG_PATTERN}\u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;charset\u0026gt;\u003c/span\u003eutf8\u003cspan class=\"nt\"\u003e\u0026lt;/charset\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/encoder\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e\u0026lt;!-- Appender to log to file in a JSON format --\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;appender\u003c/span\u003e \u003cspan class=\"na\"\u003ename=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;logstash\u0026#34;\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.rolling.RollingFileAppender\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;file\u0026gt;\u003c/span\u003e${LOG_FILE}.json\u003cspan class=\"nt\"\u003e\u0026lt;/file\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;rollingPolicy\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ch.qos.logback.core.rolling.TimeBasedRollingPolicy\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;fileNamePattern\u0026gt;\u003c/span\u003e${LOG_FILE}.json.%d{yyyy-MM-dd}.gz\u003cspan class=\"nt\"\u003e\u0026lt;/fileNamePattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;maxHistory\u0026gt;\u003c/span\u003e7\u003cspan class=\"nt\"\u003e\u0026lt;/maxHistory\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/rollingPolicy\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;encoder\u003c/span\u003e \u003cspan class=\"na\"\u003eclass=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;providers\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;timestamp\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;timeZone\u0026gt;\u003c/span\u003eUTC\u003cspan class=\"nt\"\u003e\u0026lt;/timeZone\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/timestamp\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e\n                    \u003cspan class=\"nt\"\u003e\u0026lt;pattern\u0026gt;\u003c/span\u003e\n                        {\n                        \u0026#34;timestamp\u0026#34;: \u0026#34;@timestamp\u0026#34;,\n                        \u0026#34;severity\u0026#34;: \u0026#34;%level\u0026#34;,\n                        \u0026#34;service\u0026#34;: \u0026#34;${springAppName:-}\u0026#34;,\n                        \u0026#34;trace\u0026#34;: \u0026#34;%X{traceId:-}\u0026#34;,\n                        \u0026#34;span\u0026#34;: \u0026#34;%X{spanId:-}\u0026#34;,\n                        \u0026#34;pid\u0026#34;: \u0026#34;${PID:-}\u0026#34;,\n                        \u0026#34;thread\u0026#34;: \u0026#34;%thread\u0026#34;,\n                        \u0026#34;class\u0026#34;: \u0026#34;%logger{40}\u0026#34;,\n                        \u0026#34;rest\u0026#34;: \u0026#34;%message\u0026#34;\n                        }\n                    \u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n                \u003cspan class=\"nt\"\u003e\u0026lt;/pattern\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;/providers\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/encoder\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/appender\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;root\u003c/span\u003e \u003cspan class=\"na\"\u003elevel=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;INFO\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;appender-ref\u003c/span\u003e \u003cspan class=\"na\"\u003eref=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;console\u0026#34;\u003c/span\u003e\u003cspan class=\"nt\"\u003e/\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!-- uncomment this to have also JSON logs --\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!--\u0026lt;appender-ref ref=\u0026#34;logstash\u0026#34;/\u0026gt;--\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"c\"\u003e\u0026lt;!--\u0026lt;appender-ref ref=\u0026#34;flatfile\u0026#34;/\u0026gt;--\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;/root\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/configuration\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e即Logback配置文件。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e将应用程序的信息以JSON格式记录到\u003ccode\u003ebuild/${spring.application.name}.json\u003c/code\u003e文件。\u003c/li\u003e\n\u003cli\u003e已经注释了两个额外的应用者：控制台和标准日志文件。\u003c/li\u003e\n\u003cli\u003e具有与上一节中介绍的相同的日志模式。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如果你使用一个自定义的\u003ccode\u003elogback-spring.xml\u003c/code\u003e，你必须在\u003ccode\u003ebootstrap\u003c/code\u003e中传递\u003ccode\u003espring.application.name\u003c/code\u003e，而不是\u003ccode\u003eapplication\u003c/code\u003e属性文件。否则，你的自定义logback文件就不能正确读取该属性。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"47-接下来要读的内容\"\u003e4.7. 接下来要读的内容\u003c/h3\u003e\n\u003cp\u003e如果你想进一步了解本节讨论的任何一个类，你可以直接浏览\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth/tree/main\"\u003e源代码\u003c/a\u003e。如果你有具体问题，请看\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#howto\"\u003e如何做\u003c/a\u003e部分。\u003c/p\u003e\n\u003cp\u003e如果你对Spring Cloud Sleuth的核心功能感到满意，你可以继续阅读\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#integrations.adoc\"\u003eSpring Cloud Sleuth的集成\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"5-how-to-guides\"\u003e5. “How-to” Guides\u003c/h2\u003e\n\u003cp\u003e本节为使用Spring Cloud Sleuth时经常出现的一些常见的 \u0026ldquo;如何做\u0026hellip;\u0026hellip; \u0026ldquo;问题提供答案。它的覆盖面并不全面，但确实涵盖了相当多的内容。\u003c/p\u003e\n\u003cp\u003e如果你有一个特定的问题，而我们在这里没有涉及，你可能想去看看\u003ca href=\"https://stackoverflow.com/tags/spring-cloud-sleuth\"\u003estackoverflow.com\u003c/a\u003e，看看是否有人已经提供了答案。Stack Overflow也是一个提出新问题的好地方（请使用\u003ccode\u003espring-cloud-sleuth\u003c/code\u003e标签）。\u003c/p\u003e\n\u003cp\u003e我们也非常乐意扩展这个部分。如果你想添加一个 \u0026ldquo;如何做\u0026rdquo;，请向我们发送一个\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth/tree/main\"\u003e拉动请求\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"51-如何用brave设置sleuth\"\u003e5.1. 如何用Brave设置Sleuth？\u003c/h3\u003e\n\u003cp\u003e将Sleuth starter 添加到classpath。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"52-如何通过http设置sleuth与brave--zipkin\"\u003e5.2. 如何通过HTTP设置Sleuth与Brave \u0026amp; Zipkin？\u003c/h3\u003e\n\u003cp\u003e将Sleuth启动器和Zipkin添加到classpath。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-sleuth-zipkin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"53-如何通过信息传递将sleuth与brave--zipkin设置在一起\"\u003e5.3. 如何通过信息传递将Sleuth与Brave \u0026amp; Zipkin设置在一起？\u003c/h2\u003e\n\u003cp\u003e如果你想使用RabbitMQ、Kafka或ActiveMQ而不是HTTP，请添加\u003ccode\u003espring-rabbit\u003c/code\u003e、\u003ccode\u003espring-kafka\u003c/code\u003e或\u003ccode\u003eorg.apache.activemq:activemq-client\u003c/code\u003e依赖项。默认的目标名称是\u003ccode\u003eZipkin\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果使用Kafka，你必须添加Kafka依赖性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-sleuth-zipkin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.kafka\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-kafka\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e另外，你需要相应地设置\u003ccode\u003espring.zipkin.sender.type\u003c/code\u003e属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.sender.type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ekafka\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你想在RabbitMQ上使用Sleuth，请添加\u003ccode\u003espring-cloud-starter-sleuth\u003c/code\u003e、\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e和\u003ccode\u003espring-rabbit\u003c/code\u003e依赖项。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-sleuth-zipkin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.amqp\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-rabbit\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你想在ActiveMQ上使用Sleuth，请添加\u003ccode\u003espring-cloud-starter-sleuth\u003c/code\u003e、\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e和\u003ccode\u003eactivemq-client\u003c/code\u003e依赖项。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependencyManagement\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;dependencies\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-dependencies\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e${release.train-version}\u003cspan class=\"nt\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;type\u0026gt;\u003c/span\u003epom\u003cspan class=\"nt\"\u003e\u0026lt;/type\u0026gt;\u003c/span\u003e\n              \u003cspan class=\"nt\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eimport\u003cspan class=\"nt\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n          \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n      \u003cspan class=\"nt\"\u003e\u0026lt;/dependencies\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependencyManagement\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-sleuth\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-sleuth-zipkin\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.apache.activemq\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003eactivemq-client\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e另外，你需要相应地设置\u003ccode\u003espring.zipkin.sender.type\u003c/code\u003e属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003espring.zipkin.sender.type\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eactivemq\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"54-如何在一个外部系统中看到span\"\u003e5.4. 如何在一个外部系统中看到Span？\u003c/h3\u003e\n\u003cp\u003e如果你看不到Span被报告给外部系统（如Zipkin），那么很可能是由于以下原因。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#not-sampled-span\"\u003e你的Span没有被采样\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#missing-dependency\"\u003e你忘记添加向外部系统报告的依赖关系（如\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e）\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#connection-misconfiguration\"\u003e你错误地配置了与外部系统的连接\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"541-你的span没有被采样\"\u003e5.4.1. 你的Span没有被采样\u003c/h4\u003e\n\u003cp\u003e为了检查跨度是否没有被采样，只要看看可导出的标志是否被设置就可以了。让我们看一下下面的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e2020-10-21 12:01:16.285  INFO [backend,0b6aaf642574edd3,0b6aaf642574edd3,true] 289589 --- [nio-9000-exec-1] Example              : Hello world!\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果\u003ccode\u003e[backend,0b6aaf642574edd3,0b6aaf642574edd3,true]\u003c/code\u003e部分的布尔值为 \u0026ldquo;true\u0026rdquo;，意味着该跨度正在被采样，应该被报告。\u003c/p\u003e\n\u003ch4 id=\"542-缺少依赖性\"\u003e5.4.2. 缺少依赖性\u003c/h4\u003e\n\u003cp\u003e直到Sleuth 3.0.0，\u003ccode\u003espring-cloud-starter-zipkin\u003c/code\u003e这个依赖项包括\u003ccode\u003espring-cloud-starter-sleuth\u003c/code\u003e依赖项和\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e依赖项。在3.0.0版本中，\u003ccode\u003espring-cloud-starter-zipkin\u003c/code\u003e被移除，所以你需要把它改为\u003ccode\u003espring-cloud-sleuth-zipkin\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"543-连接错误配置\"\u003e5.4.3. 连接错误配置\u003c/h4\u003e\n\u003cp\u003e仔细检查远程系统地址是否正确（例如\u003ccode\u003espring.zipkin.baseUrl\u003c/code\u003e），如果试图通过broker进行通信，你的broker连接设置正确。\u003c/p\u003e\n\u003ch3 id=\"55-如何使resttemplatewebclient等工作\"\u003e5.5. 如何使RestTemplate、WebClient等。工作？\u003c/h3\u003e\n\u003cp\u003e如果你观察到追踪上下文没有被传播，那么原因是以下之一。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e我们没有对指定的库进行检测\u003c/li\u003e\n\u003cli\u003e我们正在检测该库，但是你错误地配置了设置。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果缺乏检测能力，请提交\u003ca href=\"https://github.com/spring-cloud/spring-cloud-sleuth/issues\"\u003e问题\u003c/a\u003e，要求增加这种检测。\u003c/p\u003e\n\u003cp\u003e在配置错误的情况下，请确保你用来通信的客户端是一个Spring Bean。如果你通过 \u003ccode\u003enew\u003c/code\u003e 操作符手动创建客户端，那么仪表功能将不起作用。\u003c/p\u003e\n\u003cp\u003e工具化工作的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.context.annotation.Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.web.client.RestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"nf\"\u003emyRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Service\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eMyService\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erestTemplate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003emakeACall\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetForObject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e仪表盘不起作用的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Service\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyService\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003emakeACall\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// This will not work because RestTemplate is not a bean\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003egetForObject\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;http://example.com\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"56-如何在http服务器响应中添加头信息\"\u003e5.6. 如何在HTTP服务器响应中添加头信息？\u003c/h3\u003e\n\u003cp\u003e注册一个\u003ccode\u003eHttpResponseParser\u003c/code\u003e类型的bean，其名称为\u003ccode\u003eHttpServerResponseParser.NAME\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.cloud.sleuth.http.HttpResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.cloud.sleuth.instrument.web.HttpServerResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.context.annotation.Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eorg.springframework.context.annotation.Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServerResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpResponseParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eaddHeader\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;MyCustom\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Header\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e你的Span需要被取样，以便解析器工作。这意味着你需要能够将Span导出到例如Zipkin。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"57-如何自定义http客户端的span\"\u003e5.7. 如何自定义HTTP客户端的Span？\u003c/h3\u003e\n\u003cp\u003e注册一个\u003ccode\u003eHttpRequestParser\u003c/code\u003e类型的Bean，其名称为\u003ccode\u003eHttpClientRequestParser.NAME\u003c/code\u003e，以便为请求方添加定制。注册一个\u003ccode\u003eHttpResponseParser\u003c/code\u003e类型的Bean，其名称为\u003ccode\u003eHttpClientRequestParser.NAME\u003c/code\u003e，以便为响应端添加定制功能。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eClientParserConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// example for Feign\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpClientRequestParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpRequestParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpClientRequestParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emethod\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ClientRequest\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eRequest\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ClientRequestFeign\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehttpMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e// example for Feign\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpClientResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpResponseParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpClientResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ClientResponse\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eResponse\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efeign\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ClientResponseFeign\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e()));\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"58-如何自定义http服务器的span\"\u003e5.8. 如何自定义HTTP服务器的Span？\u003c/h3\u003e\n\u003cp\u003e注册一个\u003ccode\u003eHttpRequestParser\u003c/code\u003e类型的Bean，其名称为\u003ccode\u003eHttpServerRequestParser.NAME\u003c/code\u003e，以便为请求方添加定制。注册一个\u003ccode\u003eHttpResponseParser\u003c/code\u003e类型的Bean，其名称为\u003ccode\u003eHttpServerResponseParser.NAME\u003c/code\u003e，以便为响应端添加定制功能。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eServerParserConfiguration\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServerRequestParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpRequestParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpRequestParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ServerRequest\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServletRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eHttpServletRequest\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpServletRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ServerRequestServlet\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereq\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetMethod\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServerResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eHttpResponseParser\u003c/span\u003e \u003cspan class=\"nf\"\u003emyHttpResponseParser\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e            \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ServerResponse\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Tag\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"n\"\u003eObject\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eresponse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e \u003cspan class=\"k\"\u003einstanceof\u003c/span\u003e \u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e \u003cspan class=\"n\"\u003eresp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHttpServletResponse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"c1\"\u003e// Span customization\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e                \u003cspan class=\"n\"\u003espan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ServerResponseServlet\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003evalueOf\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eresp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetStatus\u003c/span\u003e\u003cspan class=\"o\"\u003e()));\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e你的Span需要被取样，以便解析器工作。这意味着你需要能够将跨度导出到例如Zipkin。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"59-如何在日志中看到应用程序的名称\"\u003e5.9. 如何在日志中看到应用程序的名称？\u003c/h3\u003e\n\u003cp\u003e假设你没有改变默认的日志格式，在\u003ccode\u003ebootstrap.yml\u003c/code\u003e中设置\u003ccode\u003espring.application.name\u003c/code\u003e属性，而不是在\u003ccode\u003eapplication.yml\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e有了新的Spring Cloud配置Bootstrap，这应该不再需要了，因为不再有Bootstrap Context。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"510-how-to-change-the-context-propagation-mechanism\"\u003e5.10. How to Change The Context Propagation Mechanism?\u003c/h3\u003e\n\u003cp\u003e要使用提供的默认值，你可以设置\u003ccode\u003espring.sleuth.propagation.type\u003c/code\u003e属性。该值可以是一个列表，在这种情况下，你将传播更多的跟踪头信息。\u003c/p\u003e\n\u003cp\u003e对于Brave，我们支持\u003ccode\u003eAWS\u003c/code\u003e、\u003ccode\u003eB3\u003c/code\u003e、\u003ccode\u003eW3C\u003c/code\u003e的传播类型。\u003c/p\u003e\n\u003cp\u003e如果你想提供一个自定义的传播机制，将\u003ccode\u003espring.sleuth.propagation.type\u003c/code\u003e属性设置为\u003ccode\u003eCUSTOM\u003c/code\u003e并实现你自己的bean（对于Brave来说是\u003ccode\u003ePropagation.Factory\u003c/code\u003e）。下面你可以找到这些例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomPropagator\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003ePropagation\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eFactory\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003ePropagation\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eArrays\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003easList\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;myCustomTraceId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomSpanId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eInjector\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003einjector\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSetter\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esetter\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"n\"\u003esetter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomTraceId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etraceIdString\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n            \u003cspan class=\"n\"\u003esetter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomSpanId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espanIdString\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e};\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eExtractor\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eextractor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eGetter\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eR\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003egetter\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceContextOrSamplingFlags\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eTraceContext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etraceId\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHexCodec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elowerHexToUnsignedLong\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomTraceId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003espanId\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHexCodec\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003elowerHexToUnsignedLong\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egetter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;myCustomSpanId\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e))).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eK\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ePropagation\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eK\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eKeyFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eK\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ekeyFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eStringPropagationAdapter\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ekeyFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"511-如何实现我自己的追踪器\"\u003e5.11. 如何实现我自己的追踪器？\u003c/h3\u003e\n\u003cp\u003eSpring Cloud Sleuth API包含所有需要由追踪器实现的必要接口。该项目带有OpenZipkin Brave的实现。你可以通过查看\u003ccode\u003eorg.springframework.cloud.sleuth.brave.bridge\u003c/code\u003e模块来检查这两个追踪器是如何与Sleuth的API连接的。\u003c/p\u003e\n\u003ch2 id=\"6-spring-cloud-sleuth的定制\"\u003e6. Spring Cloud Sleuth的定制\u003c/h2\u003e\n\u003cp\u003e在本节中，我们将介绍如何定制Spring Cloud Sleuth的各个部分。\u003c/p\u003e\n\u003ch3 id=\"61-异步通信\"\u003e6.1. 异步通信\u003c/h3\u003e\n\u003cp\u003e在本节中，我们将介绍如何用Spring Cloud Sleuth定制异步通信。\u003c/p\u003e\n\u003ch4 id=\"611-async注解的方法\"\u003e6.1.1. @Async注解的方法\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e在Spring Cloud Sleuth中，我们对异步相关的组件进行检测，以便在线程之间传递跟踪信息。你可以通过将\u003ccode\u003espring.sleuth.async.enabled\u003c/code\u003e的值设置为\u003ccode\u003efalse\u003c/code\u003e来禁用这种行为。\u003c/p\u003e\n\u003cp\u003e如果你用\u003ccode\u003e@Async\u003c/code\u003e来注释你的方法，我们会自动修改现有的Span，如下所示。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e如果方法被注解为\u003ccode\u003e@SpanName\u003c/code\u003e，注解的值就是Span的名字。\u003c/li\u003e\n\u003cli\u003e如果该方法没有用\u003ccode\u003e@SpanName\u003c/code\u003e注释，那么Span的名字就是被注释的方法的名字。\u003c/li\u003e\n\u003cli\u003eSpan被标记为该方法的类名和方法名。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e由于我们正在修改现有的span，如果你想保持它的原始名称（例如通过接收HTTP请求创建的span），你应该用\u003ccode\u003e@Async\u003c/code\u003e注解的方法包裹你的\u003ccode\u003e@NewSpan\u003c/code\u003e注解或者手动创建一个新的span。\u003c/p\u003e\n\u003ch4 id=\"612-scheduled-注释的方法\"\u003e6.1.2. @Scheduled 注释的方法\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e在Spring Cloud Sleuth中，我们对预定方法的执行进行了检测，这样追踪信息就会在线程之间传递。你可以通过将\u003ccode\u003espring.sleuth.schedulated.enabled\u003c/code\u003e的值设置为\u003ccode\u003efalse\u003c/code\u003e来禁用这种行为。\u003c/p\u003e\n\u003cp\u003e如果你用\u003ccode\u003e@Scheduled\u003c/code\u003e来注释你的方法，我们会自动创建一个新的跨度，具有以下特征。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003espan的名字是被注释的方法的名字。\u003c/li\u003e\n\u003cli\u003espan被标记为该方法的类名和方法名。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果你想跳过对某些\u003ccode\u003e@Scheduled\u003c/code\u003e注释类的span创建，你可以将\u003ccode\u003espring.sleuth.schedulated.skipPattern\u003c/code\u003e设置为正则表达式，与\u003ccode\u003e@Scheduled\u003c/code\u003e注释类的完全合格名称相匹配。\u003c/p\u003e\n\u003ch4 id=\"613-executor-executorservice-和-scheduledexecutorservice\"\u003e6.1.3. Executor, ExecutorService, 和 ScheduledExecutorService\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们提供\u003ccode\u003eLazyTraceExecutor\u003c/code\u003e，\u003ccode\u003eTraceableExecutorService\u003c/code\u003e，和\u003ccode\u003eTraceableScheduledExecutorService\u003c/code\u003e。这些实现在每次提交、调用或安排新任务时都会创建跨度。\u003c/p\u003e\n\u003cp\u003e下面的例子显示了在使用\u003ccode\u003eCompletableFuture\u003c/code\u003e时如何用\u003ccode\u003eTraceableExecutorService\u003c/code\u003e传递跟踪信息。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eCompletableFuture\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eLong\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecompletableFuture\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCompletableFuture\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esupplyAsync\u003c/span\u003e\u003cspan class=\"o\"\u003e(()\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// perform some logic\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003e1_000_000L\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e},\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceableExecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutorService\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// \u0026#39;calculateTax\u0026#39; explicitly names the span - this param is optional\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eSleuth不能与\u003ccode\u003eparallelStream()\u003c/code\u003e一起工作。如果你想让追踪信息通过流传播，你必须使用\u003ccode\u003esupplyAsync(..)\u003c/code\u003e的方法，如前面所示。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果有一些实现了\u003ccode\u003eExecutor\u003c/code\u003e接口的Bean被你排除在span创建之外，你可以使用\u003ccode\u003espring.sleuth.async.ignored-beans\u003c/code\u003e属性，你可以提供一个Bean名称的列表。\u003c/p\u003e\n\u003cp\u003e你可以通过将\u003ccode\u003espring.sleuth.async.enabled\u003c/code\u003e的值设置为\u003ccode\u003efalse\u003c/code\u003e来禁用这种行为。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e自定义Executors\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e有时，你需要设置一个自定义的 \u003ccode\u003eAsyncExecutor\u003c/code\u003e 实例。下面的例子展示了如何设置这样一个自定义的\u003ccode\u003eExecutor\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableAutoConfiguration\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@EnableAsync\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// add the infrastructure role to ensure that the bean gets auto-proxied\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"nd\"\u003e@Role\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBeanDefinition\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eROLE_INFRASTRUCTURE\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomExecutorConfig\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncConfigurerSupport\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eBeanFactory\u003c/span\u003e \u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eExecutor\u003c/span\u003e \u003cspan class=\"nf\"\u003egetAsyncExecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eThreadPoolTaskExecutor\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eThreadPoolTaskExecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// CUSTOMIZE HERE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetCorePoolSize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetMaxPoolSize\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetQueueCapacity\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetThreadNamePrefix\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;MyExecutor-\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// DON\u0026#39;T FORGET TO INITIALIZE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einitialize\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eLazyTraceExecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eexecutor\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e为了确保你的配置得到后处理，记得在你的\u003ccode\u003e@Configuration\u003c/code\u003e类上添加\u003ccode\u003e@Role(BeanDefinition.ROLE_INFRASTRUCTURE)\u003c/code\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"62-http客户端集成\"\u003e6.2. HTTP客户端集成\u003c/h3\u003e\n\u003cp\u003e这一部分的功能可以通过设置\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e属性值为\u003ccode\u003efalse\u003c/code\u003e来禁用。\u003c/p\u003e\n\u003ch4 id=\"621-同步-rest-template\"\u003e6.2.1. 同步 Rest Template\u003c/h4\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们注入一个\u003ccode\u003eRestTemplate\u003c/code\u003e拦截器，以确保所有的追踪信息被传递给请求。每次调用时，都会创建一个新的Span。它在收到响应时被关闭。为了阻止同步的\u003ccode\u003eRestTemplate\u003c/code\u003e功能，将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你必须把\u003ccode\u003eRestTemplate\u003c/code\u003e注册为一个Bean，这样拦截器才会被注入。如果你用 \u003ccode\u003enew\u003c/code\u003e 关键字创建了一个\u003ccode\u003eRestTemplate\u003c/code\u003e实例，仪表就不会起作用。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4 id=\"622-异步-rest-template\"\u003e6.2.2. 异步 Rest Template\u003c/h4\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e从Sleuth \u003ccode\u003e2.0.0\u003c/code\u003e开始，我们不再注册\u003ccode\u003eAsyncRestTemplate\u003c/code\u003e类型的bean。这取决于你是否能创建这样一个Bean。然后我们对它进行检测。\u003c/p\u003e\n\u003cp\u003e要阻止 \u003ccode\u003eAsyncRestTemplate\u003c/code\u003e 功能，将\u003ccode\u003espring.sleuth.web.async.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。要禁止创建默认的\u003ccode\u003eTraceAsyncClientHttpRequestFactoryWrapper\u003c/code\u003e，请将\u003ccode\u003espring.sleuth.web.async.client.factory.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。如果你根本不想创建\u003ccode\u003eAsyncRestClient\u003c/code\u003e，请将\u003ccode\u003espring.sleuth.web.async.client.template.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMultiple Asynchronous Rest Templates\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e有时你需要使用异步Rest模板的多个实现。在下面的片段中，你可以看到一个例子，说明如何设置这样一个自定义的\u003ccode\u003eAsyncRestTemplate\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eTestConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;customAsyncRestTemplate\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncRestTemplate\u003c/span\u003e \u003cspan class=\"nf\"\u003etraceAsyncRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncRestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003easyncClientFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003eclientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eClientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"nf\"\u003eclientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eClientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"n\"\u003eclientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomClientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// CUSTOMIZE HERE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eclientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"n\"\u003eAsyncClientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"nf\"\u003easyncClientFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eAsyncClientHttpRequestFactory\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCustomAsyncClientHttpRequestFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// CUSTOMIZE HERE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003efactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eWebClient\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们注入了一个\u003ccode\u003eExchangeFilterFunction\u003c/code\u003e实现，它创建了一个跨度，并通过成功和错误的回调，负责关闭客户端的跨度。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你必须把\u003ccode\u003eWebClient\u003c/code\u003e注册为一个Bean，这样才能应用追踪工具。如果你用 \u003ccode\u003enew\u003c/code\u003e 关键字创建一个\u003ccode\u003eWebClient\u003c/code\u003e实例，追踪工具就不会工作。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTraverson\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e如果你使用\u003ca href=\"https://docs.spring.io/spring-hateoas/docs/current/reference/html/#client.traverson\"\u003eTraverson\u003c/a\u003e库，你可以把\u003ccode\u003eRestTemplate\u003c/code\u003e作为一个bean注入你的Traverson对象。由于\u003ccode\u003eRestTemplate\u003c/code\u003e已经被拦截了，你可以在你的客户端获得对追踪的完全支持。下面的伪代码显示了如何做到这一点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Autowired\u003c/span\u003e \u003cspan class=\"n\"\u003eRestTemplate\u003c/span\u003e \u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eTraverson\u003c/span\u003e \u003cspan class=\"n\"\u003etraverson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraverson\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eURI\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;https://some/address\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eMediaType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eAPPLICATION_JSON\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMediaType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eAPPLICATION_JSON_UTF8\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003esetRestOperations\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erestTemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// use Traverson\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eApache HttpClientBuilder 和 HttpAsyncClientBuilder\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对\u003ccode\u003eHttpClientBuilder\u003c/code\u003e和\u003ccode\u003eHttpAsyncClientBuilder\u003c/code\u003e进行检测，以便追踪上下文被注入到发送的请求中。\u003c/p\u003e\n\u003cp\u003e要阻止这些功能，请将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNetty HttpClient\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们使用Netty的\u003ccode\u003eHttpClient\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你必须把\u003ccode\u003eHttpClient\u003c/code\u003e注册为一个Bean，这样才会有仪器分析。如果你用 \u003ccode\u003enew\u003c/code\u003e 关键字创建一个\u003ccode\u003eHttpClient\u003c/code\u003e实例，仪器分析就不会发生。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUserInfoRestTemplateCustomizer\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们使用Spring Security的\u003ccode\u003eUserInfoRestTemplateCustomizer\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.web.client.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"63-http服务器集成\"\u003e6.3. HTTP服务器集成\u003c/h3\u003e\n\u003cp\u003e这一部分的功能可以通过设置\u003ccode\u003espring.sleuth.web.enabled\u003c/code\u003e属性的值等于\u003ccode\u003efalse\u003c/code\u003e来禁用。\u003c/p\u003e\n\u003ch4 id=\"631-http-filter\"\u003e6.3.1. HTTP Filter\u003c/h4\u003e\n\u003cp\u003e这个功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e通过\u003ccode\u003eTracingFilter\u003c/code\u003e，所有被采样的传入请求都会导致创建一个Span。你可以通过设置\u003ccode\u003espring.sleuth.web.skipPattern\u003c/code\u003e属性来配置你想跳过的URI。如果你在classpath上有\u003ccode\u003eManagementServerProperties\u003c/code\u003e，它的\u003ccode\u003econtextPath\u003c/code\u003e值会被附加到所提供的跳过模式上。如果你想重复使用Sleuth的默认跳过模式，只需添加你自己的模式，通过使用\u003ccode\u003espring.sleuth.web.extraSkipPattern\u003c/code\u003e传递这些模式。\u003c/p\u003e\n\u003cp\u003e默认情况下，所有的spring boot执行器端点都被自动添加到跳过模式中。如果你想禁用这种行为，请将\u003ccode\u003espring.sleuth.web.ignore-auto-configured-skip-patterns\u003c/code\u003e设为\u003ccode\u003etrue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e要改变跟踪过滤器的注册顺序，请设置\u003ccode\u003espring.sleuth.web.filter-order\u003c/code\u003e属性。\u003c/p\u003e\n\u003cp\u003e要禁用记录未捕获异常的过滤器，可以禁用\u003ccode\u003espring.sleuth.web.exception-throwing-filter-enabled\u003c/code\u003e属性。\u003c/p\u003e\n\u003ch4 id=\"632-handlerinterceptor\"\u003e6.3.2. HandlerInterceptor\u003c/h4\u003e\n\u003cp\u003e这个功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e由于我们希望span的名称是精确的，我们使用一个\u003ccode\u003eTraceHandlerInterceptor\u003c/code\u003e，它或者包裹一个现有的\u003ccode\u003eHandlerInterceptor\u003c/code\u003e，或者直接添加到现有的\u003ccode\u003eHandlerInterceptors\u003c/code\u003e列表中。\u003ccode\u003eTraceHandlerInterceptor\u003c/code\u003e为给定的\u003ccode\u003eHttpServletRequest\u003c/code\u003e添加一个特殊的请求属性。如果\u003ccode\u003eTracingFilter\u003c/code\u003e没有看到这个属性，它就会创建一个 \u0026ldquo;fallback\u0026rdquo; span，这是一个在服务器端创建的额外span，以便在UI中正确显示跟踪。如果发生这种情况，可能是缺少仪器。在这种情况下，请在Spring Cloud Sleuth中提交一个问题。\u003c/p\u003e\n\u003ch4 id=\"633-async-servlet-support\"\u003e6.3.3. Async Servlet support\u003c/h4\u003e\n\u003cp\u003e这个功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e如果你的控制器返回一个\u003ccode\u003eCallable\u003c/code\u003e或\u003ccode\u003eWebAsyncTask\u003c/code\u003e，Spring Cloud Sleuth会继续现有的跨度，而不是创建一个新的。\u003c/p\u003e\n\u003ch4 id=\"634-webflux-support\"\u003e6.3.4. WebFlux support\u003c/h4\u003e\n\u003cp\u003e这个功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e通过\u003ccode\u003eTraceWebFilter\u003c/code\u003e，所有被采样的传入请求都会产生一个Span。这个Span的名字是\u003ccode\u003ehttp:\u003c/code\u003e + 请求被发送到的路径。例如，如果请求被发送到\u003ccode\u003e/this/that\u003c/code\u003e，其名称就是\u003ccode\u003ehttp:/this/that\u003c/code\u003e。你可以通过使用\u003ccode\u003espring.sleuth.web.skipPattern\u003c/code\u003e属性来配置你想跳过的URI。如果你在classpath上有\u003ccode\u003eManagementServerProperties\u003c/code\u003e，它的\u003ccode\u003econtextPath\u003c/code\u003e值会被附加到所提供的跳过模式上。如果你想重复使用Sleuth的默认跳过模式，并附加你自己的模式，可以通过使用\u003ccode\u003espring.sleuth.web.extraSkipPattern\u003c/code\u003e来传递这些模式。\u003c/p\u003e\n\u003cp\u003e为了在性能和上下文传播方面达到最佳效果，我们建议你将\u003ccode\u003espring.sleuth.reactor.instrumation-type\u003c/code\u003e切换为\u003ccode\u003eMANUAL\u003c/code\u003e。为了在span的范围内执行代码，你可以调用\u003ccode\u003eWebFluxSleuthOperators.withSpanInScope\u003c/code\u003e。例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/simpleManual\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003esimpleManual\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edoOnEach\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWebFluxSleuthOperators\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpanInScope\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSignalType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eON_NEXT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esignal\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello from simple [{}]\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esignal\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e())));\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要改变追踪过滤器的注册顺序，请设置\u003ccode\u003espring.sleuth.web.filter-order\u003c/code\u003e属性。\u003c/p\u003e\n\u003ch3 id=\"64-messaging\"\u003e6.4. Messaging\u003c/h3\u003e\n\u003cp\u003e这一部分的功能可以通过设置\u003ccode\u003espring.sleuth.messaging.enabled\u003c/code\u003e属性值为\u003ccode\u003efalse\u003c/code\u003e来禁用。\u003c/p\u003e\n\u003ch4 id=\"641-spring-集成\"\u003e6.4.1. Spring 集成\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth与\u003ca href=\"https://projects.spring.io/spring-integration/\"\u003eSpring Integration\u003c/a\u003e集成。它为发布和订阅事件创建跨度。要禁用Spring集成工具，请将\u003ccode\u003espring.sleuth.integration.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你可以提供\u003ccode\u003espring.sleuth.integration.pattern\u003c/code\u003e模式来明确提供你想包括在追踪中的通道的名字。默认情况下，除了\u003ccode\u003ehystrixStreamOutput\u003c/code\u003e通道外，所有通道都被包括在内。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当使用\u003ccode\u003eExecutor\u003c/code\u003e构建Spring Integration\u003ccode\u003eIntegrationFlow\u003c/code\u003e时，你必须使用\u003ccode\u003eExecutor\u003c/code\u003e的未跟踪版本。用\u003ccode\u003eTraceableExecutorService\u003c/code\u003e装饰Spring Integration Executor通道会导致Span被不适当地关闭。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e如果你想自定义从消息头读取和写入追踪上下文的方式，你只需注册一些类型的Bean。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ePropagator.Setter\u0026lt;MessageHeaderAccessor\u0026gt;\u003c/code\u003e - 用于向消息写入头文件\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ePropagator.Getter\u0026lt;MessageHeaderAccessor\u0026gt;\u003c/code\u003e - 用于从消息中读取标题。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eSpring Integration Customization\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCustomizing messaging spans\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e为了改变默认的Span名称和标签，只需注册一个\u003ccode\u003eMessageSpanCustomizer\u003c/code\u003e类型的bean。你也可以覆盖现有的\u003ccode\u003eDefaultMessageSpanCustomizer\u003c/code\u003e来扩展现有行为。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Component\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyMessageSpanCustomizer\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eDefaultMessageSpanCustomizer\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomizeHandle\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e \u003cspan class=\"n\"\u003espanCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n              \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageChannel\u003c/span\u003e \u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustomizeHandle\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003espanCustomizer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;changedHandle\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;handleKey\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;handleValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;channelName\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echannelName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n      \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n      \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e \u003cspan class=\"nf\"\u003ecustomizeSend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSpan\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBuilder\u003c/span\u003e \u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n              \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageChannel\u003c/span\u003e \u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecustomizeSend\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;changedSend\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;sendKey\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;sendValue\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n                  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etag\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;channelName\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echannelName\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessageChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n      \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"642-spring-cloud-function和spring-cloud-stream\"\u003e6.4.2. Spring Cloud Function和Spring Cloud Stream\u003c/h4\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth可以检测Spring Cloud Function。实现的方法是提供一个以\u003ccode\u003eMessage\u003c/code\u003e 为参数的\u003ccode\u003eFunction\u003c/code\u003e、\u003ccode\u003eConsumer\u003c/code\u003e 或 \u003ccode\u003eSupplier\u003c/code\u003e，例如 \u003ccode\u003eFunction\u0026lt;Message\u0026lt;String\u0026gt;, Message\u0026lt;Integer\u0026gt;\u0026gt;\u003c/code\u003e。如果类型不是 \u003ccode\u003eMessage\u003c/code\u003e，那么将不会进行仪器分析。在处理基于Reactor的流时，开箱即用的仪器不会发生，例如\u003ccode\u003eFunction\u0026lt;Flux\u0026lt;Message\u0026lt;String\u0026gt;\u0026gt;\u003c/code\u003e, \u003ccode\u003eFlux\u0026lt;Message\u0026lt;Integer\u0026gt;\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e由于Spring Cloud Stream重用了Spring Cloud Function，你将获得开箱即用的仪器。\u003c/p\u003e\n\u003cp\u003e你可以通过将\u003ccode\u003espring.sleuth.function.enabled\u003c/code\u003e的值设置为\u003ccode\u003efalse\u003c/code\u003e来禁用这种行为。\u003c/p\u003e\n\u003cp\u003e为了与 reactive Stream函数一起工作，你可以利用\u003ccode\u003eMessagingSleuthOperators\u003c/code\u003e实用类，它允许你操作输入和输出的消息，以便继续跟踪上下文，并在跟踪上下文中执行自定义代码。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSimpleReactiveManualFunction\u003c/span\u003e \u003cspan class=\"kd\"\u003eimplements\u003c/span\u003e \u003cspan class=\"n\"\u003eFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;,\u003c/span\u003e \u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003estatic\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eLogger\u003c/span\u003e \u003cspan class=\"n\"\u003elog\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eLoggerFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetLogger\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSimpleReactiveFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\n    \u003cspan class=\"kd\"\u003eprivate\u003c/span\u003e \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eBeanFactory\u003c/span\u003e \u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003eSimpleReactiveManualFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBeanFactory\u003c/span\u003e \u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFlux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003einput\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMessagingSleuthOperators\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003easFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eandThen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMessagingSleuthOperators\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpanInScope\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estringMessage\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n                    \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello from simple manual [{}]\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003estringMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n                    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003estringMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e})).\u003c/span\u003e\u003cspan class=\"na\"\u003eandThen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMessagingSleuthOperators\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eafterMessageHandled\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eandThen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreateMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetPayload\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetHeaders\u003c/span\u003e\u003cspan class=\"o\"\u003e()))\u003c/span\u003e\n                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eandThen\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emsg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMessagingSleuthOperators\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ehandleOutputMessage\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ebeanFactory\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emsg\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003eapply\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"643-spring-rabbitmq\"\u003e6.4.3. Spring RabbitMq\u003c/h4\u003e\n\u003cp\u003e他的功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对\u003ccode\u003eRabbitTemplate\u003c/code\u003e进行检测，这样追踪头就会被注入消息中。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.messaging.rabbit.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"644-spring-kafka\"\u003e6.4.4. Spring Kafka\u003c/h4\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对Spring Kafka的 \u003ccode\u003eProducerFactory\u003c/code\u003e 和 \u003ccode\u003eConsumerFactory\u003c/code\u003e 进行检测，这样追踪头就会被注入创建的Spring Kafka的 \u003ccode\u003eProducer\u003c/code\u003e 和 \u003ccode\u003eConsumer\u003c/code\u003e 中。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.messaging.kafka.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"645-spring-kafka-streams\"\u003e6.4.5. Spring Kafka Streams\u003c/h4\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对\u003ccode\u003eKafkaStreams``KafkaClientSupplier\u003c/code\u003e进行检测，这样追踪头就会被注入到\u003ccode\u003eProducer\u003c/code\u003e和\u003ccode\u003eConsumer\u003c/code\u003es。\u003ccode\u003eKafkaStreamsTracing\u003c/code\u003ebean允许通过额外的\u003ccode\u003eTransformerSupplier\u003c/code\u003e和\u003ccode\u003eProcessorSupplier\u003c/code\u003e方法进行进一步追踪。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.messaging.kafka.streams.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch4 id=\"646-spring-jms\"\u003e6.4.6. Spring JMS\u003c/h4\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们对\u003ccode\u003eJmsTemplate\u003c/code\u003e进行分析，以便将追踪的头信息注入到消息中。我们还支持消费者方面的\u003ccode\u003e@JmsListener\u003c/code\u003e注解方法。\u003c/p\u003e\n\u003cp\u003e要阻止这个功能，请将\u003ccode\u003espring.sleuth.messaging.jms.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e我们不支持JMS的baggage传播\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"65-openfeign\"\u003e6.5. OpenFeign\u003c/h3\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e默认情况下，Spring Cloud Sleuth通过\u003ccode\u003eTraceFeignClientAutoConfiguration\u003c/code\u003e提供与Feign的集成。你可以通过设置\u003ccode\u003espring.sleuth.feign.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来完全禁用它。如果你这样做，就不会有任何与Feign相关的检测发生。\u003c/p\u003e\n\u003cp\u003e部分Feign工具化是通过\u003ccode\u003eFeignBeanPostProcessor\u003c/code\u003e完成的。你可以通过设置\u003ccode\u003espring.sleuth.feign.processor.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来禁用它。如果你把它设置为 \u003ccode\u003efalse\u003c/code\u003e，Spring Cloud Sleuth就不会对你的任何自定义Feign组件进行检测。然而，所有默认的检测仍然存在。\u003c/p\u003e\n\u003ch3 id=\"66-opentracing\"\u003e6.6. OpenTracing\u003c/h3\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth与\u003ca href=\"https://opentracing.io/\"\u003eOpenTracing\u003c/a\u003e兼容。如果你在classpath上有OpenTracing，我们会自动注册OpenTracing的\u003ccode\u003eTracer\u003c/code\u003ebean。如果你想禁用它，请将\u003ccode\u003espring.sleuth.opentracing.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"67-quartz\"\u003e6.7. Quartz\u003c/h3\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们通过向quartz 添加Job/Trigge来检测Quartz Scheduler。\u003c/p\u003e\n\u003cp\u003e要关闭该功能，请将\u003ccode\u003espring.sleuth.quartz.enabled\u003c/code\u003e属性设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"68-reactor\"\u003e6.8. Reactor\u003c/h3\u003e\n\u003cp\u003e该功能适用于所有追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们有以下基于reactor的应用程序的仪器化模式，可以通过\u003ccode\u003espring.sleuth.reactor.instrumation-type\u003c/code\u003e属性来设置。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eDECORATE_QUEUES\u003c/code\u003e - 通过新的Reactor\u003ca href=\"https://github.com/reactor/reactor-core/pull/2566\"\u003e队列包装机制\u003c/a\u003e (Reactor 3.4.3)，我们对Reactor切换线程的方式进行仪表化。这将导致与\u003ccode\u003eON_EACH\u003c/code\u003e的功能相同，对性能影响较小。\u003c/li\u003e\n\u003cli\u003e`DECORATE_ON_EACH'\u0026ndash;将每个Reactor操作者包裹在一个跟踪表示中。在大多数情况下会传递跟踪上下文。这种模式可能会导致性能急剧下降。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eDECORATE_ON_LAST\u003c/code\u003e - 在跟踪表示中包装最后一个Reactor操作符。在某些情况下会传递跟踪上下文，因此访问MDC上下文可能不工作。这种模式可能导致中等程度的性能下降。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMANUAL\u003c/code\u003e - 以最不具侵略性的方式包装每个Reactor，不传递跟踪上下文。这取决于用户的操作。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e目前默认的是\u003ccode\u003eON_EACH\u003c/code\u003e，因为向后兼容的原因，但是我们鼓励用户迁移到\u003ccode\u003eMANUAL\u003c/code\u003e工具，从\u003ccode\u003eWebFluxSleuthOperators\u003c/code\u003e和\u003ccode\u003eMessagingSleuthOperators\u003c/code\u003e中获益。性能的提高是巨大的。\u003c/p\u003e\n\u003cp\u003eExample\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@GetMapping\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/simpleManual\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003esimpleManual\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMono\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ejust\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003etoUpperCase\u003c/span\u003e\u003cspan class=\"o\"\u003e).\u003c/span\u003e\u003cspan class=\"na\"\u003edoOnEach\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWebFluxSleuthOperators\u003c/span\u003e\n            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ewithSpanInScope\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSignalType\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eON_NEXT\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esignal\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003elog\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003einfo\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello from simple [{}]\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esignal\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eget\u003c/span\u003e\u003cspan class=\"o\"\u003e())));\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"69-redis\"\u003e6.9. Redis\u003c/h3\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003e我们将\u003ccode\u003etracing\u003c/code\u003e属性设置为Lettuce\u003ccode\u003eClientResources\u003c/code\u003e实例，以启用Lettuce中内置的Brave追踪功能。要禁用Redis支持，将\u003ccode\u003espring.sleuth.redis.enabled\u003c/code\u003e属性设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"610-runnable-and-callable\"\u003e6.10. Runnable and Callable\u003c/h3\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e如果你把你的逻辑包在\u003ccode\u003eRunnable\u003c/code\u003e或\u003ccode\u003eCallable\u003c/code\u003e中，你可以把这些类包在它们的Sleuth代表中，如下面\u003ccode\u003eRunnable\u003c/code\u003e的例子所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"n\"\u003erunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003erun\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// do some work\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;spanNameFromToStringMethod\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// Manual `TraceRunnable` creation with explicit \u0026#34;calculateTax\u0026#34; Span name\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eRunnable\u003c/span\u003e \u003cspan class=\"n\"\u003etraceRunnable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceRunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espanNamer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003erunnable\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的例子显示了如何为\u003ccode\u003eCallable\u003c/code\u003e做到这一点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"n\"\u003eCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003ecallable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003ecall\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eException\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003esomeLogic\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nd\"\u003e@Override\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"nf\"\u003etoString\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;spanNameFromToStringMethod\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e};\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// Manual `TraceCallable` creation with explicit \u0026#34;calculateTax\u0026#34; Span name\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"n\"\u003eCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etraceCallable\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eTraceCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;(\u003c/span\u003e\u003cspan class=\"n\"\u003etracer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003espanNamer\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecallable\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;calculateTax\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这样，你就能确保每次执行时都能创建和关闭一个新的Span。\u003c/p\u003e\n\u003ch3 id=\"611-rpc\"\u003e6.11. RPC\u003c/h3\u003e\n\u003cp\u003e这个功能适用于Brave追踪器的实现。\u003c/p\u003e\n\u003cp\u003eSleuth自动配置了\u003ccode\u003eRpcTracing\u003c/code\u003ebean，作为RPC工具的基础，如gRPC或Dubbo。\u003c/p\u003e\n\u003cp\u003e如果需要定制客户端/服务器的RPC跟踪采样，只需注册一个\u003ccode\u003ebrave.sampler.SamplerFunction\u0026lt;RpcRequest\u0026gt;\u003c/code\u003e类型的bean，并将该bean命名为\u003ccode\u003esleuthRpcClientSampler\u003c/code\u003e用于客户端采样，\u003ccode\u003esleuthRpcServerSampler\u003c/code\u003e用于服务器采样。\u003c/p\u003e\n\u003cp\u003e为了方便起见，\u003ccode\u003e@RpcClientSampler\u003c/code\u003e和\u003ccode\u003e@RpcServerSampler\u003c/code\u003e注解可用于注入适当的Bean，或通过静态字符串\u003ccode\u003eNAME\u003c/code\u003e字段引用Bean名称。\u003c/p\u003e\n\u003cp\u003e例如。这里有一个采样器，每秒追踪100个 \u003ccode\u003eGetUserToken\u003c/code\u003e 服务器请求。这不会启动对健康检查服务请求的新追踪。其他请求将使用全局采样配置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan class=\"nd\"\u003e@Configuration\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproxyBeanMethods\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eConfig\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nd\"\u003e@Bean\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRpcServerSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eSamplerFunction\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRpcRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nf\"\u003emyRpcSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eMatcher\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRpcRequest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003euserAuth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eand\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserviceEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;users.UserService\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003emethodEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;GetUserToken\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e));\u003c/span\u003e\n      \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eRpcRuleSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003enewBuilder\u003c/span\u003e\u003cspan class=\"o\"\u003e().\u003c/span\u003e\u003cspan class=\"na\"\u003eputRule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eserviceEquals\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;grpc.health.v1.Health\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \u003cspan class=\"n\"\u003eSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eNEVER_SAMPLE\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n              \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eputRule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euserAuth\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eRateLimitingSampler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003ecreate\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e)).\u003c/span\u003e\u003cspan class=\"na\"\u003ebuild\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更多内容请见\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/rpc#sampling-policy\"\u003egithub.com/openzipkin/brave/tree/master/instrumentation/rpc#sampling-policy\u003c/a\u003e\u003c/p\u003e\n\u003ch4 id=\"6111-dubbo-rpc-support\"\u003e6.11.1. Dubbo RPC support\u003c/h4\u003e\n\u003cp\u003e通过与Brave的集成，Spring Cloud Sleuth支持\u003ca href=\"https://dubbo.apache.org/\"\u003eDubbo\u003c/a\u003e。只需添加\u003ccode\u003ebrave-instrumentation-dubbo\u003c/code\u003e的依赖关系即可。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eio.zipkin.brave\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003ebrave-instrumentation-dubbo\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你还需要设置一个\u003ccode\u003edubbo.properties\u003c/code\u003e文件，内容如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003edubbo.provider.filter=tracing\ndubbo.consumer.filter=tracing\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以阅读更多关于Brave - Dubbo整合的信息\u003ca href=\"https://github.com/openzipkin/brave/tree/master/instrumentation/dubbo-rpc\"\u003e这里\u003c/a\u003e。可以找到一个Spring Cloud Sleuth和Dubbo的例子\u003ca href=\"https://github.com/openzipkin/sleuth-webmvc-example/compare/add-dubbo-tracing\"\u003e这里\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"6112-grpc\"\u003e6.11.2. gRPC\u003c/h4\u003e\n\u003cp\u003eSpring Cloud Sleuth通过Brave追踪器为\u003ca href=\"https://grpc.io/\"\u003egRPC\u003c/a\u003e提供了工具。你可以通过设置\u003ccode\u003espring.sleuth.grpc.enabled\u003c/code\u003e为\u003ccode\u003efalse\u003c/code\u003e来完全禁用它。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVariant 1\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eDependencies\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003egRPC集成依赖于两个外部库来检测客户端和服务器，这两个库都必须在类的路径上，以实现检测。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e        \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eio.github.lognet\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003egrpc-spring-boot-starter\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eio.zipkin.brave\u003cspan class=\"nt\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n            \u003cspan class=\"nt\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003ebrave-instrumentation-grpc\u003cspan class=\"nt\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n        \u003cspan class=\"nt\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eServer Instrumentation\u003c/p\u003e\n\u003cp\u003eSpring Cloud Sleuth利用grpc-spring-boot-starter将Brave的gRPC服务器拦截器与所有用\u003ccode\u003e@GRpcService\u003c/code\u003e注解的服务进行注册。\u003c/p\u003e\n\u003cp\u003eClient Instrumentation\u003c/p\u003e\n\u003cp\u003egRPC客户端利用\u003ccode\u003eManagedChannelBuilder\u003c/code\u003e来构建\u003ccode\u003eManagedChannel\u003c/code\u003e，用于与gRPC服务器通信。本机的 \u003ccode\u003eManagedChannelBuilder\u003c/code\u003e 提供了静态方法作为构建 \u003ccode\u003eManagedChannel\u003c/code\u003e 实例的入口，然而，这种机制是在Spring应用环境的影响之外。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSpring Cloud Sleuth提供了一个 \u003ccode\u003eSpringAwareManagedChannelBuilder\u003c/code\u003e，可以通过Spring application context进行定制，并由gRPC客户端进行注入。\u003cstrong\u003e在创建 \u003ccode\u003eManagedChannel\u003c/code\u003e实例时，必须使用这个构建器\u003c/strong\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eSleuth创建了一个\u003ccode\u003eTracingManagedChannelBuilderCustomizer\u003c/code\u003e，将Brave的客户端拦截器注入到\u003ccode\u003eSpringAwareManagedChannelBuilder\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVariant 2\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/yidongnan/grpc-spring-boot-starter\"\u003eGrpc Spring Boot Starter\u003c/a\u003e自动检测Spring Cloud Sleuth和Brave的gRPC仪器的存在，并注册了必要的客户端和/或服务器工具。\u003c/p\u003e\n\u003ch3 id=\"612-rxjava\"\u003e6.12. RxJava\u003c/h3\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e我们注册了一个自定义的\u003ca href=\"https://github.com/ReactiveX/RxJava/wiki/Plugins#rxjavaschedulershook\"\u003e\u003ccode\u003eRxJavaSchedulersHook\u003c/code\u003e\u003c/a\u003e，将所有的\u003ccode\u003eAction0\u003c/code\u003e实例包裹在它们的Sleuth代表中，这被称为\u003ccode\u003eTraceAction\u003c/code\u003e。这个钩子要么开始，要么继续，取决于在Action被安排之前跟踪是否已经在进行。要禁用自定义的\u003ccode\u003eRxJavaSchedulersHook\u003c/code\u003e，将\u003ccode\u003espring.sleuth.rxjava.schedulers.hook.enabled\u003c/code\u003e设置为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e你可以为不希望创建跨度的线程名称定义一个正则表达式列表。要做到这一点，请在\u003ccode\u003espring.sleuth.rxjava.schedulers.ignoredthreads\u003c/code\u003e属性中提供一个逗号分隔的正则表达式列表。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e对反应式编程和Sleuth的建议方法是使用Reactor支持。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"613-spring-cloud-circuitbreaker\"\u003e6.13. Spring Cloud CircuitBreaker\u003c/h3\u003e\n\u003cp\u003e这个功能对所有追踪器的实现都是可用的。\u003c/p\u003e\n\u003cp\u003e如果你在classpath上有Spring Cloud CircuitBreaker，我们将把传递的命令\u003ccode\u003eSupplier\u003c/code\u003e和fallback的\u003ccode\u003eFunction\u003c/code\u003e包裹在它的跟踪表示中。为了禁用这个工具，请将\u003ccode\u003espring.sleuth.circuitbreaker.enabled\u003c/code\u003e设为\u003ccode\u003efalse\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"7-配置属性\"\u003e7. 配置属性\u003c/h2\u003e\n\u003cp\u003e要查看所有Spring Cloud Netflix相关配置属性的列表，请检查\u003ca href=\"https://docs.spring.io/spring-cloud-sleuth/docs/3.0.3/reference/htmlsingle/#common-application-properties\"\u003e附录页面\u003c/a\u003e。\u003c/p\u003e\n"
      })
      .add(
      {
        id: 11,
        href: "https://www.springcloud.io/docs/",
        title: "Docs",
        description: "Docs Doks.",
        content: ""
      })
      .add(
      {
        id: 12,
        href: "https://www.springcloud.io/docs/springcloud/",
        title: "SpringCloud",
        description: "SpringCloud中文文档",
        content: ""
      })
      ;

  userinput.addEventListener('input', show_results, true);
  suggestions.addEventListener('click', accept_suggestion, true);

  function show_results(){

    var value = this.value;
    var results = index.search(value, { limit: 5, index: ["content"], enrich: true });
    var entry, childs = suggestions.childNodes;
    var i = 0, len = results.length;

    suggestions.classList.remove('d-none');

    results.forEach(function(results) {

      entry = document.createElement('div');

      entry.innerHTML = '<a href><span></span><span></span></a>';

      a = entry.querySelector('a'),
      t = entry.querySelector('span:first-child'),
      d = entry.querySelector('span:nth-child(2)');

      // console.log(results);

      a.href = results.result[i].doc.href;
      t.textContent = results.result[i].doc.title;
      d.textContent = results.result[i].doc.description;

      suggestions.appendChild(entry);

    });

    while(childs.length > len){

        suggestions.removeChild(childs[i])
    }

  }

  function accept_suggestion(){

      while(suggestions.lastChild){

          suggestions.removeChild(suggestions.lastChild);
      }

      return false;
  }

}());
