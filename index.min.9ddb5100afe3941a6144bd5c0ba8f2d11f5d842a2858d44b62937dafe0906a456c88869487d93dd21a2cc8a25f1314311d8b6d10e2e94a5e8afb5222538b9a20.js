var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(a){a.keyCode===191&&(a.preventDefault(),userinput.focus()),a.keyCode===27&&(userinput.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var b=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});b.add({id:0,href:"https://www.springcloud.io/docs/springcloudstream/%E6%A6%82%E8%BF%B0/",title:"概述",description:"Spring Cloud Stream是一个框架，用于构建高度可扩展的事件驱动的微服务，与共享消息系统相连",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:1,href:"https://www.springcloud.io/docs/springcloudstream/rabbit-mq-binder/",title:"Rabbit MQ Binder",description:"",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:2,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-alibaba/",title:"Spring Cloud Alibaba",description:"Spring Cloud Alibaba为分布式应用开发提供了一个一站式解决方案。它包含了开发分布式应用所需的所有组件，使你能够轻松地使用Spring Cloud开发你的应用。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:3,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-bus/",title:"Spring Cloud Bus",description:"Spring Cloud Bus将分布式系统的节点与一个轻量级的消息代理联系起来。然后，这可以用来广播状态变化（如配置变化）或其他管理指令。该项目包括AMQP和Kafka代理的实现。另外，在classpath上找到的任何Spring Cloud Stream绑定器都可以作为传输工具开箱即用。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:4,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-circuit-breaker/",title:"Spring Cloud Circuit Breaker",description:"Spring Cloud Circuit breaker提供了一个跨越不同断路器实现的抽象。它提供了一个一致的API，可以在你的应用程序中使用，允许你的开发者选择最适合你的应用程序需求的断路器实现。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:5,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-config/",title:"Spring Cloud Config",description:"Spring Cloud Config为分布式系统中的外部化配置提供服务器和客户端支持。有了配置服务器，你就有了一个集中的地方来管理所有环境中的应用程序的外部属性。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:6,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-consul/",title:"Spring Cloud Consul",description:"Spring Cloud Consul通过自动配置和与Spring环境及其他Spring编程模型成语的绑定，为Spring Boot应用程序提供Consul集成。通过一些简单的注解，你可以快速启用和配置你的应用程序内的常见模式，并使用Hashicorp的Consul构建大型分布式系统。提供的模式包括服务发现、分布式配置和控制总线。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:7,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-gateway/",title:"Spring Cloud Gateway",description:"该项目提供了一个库，用于在Spring WebFlux之上构建API网关。Spring Cloud Gateway旨在提供一种简单而有效的方式来路由到API，并为其提供交叉关注，如：安全、监控/指标和弹性。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:8,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-kubernetes/",title:"Spring Cloud Kubernetes",description:"Spring Cloud Kubernetes提供了众所周知的Spring Cloud接口的实现，允许开发者在Kubernetes上构建和运行Spring Cloud应用。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:9,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-netflix/",title:"Spring Cloud Netflix",description:"Spring Cloud Netflix通过自动配置和绑定到Spring环境和其他Spring编程模型习语，为Spring Boot应用提供了Netflix OSS集成。通过一些简单的注释，您可以在应用程序中快速启用和配置通用模式，并使用经过实战考验的Netflix组件构建大型分布式系统。提供的模式包括服务发现(Eureka)、断路器(Hystrix)、智能路由(Zuul)和客户端负载均衡(Ribbon)。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:10,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-openfeign/",title:"Spring Cloud OpenFeign",description:"声明式REST客户端。Feign创建了一个用JAX-RS或Spring MVC注释装饰的接口的动态实现。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:11,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-security-/",title:"Spring Cloud Security",description:"Spring Cloud Security提供了一组原语来构建安全的应用程序和服务。一个可以在外部（或中央）进行大量配置的声明性模型，适合于实现由合作的远程组件组成的大型系统，通常有一个中央身份管理服务。它在Cloud Foundry这样的服务平台上也非常容易使用。在Spring Boot和Spring Security OAuth2的基础上，我们可以快速创建系统，实现单点登录、令牌中继和令牌交换等常见模式。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:12,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-sleuth/",title:"Spring Cloud Sleuth",description:"Spring Cloud Sleuth为分布式追踪提供了Spring Boot的自动配置。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:13,href:"https://www.springcloud.io/docs/springcloud/spring-cloud-zookeeper/",title:"Spring Cloud Zookeeper",description:"Spring Cloud Zookeeper通过自动配置和与Spring环境及其他Spring编程模型成语的绑定，为Spring Boot应用程序提供Apache Zookeeper集成。通过几个简单的注解，你可以在你的应用程序中快速启用和配置常见的模式，并用Zookeeper构建大型分布式系统。所提供的模式包括服务发现和分布式配置。。",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:14,href:"https://www.springcloud.io/docs/",title:"Docs",description:"Docs Doks.",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:15,href:"https://www.springcloud.io/docs/springcloudstream/",title:"Spring Cloud Stream",description:"Spring Cloud Stream 中文文档",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}).add({id:16,href:"https://www.springcloud.io/docs/springcloud/",title:"SpringCloud",description:"SpringCloud中文文档",content:'\u003cp\u003e最新文档\u003c/p\u003e\n\u003cp\u003e\u003ca href="https://doc.springcloud.io"\u003ehttps://doc.springcloud.io\u003c/a\u003e\u003c/p\u003e\n'}),userinput.addEventListener('input',c,!0),suggestions.addEventListener('click',e,!0);function c(){var h=this.value,f=b.search(h,{limit:5,index:["content"],enrich:!0}),g=suggestions.childNodes,e=0,i=f.length,c;for(suggestions.classList.remove('d-none'),f.forEach(function(b){c=document.createElement('div'),c.innerHTML='<a href><span></span><span></span></a>',a=c.querySelector('a'),t=c.querySelector('span:first-child'),d=c.querySelector('span:nth-child(2)'),a.href=b.result[e].doc.href,t.textContent=b.result[e].doc.title,d.textContent=b.result[e].doc.description,suggestions.appendChild(c)});g.length>i;)suggestions.removeChild(g[e])}function e(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()